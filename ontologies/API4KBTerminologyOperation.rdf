<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rdf:RDF [
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY dct "http://purl.org/dc/terms/" >
    <!ENTITY skos "http://www.w3.org/2004/02/skos/core#" >
    <!ENTITY sm "http://www.omg.org/techprocess/ab/SpecificationMetadata/" >
    <!ENTITY ontoiop-trm "http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/" >
    <!ENTITY apiforkb-trm "http://www.omg.org/spec/API4KB/API4KBTerminology/" >
    <!ENTITY apiforkb-op "http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBOperation/" >
    <!ENTITY apiforkb-ev "http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/" >
    <!ENTITY apiforkb-pro "http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/" >
    <!ENTITY apiforkb-try     "http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBTry/" >
]>

<rdf:RDF xml:base="&apiforkb-op;"
  xmlns:rdf="&rdf;"
  xmlns:rdfs="&rdfs;"
  xmlns:owl="&owl;"
  xmlns:xsd="&xsd;"
  xmlns:dct="&dct;"
  xmlns:skos="&skos;"
  xmlns:sm="&sm;"
  xmlns:ontoiop-trm="&ontoiop-trm;"
  xmlns:apiforkb-trm="&apiforkb-trm;"
  xmlns:apiforkb-op="&apiforkb-op;"
  xmlns:apiforkb-ev="&apiforkb-ev;"
  xmlns:apiforkb-pro="&apiforkb-pro;"
  xmlns:apiforkb-try="&apiforkb-try;">
  
    <owl:Ontology rdf:about="&apiforkb-op;">
        <rdfs:label>API4KB Operation Terminology Ontology</rdfs:label>


    <!-- Curation and Rights Metadata for the API4KB Operation Terminology Ontology -->

        <sm:copyright rdf:datatype="&xsd;string">Copyright (c) 2014 Athan Services
Copyright (c) 2014 Thematix Partners LLC
Copyright (c) 2014 Object Management Group, Inc.</sm:copyright>
        <dct:license rdf:datatype="&xsd;anyURI">http://www.omg.org/techprocess/ab/SpecificationMetadata/MITLicense</dct:license>


    <!-- Ontology/File-Level Metadata for the API4KB Operation Terminology Ontology -->

        <sm:filename rdf:datatype="&xsd;string">API4KBTerminologyOperation.rdf</sm:filename>
        <sm:fileAbbreviation rdf:datatype="&xsd;string">api4kb-op</sm:fileAbbreviation>
        <owl:versionIRI rdf:resource="http://www.omg.org/spec/API4KB/20150201/API4KBTerminology/API4KBOperation/"/>
        <sm:fileAbstract rdf:datatype="&xsd;string">This ontology covers terminology used for describing the operations defined by the API4KB specification.</sm:fileAbstract>

        <sm:contentLanguage rdf:datatype="&xsd;anyURI">http://www.w3.org/standards/techs/owl#w3c_all</sm:contentLanguage>
        <sm:contentLanguage rdf:datatype="&xsd;anyURI">http://www.omg.org/spec/ODM/</sm:contentLanguage>

        <owl:imports rdf:resource="http://www.omg.org/techprocess/ab/SpecificationMetadata/"/>
        <owl:imports rdf:resource="http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/"/>
      
    </owl:Ontology>

  <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
   -->

  <owl:ObjectProperty rdf:about="&apiforkb-op;hasInput">
    <rdfs:label>has input</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">input of an operation</skos:definition>
    <rdfs:domain rdf:resource="&apiforkb-op;Operation"/>
    <owl:inverseOf rdf:resource="&apiforkb-op;isInputOf"/>
    <owl:propertyChainAxiom rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-trm;hasEvent"/>
      <rdf:Description rdf:about="&apiforkb-ev;hasInput"/>
    </owl:propertyChainAxiom>
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-op;isInputOf">
    <rdfs:label>is input of</rdfs:label>
  </owl:ObjectProperty>  
  
  <owl:ObjectProperty rdf:about="&apiforkb-op;hasOutput">
    <rdfs:label>has output</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">output of an operation event</skos:definition>
    <rdfs:domain rdf:resource="&apiforkb-op;Operation"/>
    <owl:inverseOf rdf:resource="&apiforkb-op;isOutputOf"/>
    <owl:propertyChainAxiom rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-trm;hasEvent"/>
      <rdf:Description rdf:about="&apiforkb-ev;hasOutput"/>
    </owl:propertyChainAxiom>
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-op;isOutputOf">
    <rdfs:label>is output of</rdfs:label>
  </owl:ObjectProperty>
  
  <!-- need hasKPOutput -->
  
  <owl:ObjectProperty rdf:about="&apiforkb-op;appliesQuery">
    <rdfs:label>applies query resource</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">TBD</skos:definition>
    <rdfs:domain rdf:resource="&apiforkb-op;QueryingOperation"/>
    <rdfs:range rdf:resource="&ontoiop-trm;QuerySource"/>    
    <rdfs:subPropertyOf rdf:resource="&apiforkb-op;hasInput"/>
    <skos:note>need property chain</skos:note>    
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-op;appliesQueryTo">
    <rdfs:label>applies query to resource</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">TBD</skos:definition>
    <rdfs:domain rdf:resource="&apiforkb-op;QueryingOperation"/>
    <rdfs:range rdf:resource="&ontoiop-trm;KnowledgeSource"/>    
    <rdfs:subPropertyOf rdf:resource="&apiforkb-op;hasInput"/>
    <skos:note>need property chain</skos:note>    
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-op;adds">
    <rdfs:label>adds resource</rdfs:label>
    <rdfs:domain rdf:resource="&apiforkb-op;AddingOperation"/>
    <rdfs:range rdf:resource="&apiforkb-trm;KnowledgeSource"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-op;hasInput"/>
    <skos:note>need property chain</skos:note>    
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-op;addsTo">
    <rdfs:label>adds resource</rdfs:label>
    <rdfs:domain rdf:resource="&apiforkb-op;AddingOperation"/>
    <rdfs:range rdf:resource="&apiforkb-trm;KnowledgeSource"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-op;hasInput"/>
    <skos:note>need property chain</skos:note>    
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-op;hasOutputFromInStreaming">
    <rdfs:label>has output from instreaming</rdfs:label>
    <rdfs:domain rdf:resource="&apiforkb-op;InStreamAction"/>
    <rdfs:range rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-op;hasOutput"/>
    <skos:note>need property chain</skos:note>    
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-op;hasOutputFromUnmarshalling">
    <rdfs:label>has output from unmarshalling</rdfs:label>
    <rdfs:domain rdf:resource="&apiforkb-op;UnmarshallingAction"/>
    <rdfs:range rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-op;hasOutput"/>
    <skos:note>need property chain</skos:note>    
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-op;hasOutputFromParsing">
    <rdfs:label>has output from parsing</rdfs:label>
    <rdfs:domain rdf:resource="&apiforkb-op;ParsingAction"/>
    <rdfs:range rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-op;hasOutput"/>
    <skos:note>need property chain</skos:note>    
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-op;hasOutputFromConceptualizing">
    <rdfs:label>has output from conceptualizing</rdfs:label>
    <rdfs:domain rdf:resource="&apiforkb-op;ConceptualizingAction"/>
    <rdfs:range rdf:resource="&apiforkb-trm;KnowledgeAsset"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-op;hasOutput"/>
    <skos:note>need property chain</skos:note>    
  </owl:ObjectProperty>
  
  
  <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->
  
  <owl:Class rdf:about="&apiforkb-op;Operation">
    <rdfs:label>operation</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">function (possibly with side-effects) having inputs and outputs that are API4KB or OntoIOp concepts.</skos:definition>
    <skos:note rdf:datatype="&xsd;string">Option 1. the definition as &quot;function&quot; means that its a black-box standard. We may define the post-conditions by a reference decomposition into actions, but there is no normative requirement for applications to execute according to that decomposition.
      
      Option 2. at the other extreme, the decomposition could also be consider normative.
      
      Option 3. something in between.</skos:note>
    <skos:scopeNote rdf:datatype="&xsd;string">Each API4KB Interface is a subclass of Operation.</skos:scopeNote>
    <skos:scopeNote rdf:datatype="&xsd;string">This class contains only API4KB Operation.</skos:scopeNote>
    <skos:editorialNote rdf:datatype="&xsd;string">is there a super-class for Operation in some OMG standard?</skos:editorialNote>
    <rdfs:subClassOf>
          <owl:Restriction>
            <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
            <owl:allValuesFrom rdf:resource="&apiforkb-ev;Event"/>
          </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointUnionOf rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-op;SideEffectFreeOperation"/>
      <rdf:Description rdf:about="&apiforkb-op;SideEffectfulOperation"/>
    </owl:disjointUnionOf>
    <owl:disjointUnionOf rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-op;InternalOperation"/>
      <rdf:Description rdf:about="&apiforkb-op;PublicOperation"/>
    </owl:disjointUnionOf>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-op;SideEffectFreeOperation">
    <rdfs:label>side-effect-free operation</rdfs:label>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Operation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;SideEffectFreeEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;SideEffectfulOperation">
    <rdfs:label>side-effectful operation</rdfs:label>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Operation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;SideEffectfulEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;UnaryOperation">
    <rdfs:label>unary operation</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">unary operation</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Operation"/>
    <rdfs:subClassOf>
          <owl:Restriction>
            <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
            <owl:allValuesFrom rdf:resource="&apiforkb-ev;UnaryEvent"/>
          </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class> 
  
  <owl:Class rdf:about="&apiforkb-op;InternalOperation">
    <rdfs:label>internal operation</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">operation offered by the knowledge platform to the proxy.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Operation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;InternalEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointWith
      rdf:resource="&apiforkb-op;PublicOperation"/>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;Action">
    <rdfs:label>action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">a unary atomic internal operation</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;InternalOperation"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;UnaryOperation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;ActionEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  
  <owl:Class rdf:about="&apiforkb-op;PublicOperation">
    <rdfs:label>public operation</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">operation that is exposed by the proxy to the client.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Operation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;PublicEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
   
  
  
  <!-- Lowering Actions -->
  
  <owl:Class rdf:about="&apiforkb-op;LoweringAction">
    <rdfs:label>lowering action</rdfs:label>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Action"/>
    <skos:definition rdf:datatype="&xsd;string">action that maps a knowledge resource to another knowledge resource of the same &quot;type&quot; (i.e. OMS, Query, Result), belongs to the next lower level of abstraction in the knowledge resource hierarchy, and has the same information content.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Action"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;SideEffectFreeOperation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;LoweringEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointUnionOf rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-op;OutStreamingAction"/>
      <rdf:Description rdf:about="&apiforkb-op;MarshallingAction"/>
      <rdf:Description rdf:about="&apiforkb-op;ManifestingAction"/>
      <rdf:Description rdf:about="&apiforkb-op;ExpressingAction"/>
    </owl:disjointUnionOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;ExpressingAction">
    <rdfs:label>expressing action</rdfs:label>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;LoweringAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;ExpressingEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeAsset"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  
  
  <owl:Class rdf:about="&apiforkb-op;ManifestingAction">
    <rdfs:label>manifesting action</rdfs:label>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;LoweringAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;ManifestingEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;MarshallingAction">
    <rdfs:label>marshalling action</rdfs:label>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;LoweringAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;MarshallingEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;OutStreamingAction">
    <rdfs:label>outstreaming action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">lifting action that maps knowledge items into knowledge encodings.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;LoweringAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;OutStreamingEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeItem"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  
  <owl:Class rdf:about="&apiforkb-op;LiftingAction">
    <rdfs:label>lifting action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">action whose input is a knowledge resource and whose output is a knowledge resource of the same &quot;type&quot; (i.e. OMS, Query, Result), belongs to the next higher level of abstraction in the knowledge resource hierarchy and has the same information content.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Action"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;SideEffectFreeOperation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;LiftingEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointUnionOf rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-op;InStreamingAction"/>
      <rdf:Description rdf:about="&apiforkb-op;UnmarshallingAction"/>
      <rdf:Description rdf:about="&apiforkb-op;ParsingAction"/>
      <rdf:Description rdf:about="&apiforkb-op;ConceptualizingAction"/>
    </owl:disjointUnionOf>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-op;InStreamingAction">
    <rdfs:label>instreaming action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">lifting action that maps knowledge items into knowledge encodings.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;LiftingAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;InStreamingEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeItem"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  
  <owl:Class rdf:about="&apiforkb-op;UnmarshallingAction">
    <rdfs:label>unmarshalling action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">lifting action that maps knowledge encodings into knowledge manifestations.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;LiftingAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;UnmarshallingEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;ParsingAction">
    <rdfs:label>parsing action</rdfs:label>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;LiftingAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;ParsingEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;ConceptualizingAction">
    <rdfs:label>conceptualizing action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">lifting action that transforms generalized expressions to knowledge assets.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;LiftingAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;ConceptualizingEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeAsset"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  

  <owl:Class rdf:about="&apiforkb-op;HorizontalAction">
    <rdfs:label>horizontal action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">side-effect-free action whose input is a knowledge resource and whose output is a knowledge resource of the same level of abstraction in the knowledge resource hierarchy.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Action"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;SideEffectFreeOperation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;HorizontalEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointUnionOf rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-op;HorizontalAssetAction"/>
      <rdf:Description rdf:about="&apiforkb-op;HorizontalExpressionAction"/>
      <rdf:Description rdf:about="&apiforkb-op;HorizontalManifestationAction"/>
      <rdf:Description rdf:about="&apiforkb-op;HorizontalEncodingAction"/>
      <rdf:Description rdf:about="&apiforkb-op;HorizontalItemAction"/>
    </owl:disjointUnionOf>    
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-op;HorizontalAssetAction">
    <rdfs:label>horizontal asset action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">horizontal action whose inputs and outputs are knowledge assets.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;HorizontalAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;HorizontalAssetEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeAsset"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeAsset"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;HorizontalExpressionAction">
    <rdfs:label>horizontal expression action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">horizontal action whose inputs and outputs are generalized expressions.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;HorizontalAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;HorizontalExpressionEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-op;HorizontalManifestationAction">
    <rdfs:label>horizontal manifestation action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">horizontal action whose inputs and outputs are knowledge expressions.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;HorizontalAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;HorizontalManifestationEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-op;HorizontalEncodingAction">
    <rdfs:label>horizontal encoding action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">horizontal action whose inputs and outputs are knowledge expressions.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;HorizontalAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;HorizontalEncodingEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;HorizontalItemAction">
    <rdfs:label>horizontal item action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">horizontal action whose inputs and outputs are knowledge expressions.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;HorizontalAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;HorizontalItemEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeItem"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeItem"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  
  <owl:Class rdf:about="&apiforkb-op;Action-AdditionTo">
    <rdfs:label>action - addition to</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">curried action that maps knowledge resources into extended knowledge resources.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;HorizontalAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;ActionEvent-AdditionOf"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-op;Action-AdditionToKnowledgeExpression">
    <rdfs:label>action - addition to knowledge expression</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">'addition to' action that maps knowledge expressions into knowledge expressions.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Action-AdditionTo"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;HorizontalExpressionAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;ActionEvent-AdditionToKnowledgeExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;Action-ResourceIn">
    <rdfs:label>action - resource in</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">action that maps knowledge resources into other things.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Action"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;ActionEvent-ResourceIn"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  

  <owl:Class rdf:about="&apiforkb-op;Action-ExpressionIn">
    <rdfs:label>action - item in</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">action that has inputs of only knowledge expressions.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Action-ResourceIn"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;ActionEvent-ExpressionIn"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;CurriedAction">
    <rdfs:label xml:lang="en">curried action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">side-effect free action that maps to an action</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Action"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;SideEffectFreeOperation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;CurriedActionEvent"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-op;Action"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  

  <owl:Class rdf:about="&apiforkb-op;CurriedAction-HorizontalExpressionActionOut">
    <rdfs:label xml:lang="en">curried action - horizontal expression action out</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">curried action whose output is a horizontal expression actionn</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;CurriedAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;CurriedActionEvent-HorizontalExpressionActionOut"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-op;HorizontalExpressionAction"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;Action-AdditionOf">
    <rdfs:label>action - addition of</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">curried action that maps knowledge expressions into 'addition to' actions.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Action-ExpressionIn"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;CurriedAction-HorizontalExpressionActionOut"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;ActionEvent-AdditionOf"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;ActionEvent-AdditionTo"/>
      </owl:Restriction>
    </rdfs:subClassOf>    
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-op;VoidAction">
    <rdfs:label xml:lang="en">void action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">side-effectful action whose output is void</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Action"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;SideEffectfulOperation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-op;Void"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  
  <!-- Internal Operations -->

  <owl:Class rdf:about="&apiforkb-op;InternalAddingOperation-KnowledgeResourceToImmutableKB">
    <rdfs:label>internal operation adding knowledge resources to immutable KBs</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">internal operation adding knowlede
      resources to immutable knowledge bases</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;InternalOperation"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;AddingOperation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;InternalAddingEvent-KnowledgeResourceToImmutableKB"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;adds"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;addsTo"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>    
  </owl:Class>  
    
  <owl:Class rdf:about="&apiforkb-op;InternalAddingOperation-FocusedItemToImmutableKB">
    <rdfs:label>operation adding knowledge resources that are focused items to immutable KBs</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">operation adding knowledge resources that are focused items to immutable KBs</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;InternalAddingOperation-KnowledgeResourceToImmutableKB"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;hasEvent"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-ev;InternalAddingEvent-FocusedItemToImmutableKB"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;adds"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;FocusedItem"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    
  </owl:Class>
  

  <owl:Class rdf:about="&apiforkb-op;HorizontalAction-FocusedAssetIn-ResultAssetOut">
    <rdfs:label>horizontal action - focused asset in - answer substitution collection out</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">horizontal action that maps focused assets to result assets.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;HorizontalAssetAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;FocusedAsset"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;ResultAsset"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  

  <owl:Class rdf:about="&apiforkb-op;QueryingResourceAction">
    <rdfs:label>querying action</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">curried action that maps queries to horizontal operations that maps focused assets to result assests.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;CurriedAction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasInput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;QueryResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-op;HorizontalAction-FocusedAssetIn-ResultAssetOut"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <!-- Public Operation -->
  
  <owl:Class rdf:about="&apiforkb-op;PublicAddingOperation-KnowledgeResourceToImmutableKB">
    <rdfs:label>operation adding knowledge resources to immutable KBs</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">public operation adding knowlede
      resources to immutable knowledge bases returning an immutable knowledge base</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;PublicOperation"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;AddingOperation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;adds"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;adds"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>    
  </owl:Class>  

  <owl:Class rdf:about="&apiforkb-op;PublicAddingOperation-KnowledgeSourceToMutableKB">
    <rdfs:label>public operation adding knowledge sources to mutable KBs</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">public operation adding knowledge
      sources to mutable KBs</skos:definition>
    <dct:abstract/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;PublicOperation"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;AddingOperation"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;SideEffectfulOperation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;adds"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeSource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;addsTo"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;MutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  

  <owl:Class rdf:about="&apiforkb-op;AddingOperation">
    <rdfs:label>adding operation</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">public or internal adding operation</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;Operation"/>
  </owl:Class>  
  
  
  <owl:Class rdf:about="&apiforkb-op;QueryingOperation-KnowledgeResourceToImmutableKB">
    <rdfs:label>operation applying query resources to immutable KBs</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">public operation applying query resources to immutable KBs returning a result resource</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-op;PublicOperation"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;appliesQuery"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;QueryResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;appliesQueryTo"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;ImmutableKB"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-op;hasOutput"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;ResultResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
    
</rdf:RDF>
