Prefix(:=<http://www.omg.org/spec/API4KP/KP#>)
Prefix(kp:=<http://www.omg.org/spec/API4KP/KP#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(know:=<http://www.omg.org/spec/API4KP/core#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(skos:=<http://www.w3.org/2004/02/skos/core#>)


Ontology(<http://www.omg.org/spec/API4KP/KP>
<http://www.omg.org/spec/API4KP/2017/12/KP>
Annotation(rdfs:comment "API4KP Ontology of Knowledge Platforms")

Declaration(Class(kp:DeployedSoftware))
Declaration(Class(kp:ExecutionEnvironment))
Declaration(Class(kp:KnowledgePlatform))
Declaration(Class(kp:KnowledgePlatformModule))
Declaration(Class(kp:Server))
Declaration(Class(kp:SoftwareExecution))
Declaration(Class(know:Activity))
Declaration(Class(know:Agent))
Declaration(Class(know:KnowledgeActivity))
Declaration(Class(know:KnowledgeArtifact))
Declaration(Class(know:KnowledgeEndeavour))
Declaration(Class(know:KnowledgeExpression))
Declaration(Class(know:MachineReadableLanguage))
Declaration(Class(know:Software))
Declaration(ObjectProperty(kp:deployment-of))
Declaration(ObjectProperty(kp:executes))
Declaration(ObjectProperty(kp:hosts))
Declaration(ObjectProperty(kp:instantiation-of))
Declaration(ObjectProperty(kp:runs))
Declaration(ObjectProperty(kp:sustains))
Declaration(ObjectProperty(know:internally-represents))
Declaration(ObjectProperty(know:part-of))
Declaration(ObjectProperty(know:performs))
Declaration(ObjectProperty(know:uses-language))
Declaration(AnnotationProperty(skos:altLabel))
Declaration(AnnotationProperty(skos:definition))
Declaration(AnnotationProperty(skos:example))
Declaration(AnnotationProperty(skos:note))
Declaration(AnnotationProperty(skos:scopeNote))

############################
#   Object Properties
############################

# Object Property: kp:deployment-of (deployment of)

AnnotationAssertion(rdfs:label kp:deployment-of "deployment of")
ObjectPropertyDomain(kp:deployment-of kp:DeployedSoftware)
ObjectPropertyRange(kp:deployment-of know:Software)

# Object Property: kp:executes (executes)

AnnotationAssertion(rdfs:label kp:executes "executes")
AnnotationAssertion(skos:definition kp:executes "The relationship between an environment that provides the computational resources (e.g. CPU, memory, I/O) which enable the act of executing the instructions specified by some software, and that act.")
ObjectPropertyDomain(kp:executes kp:ExecutionEnvironment)
ObjectPropertyRange(kp:executes kp:SoftwareExecution)

# Object Property: kp:hosts (kp:hosts)

AnnotationAssertion(skos:definition kp:hosts "The relationship between an execution environment, and a software that has been launched and/or deployed in that environment")
ObjectPropertyDomain(kp:hosts kp:ExecutionEnvironment)
ObjectPropertyRange(kp:hosts kp:DeployedSoftware)

# Object Property: kp:instantiation-of (instantiation of)

AnnotationAssertion(rdfs:comment kp:instantiation-of "The relationship between a Software Execution, and the Software that was run during that execution")
AnnotationAssertion(rdfs:label kp:instantiation-of "instantiation of")
ObjectPropertyDomain(kp:instantiation-of kp:SoftwareExecution)
ObjectPropertyRange(kp:instantiation-of know:Software)

# Object Property: kp:runs (kp:runs)

AnnotationAssertion(skos:definition kp:runs "The relationship that holds between an execution environment, and any software (code) that is being run on that environment at a given point in time.

More specifically, an environment runs a software if there is an execution activity in progress that uses computational resources of that environment to execute a program, as specified by the instructions in the software source code.")
ObjectPropertyDomain(kp:runs kp:ExecutionEnvironment)
ObjectPropertyRange(kp:runs know:Software)

# Object Property: kp:sustains (kp:sustains)

AnnotationAssertion(rdfs:comment kp:sustains "The relationship between the execution of a software by a (virtual) machine, and its \"phenotypical\" manifestation")
ObjectPropertyDomain(kp:sustains kp:SoftwareExecution)
ObjectPropertyRange(kp:sustains kp:DeployedSoftware)

# Object Property: know:internally-represents (know:internally-represents)

ObjectPropertyDomain(know:internally-represents kp:DeployedSoftware)



############################
#   Classes
############################

# Class: kp:DeployedSoftware (Deployed Software Module)

AnnotationAssertion(rdfs:comment kp:DeployedSoftware "test")
AnnotationAssertion(rdfs:label kp:DeployedSoftware "Deployed Software")
AnnotationAssertion(rdfs:label kp:DeployedSoftware "Deployed Software Module")
AnnotationAssertion(skos:definition kp:DeployedSoftware "A packaged copy of a Software, which has been deployed (installed) on some Execution Environment")
SubClassOf(kp:DeployedSoftware know:KnowledgeArtifact)
SubClassOf(kp:DeployedSoftware ObjectSomeValuesFrom(kp:deployment-of know:Software))

# Class: kp:ExecutionEnvironment (Execution Environment)

AnnotationAssertion(rdfs:label kp:ExecutionEnvironment "Execution Environment")
AnnotationAssertion(skos:definition kp:ExecutionEnvironment "General concept that abstracts hardware, OS, Virtual Machines, Containers, or combinations thereof")
SubClassOf(kp:ExecutionEnvironment ObjectSomeValuesFrom(kp:hosts kp:DeployedSoftware))
SubClassOf(kp:ExecutionEnvironment ObjectSomeValuesFrom(kp:runs know:Software))

# Class: kp:KnowledgePlatform (Knowledge Platform)

AnnotationAssertion(rdfs:label kp:KnowledgePlatform "Knowledge Platform")
EquivalentClasses(kp:KnowledgePlatform ObjectIntersectionOf(kp:ExecutionEnvironment ObjectSomeValuesFrom(kp:hosts ObjectIntersectionOf(kp:KnowledgePlatformModule ObjectSomeValuesFrom(know:performs know:KnowledgeActivity)))))
SubClassOf(kp:KnowledgePlatform kp:ExecutionEnvironment)

# Class: kp:KnowledgePlatformModule (Knowledge Platform Module)

AnnotationAssertion(rdfs:label kp:KnowledgePlatformModule "Knowledge Platform Component")
AnnotationAssertion(rdfs:label kp:KnowledgePlatformModule "Knowledge Platform Module")
SubClassOf(kp:KnowledgePlatformModule kp:Server)
SubClassOf(kp:KnowledgePlatformModule know:Agent)
SubClassOf(kp:KnowledgePlatformModule ObjectSomeValuesFrom(know:internally-represents know:KnowledgeEndeavour))
SubClassOf(kp:KnowledgePlatformModule ObjectSomeValuesFrom(know:part-of kp:KnowledgePlatform))
SubClassOf(kp:KnowledgePlatformModule ObjectSomeValuesFrom(know:performs know:KnowledgeActivity))

# Class: kp:Server (kp:Server)

SubClassOf(kp:Server kp:DeployedSoftware)

# Class: kp:SoftwareExecution (Software Execution)

AnnotationAssertion(rdfs:comment kp:SoftwareExecution "The process by which a (virtual) machine interpretes and executes the instructions that are fragments of a Software.")
AnnotationAssertion(rdfs:label kp:SoftwareExecution "Software Execution")
SubClassOf(kp:SoftwareExecution know:Activity)
SubClassOf(kp:SoftwareExecution ObjectSomeValuesFrom(kp:sustains kp:DeployedSoftware))


SubObjectPropertyOf(ObjectPropertyChain(kp:executes kp:instantiation-of) kp:runs)
SubObjectPropertyOf(ObjectPropertyChain(kp:executes kp:sustains) kp:hosts)
SubObjectPropertyOf(ObjectPropertyChain(kp:executes kp:sustains kp:deployment-of) kp:runs)
SubObjectPropertyOf(ObjectPropertyChain(kp:hosts kp:deployment-of) kp:runs)
SubObjectPropertyOf(ObjectPropertyChain(kp:sustains kp:deployment-of) kp:instantiation-of)
)