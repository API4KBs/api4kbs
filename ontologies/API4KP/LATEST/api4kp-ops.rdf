<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rdf:RDF [
	<!ENTITY api4kp "https://www.omg.org/spec/API4KP/api4kp/">
	<!ENTITY dct "http://purl.org/dc/terms/">
	<!ENTITY dol "http://www.omg.org/spec/DOL/DOL-terms/">
	<!ENTITY krr "https://www.omg.org/spec/API4KP/api4kp-krr/">	
	<!ENTITY ops "https://www.omg.org/spec/API4KP/api4kp-ops/">	
	<!ENTITY lcc-lr "https://www.omg.org/spec/LCC/Languages/LanguageRepresentation/">
	<!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#">
	<!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#">
	<!ENTITY owl "http://www.w3.org/2002/07/owl#">
	<!ENTITY skos "http://www.w3.org/2004/02/skos/core#">
	<!ENTITY sm "http://www.omg.org/techprocess/ab/SpecificationMetadata/">
	<!ENTITY xsd "http://www.w3.org/2001/XMLSchema#">
]>

<rdf:RDF xml:base="https://www.omg.org/spec/API4KP/api4kp-ops/"
    xmlns:api4kp="https://www.omg.org/spec/API4KP/api4kp/"
	xmlns:dct="http://purl.org/dc/terms/"
	xmlns:dol="http://www.omg.org/spec/DOL/DOL-terms/"
	xmlns:krr="https://www.omg.org/spec/API4KP/api4kp-krr/"
	xmlns:ops="https://www.omg.org/spec/API4KP/api4kp-ops/"
    xmlns:lcc-lr="https://www.omg.org/spec/LCC/Languages/LanguageRepresentation/"
	xmlns:owl="http://www.w3.org/2002/07/owl#"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
	xmlns:skos="http://www.w3.org/2004/02/skos/core#"
	xmlns:sm="http://www.omg.org/techprocess/ab/SpecificationMetadata/"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema#">
	
	<owl:Ontology rdf:about="https://www.omg.org/spec/API4KP/api4kp-ops/">
		<rdfs:label>Ontology of API4KP Operations</rdfs:label>
        <dct:abstract>TODO</dct:abstract>
        <dct:creator>Davide Sottara (sottara.davide@mayo.edu)</dct:creator>
		<dct:license rdf:datatype="&xsd;anyURI">http://opensource.org/licenses/MIT</dct:license>
        <sm:copyright>Copyright (c) 2014-2020 88 Solutions</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Adaptive</sm:copyright>
        <sm:copyright>Copyright (c) 2014-2020 Athan Services</sm:copyright>
        <sm:copyright>Copyright (c) 2014-2020 Arizona State University</sm:copyright>
	    <sm:copyright>Copyright (c) 2014-2020 Fraunhofer FOKUS</sm:copyright>
        <sm:copyright>Copyright (c) 2014-2020 Freie Universitat Berlin</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Mayo Clinic</sm:copyright>
	    <sm:copyright>Copyright (c) 2019-2020 Micro Focus</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Model Driven Solutions</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Thematix Partners LLC</sm:copyright>
		<sm:copyright>Copyright (c) 2015-2020 Object Management Group, Inc.</sm:copyright>
		<sm:contentLanguage rdf:datatype="&xsd;anyURI">http://www.w3.org/standards/techs/owl#w3c_all</sm:contentLanguage>
		<sm:dependsOn rdf:datatype="&xsd;anyURI">https://www.omg.org/spec/LCC/</sm:dependsOn>
		<sm:dependsOn rdf:datatype="&xsd;anyURI">https://www.omg.org/spec/DOL/</sm:dependsOn>
		<sm:dependsOn rdf:datatype="&xsd;anyURI">https://www.omg.org/spec/API4KP/api4kp/</sm:dependsOn>
		<sm:dependsOn rdf:datatype="&xsd;anyURI">https://www.omg.org/spec/API4KP/api4kp-krr/</sm:dependsOn>
		<sm:filename>api4kp-ops.rdf</sm:filename>
		<sm:fileAbbreviation>ops</sm:fileAbbreviation>
        <owl:imports rdf:resource="http://www.omg.org/techprocess/ab/SpecificationMetadata/"/>
        <owl:imports rdf:resource="https://www.omg.org/spec/LCC/Languages/LanguageRepresentation/"/>
        <owl:imports rdf:resource="http://www.omg.org/spec/DOL/DOL-terms/"/>
        <owl:imports rdf:resource="https://www.omg.org/spec/API4KP/api4kp/"/>
        <owl:imports rdf:resource="https://www.omg.org/spec/API4KP/api4kp-krr/"/>
        <owl:versionIRI rdf:resource="https://www.omg.org/spec/API4KP/SNAPSHOT/api4kp-ops/"/>
    </owl:Ontology>
	

    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <owl:ObjectProperty rdf:about="&ops;commences-with">
        <rdfs:subPropertyOf rdf:resource="&api4kp;associated-to"/>
        <rdfs:domain rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:range rdf:resource="&api4kp;InformationProcessingTask"/>
        <owl:propertyChainAxiom rdf:parseType="Collection">
            <rdf:Description rdf:about="&api4kp;defined-by"/>
            <rdf:Description rdf:about="&ops;initiated-by"/>
        </owl:propertyChainAxiom>
        <rdfs:label>commences with</rdfs:label>
        <skos:definition>A task T commences with a given subtask S if T is defined by a plan P that is initiated by S</skos:definition>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ops;composed-into">
        <owl:inverseOf rdf:resource="&ops;composed-with"/>
        <rdfs:domain rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:range rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:label>then</rdfs:label>
        <rdfs:seeAlso>F is composed into G if F is applied, and the G is applied to its result.
I.e. F =&gt; G, or G( F( x ) )</rdfs:seeAlso>
        <skos:altLabel>composed into</skos:altLabel>
        <skos:scopeNote>An activity A1 can be followed by another activity A2 if the situation that is the outcome of A1 is subsumed by the situation that defines the preconditions for the applicability of A2.

This notion of sequencing is reflected at the conceptual level by the &apos;composed into&apos; relationship, which assumes that the successful completion of a Task T1 allows for the execution of Task T2. Moreover, the definition of T2 is supposed to handle any failure of T1 gracefully, possibly by delegation and/or compensation</skos:scopeNote>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ops;composed-with">
        <rdfs:domain rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:range rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:label>o</rdfs:label>
        <rdfs:seeAlso>https://en.wikipedia.org/wiki/Function_composition</rdfs:seeAlso>
        <skos:altLabel>composed with</skos:altLabel>
        <skos:definition>G is composed with F if G is applied to the result of the application of F
i.e. G o F , or G( F ( x ) )</skos:definition>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ops;configures">
        <rdfs:domain rdf:resource="&ops;ConfigurationParameter"/>
        <rdfs:range rdf:resource="&api4kp;KnowledgeProcessingMethod"/>
        <rdfs:label>configures</rdfs:label>
        <skos:definition>A parameter configures a method by fixing one of the degrees of freedom that the method allows</skos:definition>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ops;encapsulates">
        <rdfs:subPropertyOf rdf:resource="&ops;has-primary-subtask"/>
        <rdfs:domain rdf:resource="&ops;ClosedKnowledgeProcessingTask"/>
        <rdfs:range rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:label>encapsulates</rdfs:label>
        <skos:definition>A closed task encapsulates another task, giving it closure</skos:definition>
        <skos:scopeNote>The target task is usually an atomic task, or an open (complex) task, but can also be another closed task, e.g. to handle the involvement of third parties</skos:scopeNote>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ops;filled-by">
        <rdfs:subPropertyOf rdf:resource="&api4kp;archetypes"/>
        <rdfs:domain rdf:resource="&api4kp;PassiveRole"/>
        <rdfs:label>filled by</rdfs:label>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ops;has-primary-subtask">
        <rdfs:subPropertyOf rdf:resource="&ops;has-subtask"/>
        <rdfs:domain rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:range rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:label>has primary sub-task</rdfs:label>
        <skos:definition>a task T has a primary sub-task P, if not achieving the goals of the plan that defines P necessarily implies not achieving the goals of the plan that defines T</skos:definition>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ops;has-role">
        <rdfs:subPropertyOf rdf:resource="&api4kp;has-part"/>
        <rdfs:domain rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:range>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&api4kp;AgentiveRole"/>
                    <rdf:Description rdf:about="&api4kp;PassiveRole"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:range>
        <rdfs:label>has role</rdfs:label>
        <skos:definition>the relationship between a task T and a role R, such that when an activity A is performed and A is archetyped by T, there exists at least one agent or a resource that participats in A and is archetyped by R</skos:definition>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ops;has-subtask">
        <rdfs:subPropertyOf rdf:resource="&api4kp;has-part"/>
        <rdfs:domain rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:range rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:label>has sub-task</rdfs:label>
        <skos:definition>the relationship between a task T and a task S, such that an activity of kind T will have an activity of type S as a sub-activity, i.e. as a (temporal) proper process part</skos:definition>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ops;initiated-by">
        <rdfs:domain rdf:resource="&api4kp;KnowledgeProcessingPlan"/>
        <rdfs:range rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:label>initiated by</rdfs:label>
        <skos:definition>A plan P is initiated by a task T if any activity of the kind defined by P starts (temporally) with a sub-activity of kind T</skos:definition>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ops;played-by">
        <rdfs:subPropertyOf rdf:resource="&api4kp;archetypes"/>
        <rdfs:domain rdf:resource="&api4kp;AgentiveRole"/>
        <rdfs:range rdf:resource="&api4kp;Agent"/>
        <rdfs:label>played by</rdfs:label>
    </owl:ObjectProperty>
    

    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <owl:Class rdf:about="&ops;AbridgmentTask">
        <rdfs:subClassOf rdf:resource="&ops;ParaphraseTask"/>
        <rdfs:label>abdrigment task</rdfs:label>
        <skos:definition>A paraphrase that eliminates element of an expression that are not essential to reconstruct its meaning</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;AtomicKnowledgeProcessingActivity">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&api4kp;KnowledgeActivity"/>
                    <owl:Class>
                        <owl:complementOf>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;has-part"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeActivity"/>
                            </owl:Restriction>
                        </owl:complementOf>
                    </owl:Class>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&api4kp;KnowledgeActivity"/>
        <owl:disjointWith rdf:resource="&ops;ComplexKnowledgeProcessingActivity"/>
        <rdfs:label>atomic knowledge processing activity</rdfs:label>
        <skos:definition>a knowledge processing activity that is not meant be further decomposed into simpler parts that are knowledge processing activities themselves</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;AtomicKnowledgeProcessingTask">
        <rdfs:subClassOf rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;archetypes"/>
                <owl:someValuesFrom rdf:resource="&ops;AtomicKnowledgeProcessingActivity"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;archetypes"/>
                <owl:allValuesFrom rdf:resource="&ops;AtomicKnowledgeProcessingActivity"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>each &apos;atomic knowledge processing task&apos; is the concept that abstracts a specific class of atomic knowledge processing activities</rdfs:comment>
        <rdfs:label>atomic knowledge processing task</rdfs:label>
        <skos:definition>task that is executed in an atomic activity, i.e. an activity that is not further explicitly decomposed</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;CarvingTask">
        <rdfs:subClassOf rdf:resource="&ops;SelectionTask"/>
        <rdfs:subClassOf rdf:resource="&ops;SyntacticKnowledgeProcessingTask"/>
        <rdfs:label>syntactic carving task</rdfs:label>
        <skos:definition>Selection based on the extraction of one or more fragments of the source expression, properly decomposed.
The selection is based on the categorization of the syntactic elements of the resource&apos;s AST</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;CherrypickingTask">
        <rdfs:subClassOf rdf:resource="&ops;SelectionTask"/>
        <rdfs:label>cherrypicking task</rdfs:label>
        <rdfs:seeAlso>http://precedings.nature.com/documents/3574/version/1</rdfs:seeAlso>
        <skos:definition>The act of selecting a subset of the concepts in the original WoK, to derive a new WoK to be expressed</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ClassificationTask">
        <rdfs:subClassOf rdf:resource="&ops;LogicBasedReasoningTask"/>
        <rdfs:comment>given a set of concepts (classes), determines whether 
(i) an individual is necessarily instance (member) of which concepts (classes)
(ii) a concept (class) is narrower (subclass) of which concepts (classes)</rdfs:comment>
        <rdfs:label>classification task</rdfs:label>
        <skos:note>needs refining</skos:note>
    </owl:Class>

    <owl:Class rdf:about="&ops;ClearLocationTask">
        <rdfs:subClassOf rdf:resource="&ops;InternalRepositoryTask"/>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;idempotent-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;side-effecful-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;void-operation"/>
        <rdfs:label>clear location task</rdfs:label>
        <skos:definition>ensures that no artifact is stored at a given location</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ClosedKnowledgeProcessingTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;encapsulates"/>
                <owl:someValuesFrom rdf:resource="&api4kp;InformationProcessingTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;filled-by"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeArtifact"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>&apos;Closed&apos; tasks start with the extraction of knowledge from a knowledge artifact (given or resolved), and are possibly terminated with the creation of a (new version of) a knowledge artifact.
As such, they cannot be chained directly, but their composition is mediated by the use of carriers</rdfs:comment>
        <rdfs:label>closed knowledge processing task</rdfs:label>
        <skos:definition>A closed knowledge processing task is a task than can be executed with persistent consequences, even if the (artificial) agent that performs it is destroyed.
The &apos;core&apos; of such a task is another knowledge processing task, or composition thereof</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ClosureTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeResourceAssemblyTask"/>
        <rdfs:comment>A transitive, recursive assembly of knowledge resources</rdfs:comment>
        <rdfs:label>knowledge resource closure task</rdfs:label>
    </owl:Class>

    <owl:Class rdf:about="&ops;ComplexKnowledgeProcessingActivity">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&api4kp;KnowledgeActivity"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&api4kp;has-part"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeActivity"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&api4kp;KnowledgeActivity"/>
        <rdfs:label>complex knowledge processing activity</rdfs:label>
        <skos:definition>A knowledge processing activity that is complex, and can be broken down into simpler parts, each one representing a stage of the activity</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ComplexKnowledgeProcessingTask">
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&api4kp;InformationProcessingTask"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;has-subtask"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;InformationProcessingTask"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;archetypes"/>
                <owl:someValuesFrom rdf:resource="&ops;ComplexKnowledgeProcessingActivity"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;defined-by"/>
                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeProcessingPlan"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Knowledge processing task are further divided into &apos;open&apos; and &apos;closed&apos;.</rdfs:comment>
        <rdfs:label>complex knowledge processing task</rdfs:label>
        <skos:definition>each &apos;complex knowledge processing task&apos; is the concept that abstracts a specific class of complex knowledge processing activities. 

The concept is defined by a plan which organizes the simpler tasks that are part of the complex task, and defines its roles, methods and goals.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ConfigurationParameter">
        <rdfs:subClassOf rdf:resource="&ops;OptionalInput"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;configures"/>
                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeProcessingMethod"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A method has a configurable degree of freedom if it can be specialized by choosing a value from a region without changing the nature of the method: i.e. an activity executed according to a given method will still be executed according to that method no matter what value is chosen for the parameter, as long as the value belongs to the admissible region</rdfs:comment>
        <rdfs:comment>role played by a value, selected from a given region of admissible values, that informs the method used to execute a (knowledge processing) activity</rdfs:comment>
        <rdfs:label>configuration parameter</rdfs:label>
        <skos:altLabel>actual parameter</skos:altLabel>
    </owl:Class>

    <owl:Class rdf:about="&ops;ConsistencyCheckTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LogicBasedReasoningTask"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>consistency check task</rdfs:label>
        <rdfs:seeAlso></rdfs:seeAlso>
        <rdfs:seeAlso>https://en.wikipedia.org/wiki/Consistency</rdfs:seeAlso>
        <skos:definition>Tests a knowledge base for internal contradictions</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;CreateWorkingKnowledgeBaseTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeBaseBuildingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom>
                                    <owl:Class>
                                        <owl:intersectionOf rdf:parseType="Collection">
                                            <rdf:Description rdf:about="&api4kp;CompositeKnowledgeResource"/>
                                            <owl:Restriction>
                                                <owl:onProperty rdf:resource="&api4kp;expresses"/>
                                                <owl:someValuesFrom rdf:resource="&krr;KnowledgeBase"/>
                                            </owl:Restriction>
                                        </owl:intersectionOf>
                                    </owl:Class>
                                </owl:someValuesFrom>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&krr;WorkingKnowledgeBase"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>create working knowledge base task</rdfs:label>
        <skos:definition>Task that creates a working knowledge base from a composite knowledge resource that expresses a knowledge base</skos:definition>
        <skos:scopeNote>The task itself is composed of sub-steps: flattening the composite into a single resource - task that may also include translations to a focal representation - deriving an internal representation (a mutable knowledge base) and finally taking a snapshot

This task is defined explicitly because it is not uncommon for reasoners to execute tasks of this type internally</skos:scopeNote>
    </owl:Class>

    <owl:Class rdf:about="&ops;DecodingTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LiftingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;EncodedKnowledgeExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ConcreteExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom rdf:resource="&api4kp;Encoding"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>decoding task</rdfs:label>
        <skos:definition>the act of recreating a concrete expression from its encoded version</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;DetectComplexityTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeAnalyticTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ConcreteExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&krr;ComputationalComplexityClass"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-subtask"/>
                <owl:someValuesFrom rdf:resource="&ops;ParsingTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;multi-output-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <rdfs:label>detect computational complexity task</rdfs:label>
        <skos:definition>detects the computational complexity (space and/or time) of a given knowledge expression. 
The detection is based on the aspects of logic underlying the language(s) used in the expression, that are actually used in the expression</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;DetectLanguageInformationTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeAnalyticTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Output"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&krr;KnowledgeSerialization"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Output"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;Profile"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ConcreteExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&lcc-lr;Language"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-subtask"/>
                <owl:someValuesFrom rdf:resource="&ops;ParsingTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;multi-output-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <rdfs:label>detect language information task</rdfs:label>
        <skos:definition>Analyzes an expression to identify the language and/or profile and concrete syntax used in the representation of that expression</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;DetectLogicTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeAnalyticTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ConcreteExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&dol;Logic"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-subtask"/>
                <owl:someValuesFrom rdf:resource="&ops;ParsingTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>detect logic task</rdfs:label>
        <skos:definition>identifies the (simplest) logic that is expressive enough to formalize given knowledge expression.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;DetectSignatureTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeAnalyticTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Output"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;Lexicon"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ConcreteExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeElement"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;multi-output-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <rdfs:label>detect signature task</rdfs:label>
        <skos:definition>extracts the non-logical symbols (aka &quot;terms&quot; - concretizations of linguistic elements that express atomic concepts) used in an expression, identifying the lexicon they have been extracted from</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;DiffingTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeAnalyticTask"/>
        <rdfs:comment>The act of comparing two knowledge resources to determine overlap and differences, returning a similarity degree, and pointers to the differences.

Should leverage graph comparison, tree comparison or text line comparison (&apos;diff&apos;).</rdfs:comment>
        <rdfs:label>diffing task</rdfs:label>
    </owl:Class>

    <owl:Class rdf:about="&ops;DiscoverCompatibleResourcesTask">
        <rdfs:subClassOf rdf:resource="&ops;SemanticKnowledgeManagementTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <rdfs:label>discover compatible resources task</rdfs:label>
        <skos:definition>Returns a collection of resources that are compatible (composable) with a given resource</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;EncodingTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LoweringTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ConcreteExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;EncodedKnowledgeExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom rdf:resource="&api4kp;Encoding"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>encoding task</rdfs:label>
        <skos:definition></skos:definition>
        <skos:definition>Tasks of this type encode concrete expressions so that they can be engraved on a carrier</skos:definition>
        <skos:example>Converting characters into sequences of bits, according to an encoding method, so that they can be written to a RAM, ROM or magnetic disk</skos:example>
    </owl:Class>

    <owl:Class rdf:about="&ops;EntailmentCheckTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LogicBasedReasoningTask"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>entailment check test</rdfs:label>
        <rdfs:seeAlso>https://en.wikipedia.org/wiki/Logical_consequence</rdfs:seeAlso>
        <skos:definition>tests whether the content of a given working knowledge base is entailed by a reference working knowledge base</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;Explanation">
        <rdfs:subClassOf rdf:resource="&ops;SecondaryOutput"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;archetypes"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&api4kp;KnowledgeExpression"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;representation-of"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeActivity"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>explanation</rdfs:label>
        <skos:definition>An expression, generated as part of the execution of a (knowledge processing) activity, of knowledge about that course of that activity and/or its inputs and outputs</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ExpressionTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LoweringTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Input"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractSyntax"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Input"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;Lexicon"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractSemanticGraph"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractSyntaxTree"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>expression task</rdfs:label>
        <skos:definition>the act of creating an expression in a given language (sytnax and dictionary), from the information content of a work of knowledge</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ExtensionTask">
        <rdfs:subClassOf rdf:resource="&ops;InjectionTask"/>
        <rdfs:label>extension task</rdfs:label>
        <skos:definition>Injection of a resource into a second resource, which plays the role of &apos;extension&apos;, providing a wrapping context</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ExtractDescriptionTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;RetrieveResourceDescriptionTask"/>
        <rdfs:subClassOf rdf:resource="&ops;SemanticKnowledgeManagementTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResourceDescription"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;idempotent-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect>reasons over a knowledge expression, trying to generate a description of that expression</api4kp:has-aspect>
        <rdfs:label>extract description task</rdfs:label>
    </owl:Class>

    <owl:Class rdf:about="&ops;ExtractionTask">
        <rdfs:subClassOf rdf:resource="&ops;SeparationTask"/>
        <rdfs:label>extraction task</rdfs:label>
        <skos:definition>A separation based on a tree-oriented deconstruction, where the Resources that are part of a subtree of the underlying Structure are returned.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;FilteringTask">
        <rdfs:subClassOf rdf:resource="&ops;SimplificationTask"/>
        <rdfs:comment>The expression of the resulting WoK will not contain any linguistic element that evokes the redacted concepts.</rdfs:comment>
        <rdfs:label>censoring task</rdfs:label>
        <skos:definition>Simplification aimed at removing one or more concepts and their associations from the WoK.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;FusionTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeResourceWeavingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:minQualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">2</owl:minQualifiedCardinality>
                                <owl:onClass rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:qualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">1</owl:qualifiedCardinality>
                                <owl:onClass rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Fusing two or more resources is equivalent to structuring them by construction, then flattening the structure so obtained</rdfs:comment>
        <rdfs:label>fusion task</rdfs:label>
        <skos:definition>The act of creating a new resource by the combination of two or more resources, such that the identity of the individual resources is not preserved</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;HorizontalKnowledgeProcessingTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeManipulationTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Product"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&api4kp;preserves"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;WorkOfKnowledge"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>&apos;Horizontal&apos; tasks may use information at the ground level of abstraction, or at any level above. As such, for each task of this type there is a &apos;syntactic&apos; version and a &apos;semantic&apos; version. The latter uses information at the work of knowledge (abstract semantic graph) level, while the former uses only linguistic information (grammars/syntaxes)</rdfs:comment>
        <rdfs:label>horizontal knowledge processing task</rdfs:label>
        <skos:definition>task that consumes and produces endeavors at the same level of abstraction, without preserving some primary characteristic that is defined at level of abstraction (e.g. concrete syntax, lexicon, abstract syntax, etc.)
 
While the input I and the product O are different entities, both will refer to the same entities at the higher levels of abstraction: i.e. lift(O) sameAs lift(I), where &apos;lift&apos; is the execution of any lifting vertical task

Regardless of the level, horizontal tasks of this class always preserve the WoK at the foundation of an endeavor</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;IdentityLookupTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;IdentityResolutionTask"/>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <rdfs:label>identity lookup task</rdfs:label>
        <skos:definition>resolution based on a simple lookup</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;IdentityNegotiationTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;IdentityResolutionTask"/>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <rdfs:label>identity negotiation task</rdfs:label>
        <skos:definition>complex resolution process that involves alternative options, and preferences about them</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;IdentityResolutionTask">
        <rdfs:subClassOf rdf:resource="&ops;ClosedKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeManagementTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&lcc-lr;Identifier"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&lcc-lr;Identifier"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom rdf:resource="&krr;Mapping"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;idempotent-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <rdfs:comment>Associates identifiers (and or names) to the entity they denote, its location, or information about it</rdfs:comment>
        <rdfs:label>identity resolution task</rdfs:label>
        <rdfs:seeAlso>https://tools.ietf.org/html/rfc2483</rdfs:seeAlso>
    </owl:Class>

    <owl:Class rdf:about="&ops;InferenceTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LogicBasedReasoningTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;InputOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&krr;WorkingKnowledgeBase"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;idempotent-operation"/>
        <rdfs:label>inference task</rdfs:label>
        <rdfs:seeAlso>https://en.wikipedia.org/wiki/Logical_consequence</rdfs:seeAlso>
        <skos:definition>expresses the logical consequence(s) entailed by a given knowledge base</skos:definition>
        <skos:scopeNote>The inferred knowledge may be returned independently, or added to (a new version of) the input knowledge base</skos:scopeNote>
    </owl:Class>

    <owl:Class rdf:about="&ops;InjectionTask">
        <rdfs:subClassOf rdf:resource="&ops;FusionTask"/>
        <rdfs:label>injection task</rdfs:label>
        <skos:definition>fusion in terms of an implicit tree-oriented structure.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;Input">
        <rdfs:subClassOf rdf:resource="&api4kp;PassiveRole"/>
        <rdfs:label>input</rdfs:label>
        <skos:definition>role played by an entity that is used in an activity, and exists before that activity is started</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;InputOutput">
        <rdfs:subClassOf rdf:resource="&ops;Input"/>
        <rdfs:subClassOf rdf:resource="&ops;Output"/>
        <rdfs:label>input/output</rdfs:label>
        <skos:altLabel>substrate</skos:altLabel>
        <skos:definition>Role played by an entity that is both an input and an output</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;InternalRepositoryTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;ClosedKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeRepositoryTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&lcc-lr;Identifier"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>internal repository task</rdfs:label>
        <skos:definition>Tasks that deal with the management of artifacts inside a repository&apos;s locations.
Locations are logical entities, identified by a (location) identifier, regardless of the specific repository implementation</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;InterpretationTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LiftingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractSyntaxTree"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractSemanticGraph"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>conceptualization task</rdfs:label>
        <skos:altLabel>interpretation task</skos:altLabel>
        <skos:definition>The act of extracting the information content expressed by a knowledge expression, by means of analyzing the AST of that expression</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeAnalyticTask">
        <rdfs:subClassOf rdf:resource="&ops;OpenKnowledgeProcessingTask"/>
        <rdfs:label>knowledge analytic task</rdfs:label>
        <skos:definition>task whose objective is the determination of a quality of a knowledge resource (e.g. used language, complexity, etc..)</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeBaseBuildingTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeCompositionalTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;filled-by"/>
                        <owl:someValuesFrom rdf:resource="&krr;WorkingKnowledgeBase"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>knowledge base building task</rdfs:label>
        <skos:definition>Task that is ultimately aimed at the creation of composite knowledge resources, snapshots of which are intended to be used as working knowledge bases in some reasoning activity</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeCompositionalTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeStructuringTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;filled-by"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;StructuredKnowledgeResource"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>knowledge compositional task</rdfs:label>
        <skos:definition>task that deals with the structure-mediated organization of knowledge resources in composites</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeManagementTask">
        <rdfs:subClassOf rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;filled-by"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeArtifact"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>knowledge management task</rdfs:label>
        <skos:definition>A task that deals with the life cycle of a knowledge resource and/or the artifact(s) that carry it</skos:definition>
        <skos:scopeNote>Tasks of this kind cover elicitation, authoring, curation, storage and retrieval, cataloguing, distribution of knowledge resources, but treat resources (and artifacts) as black boxes, ignoring their syntactic, semantic and pragmatic characteristics</skos:scopeNote>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeManipulationTask">
        <rdfs:subClassOf rdf:resource="&ops;OpenKnowledgeProcessingTask"/>
        <rdfs:comment>a task that generates new knowledge endeavors, according to methods that only leverage the syntactic and semantic aspects of a knowledge resource, but not its pragmatic ones.</rdfs:comment>
        <rdfs:label>knowledge manipulation task</rdfs:label>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeProcessingOperation">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingActivity"/>
        <rdfs:subClassOf>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&api4kp;has-product"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeArtifact"/>
                    </owl:Restriction>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&api4kp;makes-use-of"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeArtifact"/>
                    </owl:Restriction>
                </owl:unionOf>
            </owl:Class>
        </rdfs:subClassOf>
        <rdfs:label>knowledge processing operation</rdfs:label>
        <skos:definition>(knowledge processing) operations are complex activities that involve knowledge artifacts as inputs and/or outputs</skos:definition>
        <skos:scopeNote>In API4KP, operations are usually performed &apos;as a service&apos;, i.e. by a (software) agent that acts on behalf of another agent</skos:scopeNote>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeProcessingServiceTask">
        <rdfs:subClassOf rdf:resource="&ops;ClosedKnowledgeProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom rdf:resource="&ops;ConfigurationParameter"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom rdf:resource="&ops;PrimaryInput"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Explanation"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Knowledge processing tasks &apos;as a service&apos; involve some specific roles:

- one primary output
- some configuration parameters that influence, for example, the choice of the specific, encapsulated task, and/or the method(s) used to perform those task(s)
- an explanation, in the form of a knowledge expression, that justifies how and why the actual primary output was returned</rdfs:comment>
        <rdfs:comment>Tasks executed as a service are necessarily closed, as they are mediated by the request and regulated by the service contract.</rdfs:comment>
        <rdfs:label>knowledge processing service task</rdfs:label>
        <skos:definition>a knowledge processing task that can be exposed as a service by an agent: i.e. that agent can be requested to perform activities of this kind, any number of times, based on a request mediated by an (communication) interface and possibly under the guidance of a contract</skos:definition>
        <skos:scopeNote>The &apos;service&apos; elements are defined in the API4KP Platform ontology</skos:scopeNote>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeReasoningTask">
        <rdfs:subClassOf rdf:resource="&ops;OpenKnowledgeProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;filled-by"/>
                        <owl:someValuesFrom rdf:resource="&krr;WorkingKnowledgeBase"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>knowledge reasoning task</rdfs:label>
        <skos:definition>task that derives new information leveraging the pragmatic aspects of a working knowledge base</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeRepositoryTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeManagementTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;filled-by"/>
                        <owl:someValuesFrom>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;has-function"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeArtifactRepository"/>
                            </owl:Restriction>
                        </owl:someValuesFrom>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>knowledge repository task</rdfs:label>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeReshapingTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeStructuringTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;preserves"/>
                                <owl:someValuesFrom rdf:resource="&lcc-lr;Language"/>
                            </owl:Restriction>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;preserves"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;Knowledge"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>knowledge reshaping task</rdfs:label>
        <skos:definition>Task that uses some (complex) method to derive new works of knowledge using one or more knoweldge resources (and their WoKs) as inputs. 

The resulting WoK is expressed by means of an (abstract) expression - a knowledge resource, or a fragment thereof, in the same language as the source

Both original and new WoKs capture (different aspects) of the same Piece of Knowledge</skos:definition>
        <skos:scopeNote>Because reshaping is a semantic operation, tasks are defined in terms of abstract knowledge expressions as a proxy for the WoK they express: any detail about serialization and encoding is irrelevent</skos:scopeNote>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeResourceAggregationTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeResourceConstructionTask"/>
        <rdfs:label>knowledge resource aggregation task</rdfs:label>
        <skos:definition>construction of a set-oriented structure</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeResourceAssemblyTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeResourceWeavingTask"/>
        <rdfs:label>knowledge resource assembly task</rdfs:label>
        <skos:note>The generation of a single, self-contained, complex Knowledge Resource that expresses the same work as a Composite Knowledge Resource. The implicit version of this operation is more specifically called ‘merging’, while the explicit one is called ‘flattening’</skos:note>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeResourceCompositionTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeResourceConstructionTask"/>
        <rdfs:label>knowledge resource composition task</rdfs:label>
        <skos:definition>construction of a tree-oriented structure</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeResourceConstructionTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeCompositionalTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Input"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;StructuringKnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>knowledge resource construction task</rdfs:label>
        <skos:definition>Creates a structuring knowledge resource that has two or more knowledge resources as referenced components</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeResourceDecompositionTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeResourceDeconstructionTask"/>
        <rdfs:label>knowledge resource decomposition task</rdfs:label>
        <skos:definition>deconstruction limited to tree-oriented structures</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeResourceDeconstructionTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeCompositionalTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;DeconstructableKnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;StructuringKnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>knowledge resource deconstruction task</rdfs:label>
        <skos:definition>superimposes a structure on a non-composite, but deconstructable knowledge resource</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeResourceDisaggregationTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeResourceDeconstructionTask"/>
        <rdfs:label>knowledge resource disaggregation task</rdfs:label>
        <skos:definition>deconstruction limited to set-oriented structures</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeResourceDisassemblyTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeResourceWeavingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;DeconstructableKnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;StructuringKnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:minQualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">2</owl:minQualifiedCardinality>
                                <owl:onClass rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>knowledge resource disassembly task</rdfs:label>
        <skos:definition>breaking apart a deconstructable knowledge resource, following a structure, to obtain the componenets</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeResourceFlatteningTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeResourceAssemblyTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;CompositeKnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;FlattenedKnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;filled-by"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;StructuringKnowledgeResource"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;idempotent-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:comment>The flattening may require some manipulation of the component resources before they can be merged</rdfs:comment>
        <rdfs:label>knowledge resource flattening task</rdfs:label>
        <skos:definition>The act of creating a single, flattened knowledge resource from a composite knowledge resource and its component structured resources, according to the plan specified by a structure.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeResourceRearrangementTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeCompositionalTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Input"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;StructuringKnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Output"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;StructuringKnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <rdfs:comment>That is, the corresponding Composites have the same atomic components, but the underlying set-tree organization is different</rdfs:comment>
        <rdfs:comment>The operation generates a new structure, that is a versioned revision of the input structure</rdfs:comment>
        <rdfs:label>knowledge resource rearrangement task</rdfs:label>
        <skos:definition>A rearrangement changes the mutual relationships between the structured resources in a composite, but does not affect the resources themselves</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeResourceWeavingTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeCompositionalTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeReshapingTask"/>
        <rdfs:label>knowledge resource weaving task</rdfs:label>
        <skos:definition>A kind of reshaping that is driven by a structure</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;KnowledgeStructuringTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeManipulationTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&api4kp;KnowledgeProcessingMethod"/>
                            <owl:Class>
                                <owl:complementOf>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&api4kp;preserves"/>
                                        <owl:someValuesFrom rdf:resource="&api4kp;WorkOfKnowledge"/>
                                    </owl:Restriction>
                                </owl:complementOf>
                            </owl:Class>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>knowledge structuring task</rdfs:label>
        <skos:definition>task that, when executed, involves structured knowledge resources - either directly, or (potentially) in preparation for structuring</skos:definition>
        <skos:scopeNote>In API4KP a &apos;structure&apos; denotes, in a narrow sense, two or more resources organized into composite resources
In DOL, &apos;structuring&apos; is used in a broader sense, not only to cover the API4KP sense, but also the API4KP notion of &apos;(complex) manipulation&apos; - operations that are possibly, but not necessarily, used to prepare resources to become part of a structure.

To remain aligned, in API4KP &apos;structuring&apos; denotes manipulations other than &apos;horizontal&apos; and &apos;vertical&apos; manipulations which preserve the work of knowledge. 
Hence, &apos;structuring&apos; tasks do not preserve the WoK 
&apos;Structuring&apos; is then further partitioned into &apos;Composition&apos; - dealing with API4KP structures and composite resources - and &apos;Reshaping&apos; - dealing with non-WoK preserving transrepresentations</skos:scopeNote>
    </owl:Class>

    <owl:Class rdf:about="&ops;LiftingTask">
        <rdfs:subClassOf rdf:resource="&ops;VerticalKnowledgeProcessingTask"/>
        <rdfs:label>lifting task</rdfs:label>
        <skos:definition>when executed, a lifting task produces an endeavor at a higher level of abstraction that its input</skos:definition>
    </owl:Class>
 
    <owl:Class rdf:about="&ops;LogicBasedReasoningTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeReasoningTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&krr;WorkingKnowledgeBase"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&api4kp;uses-concept"/>
                        <owl:someValuesFrom rdf:resource="&dol;Logic"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>logic-based reasoning task</rdfs:label>
        <skos:definition>Reasoning task based on the semantics and pragmatics of some underlying logic, based on symbolic methods, suitable to be peformed by &apos;reasoners&apos;</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;LoweringTask">
        <rdfs:subClassOf rdf:resource="&ops;VerticalKnowledgeProcessingTask"/>
        <rdfs:label>lowering task</rdfs:label>
        <skos:definition>when executed, a lowering task produces an endeavor at a lower level of abstraction that its input</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;OpenKnowledgeProcessingTask">
        <rdfs:subClassOf rdf:resource="&api4kp;InformationProcessingTask"/>
        <rdfs:comment>Tasks are roughly grouped by whether their methods are based on certain aspects of a knowledge resource, including:

- syntactic : aspects tied to the language (syntax and lexical expressions)
- semantic : computational semantics based on the underlying logic(s) and/or domain semantics based on the interpretation of the signature (the part of the lexicon used in an expression)
- pragmatic: additional aspects, proper of the underlying logic, that drive the use of a resource, e.g. for &apos;reasoning&apos;</rdfs:comment>
        <rdfs:label>open knowledge processing task</rdfs:label>
        <skos:definition>An open knowledge processing task is a task whose execution and outcomes specifically depend on the agent that is performing it. 

As such, they can be chained without the need of communication or other forms of mediation, but require closure in order to have persistent effects</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;OptionalInput">
        <rdfs:subClassOf rdf:resource="&ops;Input"/>
        <rdfs:label>optional input</rdfs:label>
        <skos:definition>an input that, when not provided, does not preclude an activity from being executed successfully</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;Output">
        <rdfs:subClassOf rdf:resource="&api4kp;PassiveRole"/>
        <rdfs:label>output</rdfs:label>
        <skos:altLabel>product</skos:altLabel>
        <skos:definition>Role played by an entity that is produced by a (knowledge processing) activity</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ParaphraseTask">
        <rdfs:subClassOf rdf:resource="&ops;HorizontalKnowledgeProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Input"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Product"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&api4kp;preserves"/>
                        <owl:someValuesFrom rdf:resource="&lcc-lr;Language"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <rdfs:label>paraphrase task</rdfs:label>
        <skos:definition>The creation of an alternative expression (concrete or abstract) that carries the same meaning, but uses different fragments (sentences and/or linguistic elements). 

Meaning (work of knowledge), language and format are preserved, but not the internal structure of an expression.</skos:definition>
        <skos:note>Paraphrase is only admissible in languages that are redundant, i.e. allow alternative, different expressions of the same meaning</skos:note>
        <skos:scopeNote>Interesting &apos;paraphrases&apos; are the ones that cast an expression, in a given language, within the boundaries of a profile of that language</skos:scopeNote>
    </owl:Class>

    <owl:Class rdf:about="&ops;ParsingTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LiftingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ConcreteExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractSyntaxTree"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;preserves"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractSyntax"/>
                            </owl:Restriction>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;uses-concept"/>
                                <owl:someValuesFrom rdf:resource="&krr;KnowledgeSerialization"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>parsing task</rdfs:label>
        <skos:definition>the act of creating an AST (of an abstract knowldge expression) from a concrete knowledge expression</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;PartitionTask">
        <rdfs:subClassOf rdf:resource="&ops;SeparationTask"/>
        <rdfs:label>partition task</rdfs:label>
        <skos:definition>A separation based on a set-oriented deconstruction</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;PrimaryInput">
        <rdfs:subClassOf rdf:resource="&ops;Input"/>
        <rdfs:label>primary input</rdfs:label>
        <skos:definition>an input that is necessary for the execution of a (knowledge processing activity). As a prerequisite, the activity cannot be completed successfully (i.e. it is not possible to achieve its goals) unless the primary input is provided</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;PrimaryOutput">
        <rdfs:subClassOf rdf:resource="&ops;Output"/>
        <rdfs:comment>An activity that is expected to produce a primary output is considered failed if the entity playing that role is not actually generated</rdfs:comment>
        <rdfs:label>primary output</rdfs:label>
        <skos:definition>output such that its production is the main goal of the activity that generates is.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;Product">
        <rdfs:subClassOf rdf:resource="&ops;PrimaryOutput"/>
        <rdfs:label>product</rdfs:label>
        <skos:definition>&quot;product&quot; is the role played by an entity that did not exist before an activity (of a given task type) was executed, with respect to that activity. The activity generates that entity, and thus is cause of its existence</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ProofGenerationTask">
        <rdfs:subClassOf rdf:resource="&ops;LogicBasedReasoningTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>proof generation task</rdfs:label>
        <skos:definition>The act of generating a proof that justifies how an expression is a logical consequence of a knowledge base</skos:definition>
    </owl:Class>
 
    <owl:Class rdf:about="&ops;QueryAnswerTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LogicBasedReasoningTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&dol;Query"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>query answering task</rdfs:label>
        <skos:definition>given a query, expressed by means of a proper knowledge expression that contains some variables, returns an &apos;anser&apos; in terms of bindings of those variables</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ReadTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeCarrier"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;EncodedKnowledgeExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>I/O read task</rdfs:label>
        <skos:altLabel>extraction task</skos:altLabel>
        <skos:definition>A task that extracts an encoded knowledge expression from a carrier</skos:definition>
        <skos:example>opening a file and reading the stream of Unicode-encoded characters</skos:example>
    </owl:Class>

    <owl:Class rdf:about="&ops;RedactionTask">
        <rdfs:subClassOf rdf:resource="&ops;SimplificationTask"/>
        <rdfs:subClassOf rdf:resource="&ops;SyntacticKnowledgeProcessingTask"/>
        <rdfs:label>syntactic redaction task</rdfs:label>
        <skos:definition>The syntactic counterpart of censoring: derives the product expression by removing all the fragments (sentences) in the source expression that contain any linguistic element that evoke any one of the concepts to be filtered out</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ReductionTask">
        <rdfs:subClassOf rdf:resource="&ops;SimplificationTask"/>
        <rdfs:label>reduction task</rdfs:label>
        <skos:definition>Simplification due to the inability of the target language (and/or its underlying logic) to express a number of concepts present in the original WoK</skos:definition>
    </owl:Class>
 
    <owl:Class rdf:about="&ops;RemovalTask">
        <rdfs:subClassOf rdf:resource="&ops;SeparationTask"/>
        <rdfs:label>removal task</rdfs:label>
        <skos:definition>A separation based on a tree-oriented deconstruction, where the Resources that are part of a subtree of the underlying Structure are discarded.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ReplaceArtifactAtLocationTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingActivity"/>
        <rdfs:subClassOf rdf:resource="&ops;InternalRepositoryTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Output"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;VersionedIdentifier"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeArtifact"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeArtifact"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-subtask"/>
                <owl:someValuesFrom rdf:resource="&ops;StoreArtifactAtLocationTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;side-effecful-operation"/>
        <rdfs:label>replace artifact at location task</rdfs:label>
        <skos:definition>replaces an artifact at location, preserving any previously stored artifact</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ReplicationTask">
        <rdfs:subClassOf rdf:resource="&ops;HorizontalKnowledgeProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:allValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Product"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom>
                                    <owl:Class>
                                        <owl:intersectionOf rdf:parseType="Collection">
                                            <rdf:Description rdf:about="&api4kp;KnowledgeResource"/>
                                            <owl:Restriction>
                                                <owl:onProperty rdf:resource="&api4kp;copy-of"/>
                                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                                            </owl:Restriction>
                                        </owl:intersectionOf>
                                    </owl:Class>
                                </owl:someValuesFrom>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:allValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;side-effecful-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>replication task</rdfs:label>
        <skos:definition>Task that creates a new, equal, copy of the input endeavor. 
As such, it creates a new istance of the same type as the input entity.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ResolveClosureTask">
        <rdfs:subClassOf rdf:resource="&ops;ResolveDependenciesTask"/>
        <rdfs:label>resolve dependency closure task</rdfs:label>
        <skos:definition>Recursive dependency resolution task</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;ResolveDependenciesTask">
        <rdfs:subClassOf rdf:resource="&ops;SemanticKnowledgeManagementTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <rdfs:label>resolve dependencies task</rdfs:label>
        <skos:definition>Retrieves the resources that a given resource depends on</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;RetrieveArtifactFromLocationTask">
        <rdfs:subClassOf rdf:resource="&ops;InternalRepositoryTask"/>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;idempotent-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>retrieve artifact from location task</rdfs:label>
        <skos:definition>returns (a copy of) an artifact stored at a given location</skos:definition>
    </owl:Class>
 
    <owl:Class rdf:about="&ops;RetrieveArtifactTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeManagementTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&lcc-lr;Identifier"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&api4kp;copy-of"/>
                                        <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeArtifact"/>
                                    </owl:Restriction>
                                </owl:someValuesFrom>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>retrieve artifact task</rdfs:label>
        <skos:definition>resolves the identifier of a knowledge artifact, and retrieves (a copy of) that artifact</skos:definition>
    </owl:Class>
 
    <owl:Class rdf:about="&ops;RetrieveResourceDescriptionTask">
        <rdfs:subClassOf rdf:resource="&ops;RetrieveResourceTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:allValuesFrom>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&api4kp;copy-of"/>
                                        <owl:someValuesFrom>
                                            <owl:Class>
                                                <owl:intersectionOf rdf:parseType="Collection">
                                                    <rdf:Description rdf:about="&api4kp;ConcreteExpression"/>
                                                    <owl:Restriction>
                                                        <owl:onProperty rdf:resource="&api4kp;concretely-expresses"/>
                                                        <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResourceDescription"/>
                                                    </owl:Restriction>
                                                </owl:intersectionOf>
                                            </owl:Class>
                                        </owl:someValuesFrom>
                                    </owl:Restriction>
                                </owl:allValuesFrom>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>retrieve resource description task</rdfs:label>
        <skos:definition>retrieves a resource that is the description of another resource</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;RetrieveResourceTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeManagementTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&lcc-lr;Identifier"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&api4kp;copy-of"/>
                                        <owl:someValuesFrom rdf:resource="&api4kp;ConcreteExpression"/>
                                    </owl:Restriction>
                                </owl:someValuesFrom>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>retrieve resource task</rdfs:label>
        <skos:definition>retrieves a concrete knowledge resource, extracting it from the master copy stored at a location that resolves the identifier provided as input</skos:definition>
    </owl:Class>
 
    <owl:Class rdf:about="&ops;RetrieveSurrogateTask">
        <rdfs:subClassOf rdf:resource="&ops;RetrieveArtifactTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:allValuesFrom>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&api4kp;copy-of"/>
                                        <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeAssetSurrogate"/>
                                    </owl:Restriction>
                                </owl:allValuesFrom>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>retrieve surrogate task</rdfs:label>
        <skos:definition>resolves the identifier of an asset (or an artifact) to the identifier of a surrogate that describes it, and retrieves a copy of that surrogate</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SatisfiabilityCheckTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LogicBasedReasoningTask"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>satisfiability check task</rdfs:label>
        <rdfs:seeAlso>https://en.wikipedia.org/wiki/Satisfiability</rdfs:seeAlso>
        <skos:definition>checks whether a knowledge base is satisfiable or not</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SecondaryOutput">
        <rdfs:subClassOf rdf:resource="&ops;Output"/>
        <rdfs:comment>an activity is not failed automatically if a secondary output is not produced.</rdfs:comment>
        <rdfs:label>secondary output</rdfs:label>
        <skos:altLabel>byproduct</skos:altLabel>
        <skos:definition>output that is generated alongside the primary output, but is not one of the primary goals of the execution of that activity</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SelectionTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeReshapingTask"/>
        <rdfs:comment>Selection is additive (to the target WoK), whereas simplification is subtractive (to the source WoK)</rdfs:comment>
        <rdfs:label>selection task</rdfs:label>
        <skos:definition>The product Work of Knowledge is obtained by explicit selection of a sub-set of the concepts (and their associations) in the original WoK</skos:definition>
    </owl:Class>
 
    <owl:Class rdf:about="&ops;SemanticKnowledgeManagementTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeManagementTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeReasoningTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;filled-by"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResourceDescription"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>semantic knowledge management task</rdfs:label>
        <skos:definition>A &apos;semantic&apos; knowledge management task treats artifacts and resources as a black box, but makes use of their descriptions (and the surrogates that carry them)</skos:definition>
    </owl:Class>
 
    <owl:Class rdf:about="&ops;SeparationTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeResourceWeavingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;DeconstructableKnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:minQualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">2</owl:minQualifiedCardinality>
                                <owl:onClass rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Conceptually equivalent to a deconstruction followed by a disassembly</rdfs:comment>
        <rdfs:label>separation task</rdfs:label>
        <skos:definition>The act of breaking a (deconstructable) knowledge resource into its component, which are returned as individual resources</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SerializationTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LoweringTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Input"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&krr;KnowledgeSerialization"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ConcreteExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;preserves"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractSyntax"/>
                            </owl:Restriction>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;uses-concept"/>
                                <owl:someValuesFrom rdf:resource="&krr;KnowledgeSerialization"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>serialization task</rdfs:label>
        <skos:definition>The act of concretizing an abstract expression, serializing it using one of the concrete syntaxes supported by the langauge</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SeriesManagementTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeManagementTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;filled-by"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;VersionedIdentifier"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>series management task</rdfs:label>
        <skos:definition>Tasks dealing with the management &apos;series&apos; of temporally and version related knowledge endeavors</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SimplificationTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeReshapingTask"/>
        <rdfs:label>simplification task</rdfs:label>
        <skos:definition>When this task is executed, parts of the concepts used by the WoK that conceptualizes the source expression are removed (&apos;forgotten&apos;) before the resulting WoK is expressed in the target language

As such, the conceptualization of the proudct is a sub-graph of the conceptualization of the source</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SnapshotTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;SeriesManagementTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Output"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;VersionedIdentifier"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom>
                                    <owl:Class>
                                        <owl:intersectionOf rdf:parseType="Collection">
                                            <rdf:Description rdf:about="&krr;ImmutableEntity"/>
                                            <rdf:Description rdf:about="&api4kp;KnowledgeResource"/>
                                        </owl:intersectionOf>
                                    </owl:Class>
                                </owl:someValuesFrom>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;idempotent-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <rdfs:comment>Unlike replication tasks, &apos;Snapshot tasks&apos; are atomic.
In fact, a snapshot does not imply replication or any other activity, other than the guarantee that the ouput endevaor is immutable, and properly versioned</rdfs:comment>
        <rdfs:label>snapshot task</rdfs:label>
        <skos:definition>task that, when executed, makes an exact, immutable copy of a knowledge endeavor (expression or artifact), and assigns the result a versioned identifier</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;StoreArtifactAtLocationTask">
        <rdfs:subClassOf rdf:resource="&ops;InternalRepositoryTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeArtifact"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;idempotent-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;side-effecful-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;void-operation"/>
        <rdfs:label>store artifact at location task</rdfs:label>
        <skos:definition>ensures that an artifact is available at a given location</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SubsumptionTask">
        <rdfs:subClassOf rdf:resource="&ops;LogicBasedReasoningTask"/>
        <rdfs:comment>given two concepts, determines whether one is necessarily broader than the other</rdfs:comment>
        <rdfs:label>subsumption task</rdfs:label>
    </owl:Class>

    <owl:Class rdf:about="&ops;SummarizationTask">
        <rdfs:subClassOf rdf:resource="&ops;SimplificationTask"/>
        <rdfs:label>summarization task</rdfs:label>
        <skos:definition>Simplification to reduce the number of concepts, and the complexity of their associations, in order to facilitate delivery to an audience</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SyntacticAnalysisTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LiftingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ParseTree"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;AbstractSyntaxTree"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&api4kp;preserves"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;AbstractSyntax"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>syntactic analysis task</rdfs:label>
        <skos:definition>the act of deriving an AST from a parse tree</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SyntacticKnowledgeProcessingTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeManipulationTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;preserves"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;WorkOfKnowledge"/>
                            </owl:Restriction>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;uses-concept"/>
                                <owl:someValuesFrom rdf:resource="&lcc-lr;Language"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&api4kp;preserves"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;WorkOfKnowledge"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:allValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&api4kp;preserves"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;WorkOfKnowledge"/>
                    </owl:Restriction>
                </owl:allValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>syntactic knowledge processing task</rdfs:label>
        <skos:definition>a task that is based on methods that only leverage the syntactic aspects of a knowledge resource, but not its semantic and pragmatic ones</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SyntacticParaphraseTask">
        <rdfs:subClassOf rdf:resource="&ops;ParaphraseTask"/>
        <rdfs:subClassOf rdf:resource="&ops;SyntacticKnowledgeProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-subtask"/>
                <owl:someValuesFrom rdf:resource="&ops;KnowledgeResourceDeconstructionTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-subtask"/>
                <owl:someValuesFrom rdf:resource="&ops;KnowledgeResourceFlatteningTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-subtask"/>
                <owl:someValuesFrom rdf:resource="&ops;KnowledgeResourceRearrangementTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>syntactic paraphrase task</rdfs:label>
        <skos:definition>paraphrase task that is based merely on syntactic manipulation</skos:definition>
        <skos:editorialNote>The formalization of &apos;paraphrase&apos; in terms of decomposition and flattening needs more work</skos:editorialNote>
    </owl:Class>

    <owl:Class rdf:about="&ops;SyntacticParsingTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;LiftingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ConcreteExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ParseTree"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&api4kp;preserves"/>
                        <owl:someValuesFrom rdf:resource="&api4kp;Serialization"/>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;atomic-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>syntactic parsing task</rdfs:label>
        <skos:definition>the act of creating a parse tree from a concrete knowledge expression. scanning and tokenization are considered sub-atomic parts of this task</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SyntacticTranscriptionTask">
        <rdfs:subClassOf rdf:resource="&ops;SyntacticKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;TranscriptionTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:allValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&dol;LanguageMapping"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;uses-concept"/>
                                <owl:qualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">1</owl:qualifiedCardinality>
                                <owl:onClass rdf:resource="&lcc-lr;Language"/>
                            </owl:Restriction>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;uses-concept"/>
                                <owl:qualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">2</owl:qualifiedCardinality>
                                <owl:onClass rdf:resource="&krr;KnowledgeSerialization"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:allValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;idempotent-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <rdfs:label>syntactic transcription task</rdfs:label>
        <skos:definition>transcription purely based on syntactic criteria</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;SyntacticTranslationTask">
        <rdfs:subClassOf rdf:resource="&ops;SyntacticKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;TranslationTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:allValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&dol;LanguageMapping"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;uses-concept"/>
                                <owl:qualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">2</owl:qualifiedCardinality>
                                <owl:onClass rdf:resource="&lcc-lr;Language"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:allValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>syntactic translation task</rdfs:label>
        <skos:definition>A translation task based merely on syntactic methods</skos:definition>
    </owl:Class>
 
    <owl:Class rdf:about="&ops;TranscreationTask">
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeReshapingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Note: even if the operation results in a new expression of a new work, this transformation is embedded in the specification of the mapping, which can be executed mechanically by an Agent that is not expected to be aware of the implications of applying that mapping.</rdfs:comment>
        <rdfs:comment>Unlike translations, transcreations will generally result in the creation of a derivative Work, because of significative semantic and/or pragmatic differences in the outcome and its intended use.</rdfs:comment>
        <rdfs:label>transcreation task</rdfs:label>
        <skos:definition>complex transformation that alters the semantics and pragmatics of a work of knowledge</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;TranscriptionTask">
        <rdfs:subClassOf rdf:resource="&ops;HorizontalKnowledgeProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;uses-concept"/>
                                <owl:qualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">1</owl:qualifiedCardinality>
                                <owl:onClass rdf:resource="&lcc-lr;Language"/>
                            </owl:Restriction>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;uses-concept"/>
                                <owl:qualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">2</owl:qualifiedCardinality>
                                <owl:onClass rdf:resource="&krr;KnowledgeSerialization"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;idempotent-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>transcription task</rdfs:label>
        <skos:definition>The act of creating a different serialization of a concrete expression in a given language.
The target serialization must be supported by the language</skos:definition>
    </owl:Class>
 
    <owl:Class rdf:about="&ops;TranslationTask">
        <rdfs:subClassOf rdf:resource="&ops;HorizontalKnowledgeProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&dol;LanguageMapping"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&api4kp;uses-concept"/>
                                <owl:qualifiedCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#nonNegativeInteger">2</owl:qualifiedCardinality>
                                <owl:onClass rdf:resource="&lcc-lr;Language"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;chainable-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;idempotent-operation"/>
        <rdfs:comment>Translations may be preceded by paraphrases, to ensure that the source expression uses only aspects that are mappable to the target language, when the mapping is not complete</rdfs:comment>
        <rdfs:label>translation task</rdfs:label>
        <skos:definition>The act of creating a different expression of a work of knowledge in a given language.
Translations are exact, requiring not only to use a method that actually preserves the meaning, but also that the target language is expressive enough.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;UnionTask">
        <rdfs:subClassOf rdf:resource="&ops;FusionTask"/>
        <rdfs:label>union task</rdfs:label>
        <skos:definition>Fusion in terms of a set-oriented implicit structure</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;VerticalKnowledgeProcessingTask">
        <rdfs:subClassOf rdf:resource="&ops;SyntacticKnowledgeProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Product"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>task that, despite the syntactic nature of the operation, preserve both representation (encoding, format or concrete syntax, language (grammar and lexicon), and content (work of knowledge and used concepts)</rdfs:comment>
        <rdfs:label>vertical knowledge processing task</rdfs:label>
        <skos:definition>task that produces endevavors at higher or lower level of abstraction along the &quot;artifact - encoding - concrete - abstract - work&quot; chain</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;WellFormednessCheckTask">
        <rdfs:subClassOf rdf:resource="&ops;ComplexKnowledgeProcessingTask"/>
        <rdfs:subClassOf rdf:resource="&ops;KnowledgeAnalyticTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;Input"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&lcc-lr;Language"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;ConcreteExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-subtask"/>
                <owl:someValuesFrom rdf:resource="&ops;ParsingTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;structured-with"/>
                <owl:someValuesFrom>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&api4kp;uses-concept"/>
                        <owl:someValuesFrom>
                            <owl:Class>
                                <owl:intersectionOf rdf:parseType="Collection">
                                    <rdf:Description rdf:about="&lcc-lr;Language"/>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&api4kp;defined-by"/>
                                        <owl:someValuesFrom rdf:resource="&api4kp;Syntax"/>
                                    </owl:Restriction>
                                </owl:intersectionOf>
                            </owl:Class>
                        </owl:someValuesFrom>
                    </owl:Restriction>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <api4kp:has-aspect rdf:resource="&api4kp;composite-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;pure-operation"/>
        <api4kp:has-aspect rdf:resource="&api4kp;single-output-operation"/>
        <rdfs:label>well-formedness check task</rdfs:label>
        <skos:definition>the act of checking whether a knowledge expression is a valid sentence according to the syntax - abstract and/or concrete - of some language, or profile thereof.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ops;WriteTask">
        <rdfs:subClassOf rdf:resource="&ops;AtomicKnowledgeProcessingTask"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryInput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;EncodedKnowledgeExpression"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="&ops;PrimaryOutput"/>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeCarrier"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:label>I/O write task</rdfs:label>
        <skos:altLabel>engraving task</skos:altLabel>
        <skos:definition>The task of imprinting an encoded expression on a carrier</skos:definition>
        <skos:example>writing a stream of ASCII characters to a (text) file</skos:example>
    </owl:Class>

    <owl:Class rdf:about="&api4kp;InformationProcessingTask">
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ops;has-role"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <owl:Class>
                                <owl:unionOf rdf:parseType="Collection">
                                    <rdf:Description rdf:about="&ops;Input"/>
                                    <rdf:Description rdf:about="&ops;Output"/>
                                </owl:unionOf>
                            </owl:Class>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;filled-by"/>
                                <owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A knowledge processing task abstracts the role that knowledge endeavors play in a knowledge processing activity, as inputs, outputs or both</rdfs:comment>
        <rdfs:comment>Some tasks, those that are executed according to a method that has some degrees of freedom, can be configured using parameters</rdfs:comment>
        <rdfs:comment>The execution of a Knowledge Processing tasks may involve the generation of an &apos;explanation&apos;</rdfs:comment>
        <skos:definition>A Knowledge Processing Task includes a Goal, i.e. a formal description of the expected situation that is the outcome of the execution of an Activity of the type defined by the Task.
When the outcome matches the Goal - i.e. the description of the outcome is subsumed by the Goal - the activity is considered to be successful. Otherwise, it is considered to be failed</skos:definition>
        <skos:scopeNote>The classes in this part of the taxonomy are scoped to knowledge endeavors. Many of them generalize to expressions and information objects that are not necessarily representation of &quot;knowledge&quot;, which however are not in the scope of this ontology.

As such, those classes in the API4KP namespace should be considered subclasses of their more general counterparts defined in other ontologies</skos:scopeNote>
    </owl:Class>

    <owl:Class rdf:about="&api4kp;KnowledgeActivity">
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&api4kp;archetyped-by"/>
                <owl:someValuesFrom rdf:resource="&api4kp;InformationProcessingTask"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:scopeNote>Like any other Activity, an (instance of a) knowledge processing activity is a process that takes place in space and time</skos:scopeNote>
    </owl:Class>


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // General axioms
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;commences-with"/>
        <owl:someValuesFrom>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ops;IdentityResolutionTask"/>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;composed-into"/>
                                <owl:someValuesFrom rdf:resource="&ops;ParsingTask"/>
                            </owl:Restriction>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="&ops;composed-into"/>
                                <owl:someValuesFrom rdf:resource="&ops;RetrieveArtifactFromLocationTask"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:intersectionOf>
            </owl:Class>
        </owl:someValuesFrom>
        <rdfs:subClassOf rdf:resource="&ops;RetrieveResourceTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;commences-with"/>
        <owl:someValuesFrom>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ops;IdentityResolutionTask"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                        <owl:someValuesFrom rdf:resource="&ops;RetrieveArtifactFromLocationTask"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:someValuesFrom>
        <rdfs:subClassOf rdf:resource="&ops;RetrieveArtifactTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;commences-with"/>
        <owl:someValuesFrom>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ops;IdentityResolutionTask"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                        <owl:someValuesFrom>
                            <owl:Class>
                                <owl:intersectionOf rdf:parseType="Collection">
                                    <rdf:Description rdf:about="&ops;KnowledgeReasoningTask"/>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                                        <owl:someValuesFrom rdf:resource="&ops;RetrieveResourceDescriptionTask"/>
                                    </owl:Restriction>
                                </owl:intersectionOf>
                            </owl:Class>
                        </owl:someValuesFrom>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:someValuesFrom>
        <rdfs:subClassOf rdf:resource="&ops;DiscoverCompatibleResourcesTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;commences-with"/>
        <owl:someValuesFrom>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ops;IdentityResolutionTask"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                        <owl:someValuesFrom>
                            <owl:Class>
                                <owl:intersectionOf rdf:parseType="Collection">
                                    <rdf:Description rdf:about="&ops;KnowledgeReasoningTask"/>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                                        <owl:someValuesFrom rdf:resource="&ops;RetrieveResourceDescriptionTask"/>
                                    </owl:Restriction>
                                </owl:intersectionOf>
                            </owl:Class>
                        </owl:someValuesFrom>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:someValuesFrom>
        <rdfs:subClassOf rdf:resource="&ops;ResolveDependenciesTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;commences-with"/>
        <owl:someValuesFrom>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ops;InterpretationTask"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                        <owl:someValuesFrom rdf:resource="&ops;ExpressionTask"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:someValuesFrom>
        <rdfs:subClassOf rdf:resource="&ops;SyntacticTranslationTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;commences-with"/>
        <owl:someValuesFrom>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ops;KnowledgeResourceConstructionTask"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                        <owl:someValuesFrom rdf:resource="&ops;KnowledgeResourceFlatteningTask"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:someValuesFrom>
        <rdfs:subClassOf rdf:resource="&ops;FusionTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;commences-with"/>
        <owl:someValuesFrom>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ops;KnowledgeResourceDeconstructionTask"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                        <owl:someValuesFrom rdf:resource="&ops;KnowledgeResourceDisassemblyTask"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:someValuesFrom>
        <rdfs:subClassOf rdf:resource="&ops;SeparationTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;commences-with"/>
        <owl:someValuesFrom>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ops;KnowledgeResourceFlatteningTask"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                        <owl:someValuesFrom rdf:resource="&ops;SnapshotTask"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:someValuesFrom>
        <rdfs:subClassOf rdf:resource="&ops;CreateWorkingKnowledgeBaseTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;commences-with"/>
        <owl:someValuesFrom>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ops;ParsingTask"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                        <owl:someValuesFrom rdf:resource="&ops;SerializationTask"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:someValuesFrom>
        <rdfs:subClassOf rdf:resource="&ops;SyntacticTranscriptionTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;commences-with"/>
        <owl:someValuesFrom>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ops;ReadTask"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                        <owl:someValuesFrom>
                            <owl:Class>
                                <owl:intersectionOf rdf:parseType="Collection">
                                    <rdf:Description rdf:about="&ops;DecodingTask"/>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                                        <owl:someValuesFrom>
                                            <owl:Class>
                                                <owl:intersectionOf rdf:parseType="Collection">
                                                    <rdf:Description rdf:about="&api4kp;InformationProcessingTask"/>
                                                    <owl:Restriction>
                                                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                                                        <owl:someValuesFrom>
                                                            <owl:Class>
                                                                <owl:intersectionOf rdf:parseType="Collection">
                                                                    <rdf:Description rdf:about="&ops;EncodingTask"/>
                                                                    <owl:Restriction>
                                                                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                                                                        <owl:someValuesFrom rdf:resource="&ops;WriteTask"/>
                                                                    </owl:Restriction>
                                                                </owl:intersectionOf>
                                                            </owl:Class>
                                                        </owl:someValuesFrom>
                                                    </owl:Restriction>
                                                </owl:intersectionOf>
                                            </owl:Class>
                                        </owl:someValuesFrom>
                                    </owl:Restriction>
                                </owl:intersectionOf>
                            </owl:Class>
                        </owl:someValuesFrom>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:someValuesFrom>
        <rdfs:subClassOf rdf:resource="&ops;ClosedKnowledgeProcessingTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;commences-with"/>
        <owl:someValuesFrom>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ops;SyntacticParsingTask"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ops;composed-into"/>
                        <owl:someValuesFrom rdf:resource="&ops;SyntacticAnalysisTask"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:someValuesFrom>
        <rdfs:subClassOf rdf:resource="&ops;ParsingTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;has-role"/>
        <owl:someValuesFrom rdf:resource="&ops;ConfigurationParameter"/>
        <rdfs:subClassOf rdf:resource="&api4kp;InformationProcessingTask"/>
    </owl:Restriction>
    <owl:Restriction>
        <owl:onProperty rdf:resource="&ops;has-role"/>
        <owl:someValuesFrom rdf:resource="&ops;Explanation"/>
        <rdfs:subClassOf rdf:resource="&api4kp;InformationProcessingTask"/>
    </owl:Restriction>

</rdf:RDF>
