<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rdf:RDF [
	<!ENTITY AnnotationVocabulary "https://www.omg.org/spec/EDMC-FIBO/FND/Utilities/AnnotationVocabulary/">
	<!ENTITY AnnotationVocabulary1 "http://www.omg.org/spec/EDMC-FIBO/FND/Utilities/AnnotationVocabulary/">
	<!ENTITY api4kp "https://www.omg.org/spec/API4KP/api4kp/">
	<!ENTITY api4kp-series "https://www.omg.org/spec/API4KP/api4kp-series/">
	<!ENTITY dct "http://purl.org/dc/terms/">
	<!ENTITY dol "http://www.omg.org/spec/DOL/DOL-terms/">
	<!ENTITY lcc-lr "https://www.omg.org/spec/LCC/Languages/LanguageRepresentation/">
	<!ENTITY owl "http://www.w3.org/2002/07/owl#">
	<!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#">
	<!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#">
	<!ENTITY skos "http://www.w3.org/2004/02/skos/core#">
	<!ENTITY sm "http://www.omg.org/techprocess/ab/SpecificationMetadata/">
	<!ENTITY xsd "http://www.w3.org/2001/XMLSchema#">
]>
<rdf:RDF xml:base="https://www.omg.org/spec/API4KP/api4kp/"
	xmlns="https://www.omg.org/spec/API4KP/api4kp/"
	xmlns:AnnotationVocabulary="https://www.omg.org/spec/EDMC-FIBO/FND/Utilities/AnnotationVocabulary/"
	xmlns:AnnotationVocabulary1="http://www.omg.org/spec/EDMC-FIBO/FND/Utilities/AnnotationVocabulary/"
	xmlns:api4kp="https://www.omg.org/spec/API4KP/api4kp/"
	xmlns:api4kp-series="https://www.omg.org/spec/API4KP/api4kp-series/"
	xmlns:dct="http://purl.org/dc/terms/"
	xmlns:dol="http://www.omg.org/spec/DOL/DOL-terms/"
	xmlns:lcc-lr="https://www.omg.org/spec/LCC/Languages/LanguageRepresentation/"
	xmlns:owl="http://www.w3.org/2002/07/owl#"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
	xmlns:skos="http://www.w3.org/2004/02/skos/core#"
	xmlns:sm="http://www.omg.org/techprocess/ab/SpecificationMetadata/"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema#">
	
	<owl:Ontology rdf:about="https://www.omg.org/spec/API4KP/api4kp/">
		<rdfs:label>API4KP Core Ontology</rdfs:label>
		<dct:abstract>This ontology defines the core concepts of the API4KP framework, namely Knowledge Resources: Assets, Expressions and Artifacts</dct:abstract>
		<dct:creator>Davide Sottara (sottara.davide at mayo.edu)</dct:creator>
		<dct:license rdf:datatype="&xsd;anyURI">http://opensource.org/licenses/MIT</dct:license>
		<sm:contentLanguage rdf:datatype="&xsd;anyURI">http://www.w3.org/standards/techs/owl#w3c_all</sm:contentLanguage>
		<sm:copyright>Copyright (c) 2014-2020 88 Solutions</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Adaptive</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Arizona State University</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Athan Services</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Fraunhofer FOKUS</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Freie Universitat Berlin</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Mayo Clinic</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Model Driven Solutions</sm:copyright>
		<sm:copyright>Copyright (c) 2014-2020 Thematix Partners LLC</sm:copyright>
		<sm:copyright>Copyright (c) 2015-2020 Object Management Group, Inc.</sm:copyright>
		<sm:copyright>Copyright (c) 2019-2020 Micro Focus</sm:copyright>
		<sm:dependsOn rdf:datatype="&xsd;anyURI">https://www.omg.org/spec/LCC/</sm:dependsOn>
		<sm:fileAbbreviation>api4kp</sm:fileAbbreviation>
		<sm:filename>api4kp.rdf</sm:filename>
		<owl:imports rdf:resource="http://www.omg.org/spec/DOL/20171101/DOL-terms/"/>
		<owl:imports rdf:resource="http://www.omg.org/techprocess/ab/SpecificationMetadata/"/>
		<owl:imports rdf:resource="https://www.omg.org/spec/API4KP/SNAPSHOT/api4kp-series/"/>
		<owl:imports rdf:resource="https://www.omg.org/spec/LCC/Languages/LanguageRepresentation/"/>
		<owl:versionIRI rdf:resource="https://www.omg.org/spec/API4KP/SNAPSHOT/api4kp/"/>
	</owl:Ontology>
	
	<owl:Class rdf:about="&dol;BasicOMS">
		<rdfs:subClassOf rdf:resource="&api4kp;BasicKnowledgeResource"/>
	</owl:Class>
	
	<owl:Class rdf:about="&dol;DOLStructuredOMS">
		<rdfs:subClassOf rdf:resource="&api4kp;StructuringKnowledgeExpression"/>
	</owl:Class>
	
	<owl:Class rdf:about="&dol;Document">
		<rdfs:subClassOf rdf:resource="&api4kp;ConcreteKnowledgeExpression"/>
	</owl:Class>
	
	<owl:Class rdf:about="&dol;FlattenableOMS">
		<rdfs:subClassOf rdf:resource="&api4kp;ComplexKnowledgeResource"/>
	</owl:Class>
	
	<owl:Class rdf:about="&dol;Language">
	</owl:Class>
	
	<owl:Class rdf:about="&dol;Model">
		<rdfs:subClassOf rdf:resource="&dol;OMS"/>
	</owl:Class>
	
	<owl:Class rdf:about="&dol;OMS">
		<rdfs:subClassOf rdf:resource="&api4kp;AbstractKnowledgeExpression"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;expresses"/>
				<owl:someValuesFrom rdf:resource="&api4kp;WorkOfKnowledge"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;knowledge-representation-of"/>
				<owl:someValuesFrom rdf:resource="&api4kp;Knowledge"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:label xml:lang="en">knowledge representation</rdfs:label>
		<rdfs:comment>By definition, an information object that is about (an intellectual work that is about) some form of knowledge about something</rdfs:comment>
		<skos:altLabel>representation of knowledge</skos:altLabel>
		<skos:definition>The Expression of some Work of Knowledge in the Abstract Syntax of some language</skos:definition>
		<skos:example>the specification of the allgorithm for the extraction of the square root of a number in some programming language such as Java (version 8)</skos:example>
	</owl:Class>
	
	<owl:Class rdf:about="&dol;Ontology">
		<rdfs:subClassOf rdf:resource="&dol;OMS"/>
	</owl:Class>
	
	<owl:Class rdf:about="&dol;Process">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeProcessingActivity"/>
	</owl:Class>
	
	<owl:Class rdf:about="&dol;Specification">
		<rdfs:subClassOf rdf:resource="&dol;OMS"/>
	</owl:Class>
	
	<owl:Class rdf:about="&dol;StructuredOMS">
		<rdfs:subClassOf rdf:resource="https://www.omg.org/spec/API4KP/api4kp-krr/CompositeComputableKnowledgeResource"/>
	</owl:Class>
	
	<owl:Class rdf:about="&dol;Term">
		<rdfs:subClassOf>
			<owl:Class>
				<owl:unionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&api4kp;KnowledgeExpression">
					</rdf:Description>
					<rdf:Description rdf:about="&api4kp;KnowledgeFragment">
					</rdf:Description>
				</owl:unionOf>
			</owl:Class>
		</rdfs:subClassOf>
	</owl:Class>
	
	<owl:ObjectProperty rdf:about="&dol;formalizes">
		<rdfs:subPropertyOf rdf:resource="&api4kp;knowledge-representation-of"/>
		<skos:definition>faithfully, concisely, consistently and unambiguously expresses a knowledge asset using a formal language, if not a knowledge representation language</skos:definition>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&dol;hasPart">
		<rdfs:label>has part</rdfs:label>
		<owl:inverseOf rdf:resource="&dol;partOf"/>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&dol;partOf">
		<rdfs:label>part of</rdfs:label>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&dol;usesLanguage">
	</owl:ObjectProperty>
	
	<owl:Class rdf:about="https://www.omg.org/spec/API4KP/api4kp-krr/CompositeComputableKnowledgeResource">
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;AbstractKnowledgeExpression">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeExpression"/>
		<rdfs:comment>an abstract expression is the class of equivalence of concrete expressions in some Language, across the various serializations supported by that language.</rdfs:comment>
		<owl:disjointWith rdf:resource="&api4kp;ConcreteKnowledgeExpression"/>
		<skos:definition>a knowledge expression that conforms to the abstract syntax of the language(s) used in the expression itself</skos:definition>
		<skos:prefLabel xml:lang="en">abstract knowledge expression</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;Activity">
		<skos:definition>an intentional process, executed with the active participation of one of more agents that carry out a plan.</skos:definition>
		<skos:note>this class is intentionally left open, and provided as a bridge into (upper) ontologies</skos:note>
		<skos:prefLabel>activity</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;Agent">
		<skos:definition>entity that has the capability (potential) to initiate or participate in an activity</skos:definition>
		<skos:note>this class is intentionally left open, and provided as a bridge into (upper) ontologies</skos:note>
		<skos:prefLabel>agent</skos:prefLabel>
		<skos:scopeNote>includes individual agents as well as parties; natural and artificial</skos:scopeNote>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;ArtificialAgent">
		<rdfs:subClassOf rdf:resource="&api4kp;Agent"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;productOf"/>
				<owl:someValuesFrom rdf:resource="&api4kp;Activity"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<skos:definition>agent that is the product of some activity</skos:definition>
		<skos:prefLabel>artificial agent</skos:prefLabel>
		<skos:scopeNote>includes &apos;intelligent&apos; software agents, in the AI sense</skos:scopeNote>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;BasicKnowledgeResource">
		<rdfs:subClassOf>
			<owl:Class>
				<owl:intersectionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&api4kp;KnowledgeResource">
					</rdf:Description>
					<owl:Class>
						<owl:complementOf>
							<owl:Restriction>
								<owl:onProperty rdf:resource="&api4kp;hasProperPart"/>
								<owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
							</owl:Restriction>
						</owl:complementOf>
					</owl:Class>
				</owl:intersectionOf>
			</owl:Class>
		</rdfs:subClassOf>
		<skos:definition>atomic knowledge resource, i.e. knowledge resource that does not have proper parts that are individual knowledge resources</skos:definition>
		<skos:prefLabel>atomic knowledge resource</skos:prefLabel>
		<skos:prefLabel>basic knowledge resource</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;ComplexKnowledgeResource">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeResource"/>
		<skos:definition>knowledge resource that can be decomposed into proper parts at the same level of abstraction</skos:definition>
		<skos:prefLabel xml:lang="en">complex knowledge resource</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;CompositeKnowledgeResource">
		<rdfs:subClassOf rdf:resource="&api4kp;ComplexKnowledgeResource"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;hasProperPart"/>
				<owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;hasStructuringComponent"/>
				<owl:someValuesFrom rdf:resource="&api4kp;StructuringKnowledgeExpression"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<owl:equivalentClass>
			<owl:Class>
				<owl:intersectionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&api4kp;ComplexKnowledgeResource">
					</rdf:Description>
					<owl:Restriction>
						<owl:onProperty rdf:resource="&api4kp;hasStructuringComponent"/>
						<owl:someValuesFrom rdf:resource="&api4kp;StructuringKnowledgeExpression"/>
					</owl:Restriction>
				</owl:intersectionOf>
			</owl:Class>
		</owl:equivalentClass>
		<skos:definition>a complex knowledge resource that has proper parts that are individual knowledge resources, each playing different roles, and with mutual relationships</skos:definition>
		<skos:prefLabel xml:lang="en">composite knowledge resource</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;ComputableKnowledgeArtifact">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeArtifact"/>
		<skos:definition>knowledge artifact suitable to be used in knowledge processing activities performed by a software agent</skos:definition>
		<skos:prefLabel>computable knowledge artifact</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;Concept">
		<rdfs:subClassOf rdf:resource="&api4kp;Knowledge"/>
		<rdfs:comment>the notion of concept as a &apos;unit of knowledge&apos; is consistent with knowledge as a generically dependent continuant. 
the corresponding, but distinct, specifically dependent continuant is often referred to as &apos;unit of thought&apos;</rdfs:comment>
		<skos:altLabel>representational unit</skos:altLabel>
		<skos:definition>an atomic (non-decomposable) unit of knowledge</skos:definition>
		<skos:prefLabel>concept</skos:prefLabel>
		<skos:scopeNote>individual members of this class are universals, which themselves archetype individuals that are instances of the given concept</skos:scopeNote>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;ConcreteKnowledgeExpression">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeExpression"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;concretizationOf"/>
				<owl:someValuesFrom rdf:resource="&api4kp;AbstractKnowledgeExpression"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<skos:definition>a knowledge expression that conforms to the concrete syntax of the language(s) used in the expression itself</skos:definition>
		<skos:prefLabel xml:lang="en">concrete knowledge expression</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;ConstructiveDefinition">
		<rdfs:subClassOf rdf:resource="&api4kp;Definition"/>
		<skos:definition>definition that allows to construct new instances of the defined type</skos:definition>
		<skos:prefLabel>constructive definition</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;DecoratedKnowledgeExpression">
		<rdfs:subClassOf rdf:resource="&api4kp;ExternalizedKnowledgeExpression"/>
		<skos:definition>an externalized knowledge expression that includes extra symbols used for presentation, but are otherwise not impacting the recognition and/or the interpretation of the expression</skos:definition>
		<skos:prefLabel>decorated knowledge expression</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;DefinedConcept">
		<rdfs:subClassOf rdf:resource="&api4kp;Concept"/>
		<skos:definition>concept that has at least one explicit, shared definition</skos:definition>
		<skos:example>a concept that is captured in an ontology, and such that it has a formal definition expressible, e.g. in OWL or Common Logic</skos:example>
		<skos:prefLabel>defined concept</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;Definition">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeAsset"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;defines"/>
				<owl:someValuesFrom rdf:resource="&api4kp;DefinedConcept"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<skos:definition>asset that captures the necessary and sufficient conditions to recognize (and possibly construct) something</skos:definition>
		<skos:prefLabel>definition</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;EncodedKnowledgeExpression">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeExpression"/>
		<rdfs:comment>a knowledge expression such that its symbols have been further processed to be inscribed on a specific knowledge carrier</rdfs:comment>
		<skos:prefLabel>encoded knowledge expression</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;ExternalizedKnowledgeExpression">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeExpression"/>
		<skos:definition>a knowledge expression that manifests a concrete knowledge  expression using a specific choice of symbols</skos:definition>
		<skos:prefLabel>externalized knowledge expression</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;Knowledge">
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&dol;partOf"/>
				<owl:someValuesFrom rdf:resource="&api4kp;Knowledge"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;is-about"/>
				<owl:someValuesFrom rdf:resource="&owl;Thing"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:comment>Knowledge empowers agents that are intelligent, knowledgeable and rational. 

- Given an agent that is in a situation such that the agent has awareness of, goals for, and the ability to act;
- Assuming that the agent is knowledgeable and has internalized some knowledge that is about the situation the agent is in.
- Assuming that the agent is intelligent, and can apply the knowledge to the situation to predict and plan the course of its actions

- A rational agent will choose the plan that maximizes the probability to achieve its goals, and that (prior) probability has not been decreased by having the knowledge compared to not having it.</rdfs:comment>
		<rdfs:seeAlso>The knowledge level. A. Newell. Artificial intelligence 18 (1), 87-127, 1982</rdfs:seeAlso>
		<skos:altLabel>body of knowledge</skos:altLabel>
		<skos:definition>The cognition (know-what), pragmatics (know-how) and understanding (know-why) about the nature and/or behaviour of some Thing such that, when internalized by an agent, has the potential of generating actions in situations that the knowledge applies to</skos:definition>
		<skos:prefLabel xml:lang="en">knowledge</skos:prefLabel>
		<skos:scopeNote>In API4KP, &apos;Knowledge&apos; is a generically dependent continuant. As such, it can be expressed and communicated, and can be internalized by agents and/or engraved on carriers (thus becoming a specifically dependent continuant).</skos:scopeNote>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeArtifact">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeCarrier"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;inscribedWith"/>
				<owl:someValuesFrom rdf:resource="&api4kp;KnowledgeExpression"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;productOf"/>
				<owl:someValuesFrom rdf:resource="&api4kp;Activity"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<skos:definition>a digital or physical object that is specifically constructed to carry one or more (expressions of) knowledge assets</skos:definition>
		<skos:prefLabel xml:lang="en">knowledge artifact</skos:prefLabel>
		<skos:scopeNote>In FRBR, artifact types (manifestations) are distinguished from individual artifacts (items). 
In OWL-DL, unless punning is adopted, &apos;items&apos; are individual members of this KnowledgeArtifact class; &apos;manifestations&apos; can either be formalized as constrained subclasses of KnowledgeArtifact, or as individual concepts</skos:scopeNote>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeAsset">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeResource"/>
		<rdfs:subClassOf rdf:resource="&api4kp;WorkOfKnowledge"/>
		<rdfs:comment>a knowledge asset is the class of equivalence of all its faithful expressions in different languages</rdfs:comment>
		<skos:definition>work of knowledge that is a knowledge resource considered valuable by a party</skos:definition>
		<skos:note>corollary #1: as knowledge resources, knowledge assets are immutable, versionable, identifiable and support at least one representation (i.e. expression in some language)</skos:note>
		<skos:note>corollary #2: to be valuable to a party (agent or collective thereof), an asset must have been internalized by some agent, and/or shared evidence must exist that the knowledge does increase the likelihood of an agent&apos;s achieving their goals in situations where the knowledge applies</skos:note>
		<skos:prefLabel>knowledge asset</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeAssetSurrogate">
		<owl:equivalentClass>
			<owl:Class>
				<owl:intersectionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&api4kp;KnowledgeArtifact">
					</rdf:Description>
					<owl:Restriction>
						<owl:onProperty rdf:resource="&api4kp;carries"/>
						<owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResourceDescription"/>
					</owl:Restriction>
				</owl:intersectionOf>
			</owl:Class>
		</owl:equivalentClass>
		<skos:definition>knowledge artifact that carries metadata about a knowledge asset and its expressions</skos:definition>
		<skos:prefLabel xml:lang="en">knowledge asset surrogate</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeCarrier">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeResource"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;carries"/>
				<owl:someValuesFrom rdf:resource="&api4kp;KnowledgeAsset"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:comment>&apos;carrier&apos; is more properly a role the connects an artifact to the piece of knowledge it carries</rdfs:comment>
		<skos:definition>a physical or digital object that carries a knowledge asset</skos:definition>
		<skos:prefLabel>knowledge carrier</skos:prefLabel>
		<skos:scopeNote>includes but not limited to books, pictures, documents, files, waves, but also neural patterns</skos:scopeNote>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeElement">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeFragment"/>
		<skos:definition>atomic fragment that uses a single construct of the language used in the expression the fragment is part of</skos:definition>
		<skos:prefLabel>knowledge element</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeExpression">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeResource"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&dol;usesLanguage"/>
				<owl:someValuesFrom rdf:resource="&dol;Language"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;expresses"/>
				<owl:someValuesFrom rdf:resource="&api4kp;KnowledgeAsset"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:seeAlso>FRBR&apos;s notion of Expression</rdfs:seeAlso>
		<owl:disjointUnionOf rdf:parseType="Collection">
			<rdf:Description rdf:about="&api4kp;AbstractKnowledgeExpression">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;ConcreteKnowledgeExpression">
			</rdf:Description>
		</owl:disjointUnionOf>
		<skos:definition>the expression of a piece of knowledge in some language, i.e. using a combination of signs and symbols that conform to the rules of the grammar of that language</skos:definition>
		<skos:prefLabel xml:lang="en">knowledge expression</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeFragment">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeResource"/>
		<rdfs:comment>fragments express proper parts of a knowledge asset</rdfs:comment>
		<owl:equivalentClass>
			<owl:Class>
				<owl:intersectionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&api4kp;KnowledgeResource">
					</rdf:Description>
					<owl:Restriction>
						<owl:onProperty rdf:resource="&api4kp;properPartOf"/>
						<owl:someValuesFrom rdf:resource="&api4kp;KnowledgeExpression"/>
					</owl:Restriction>
				</owl:intersectionOf>
			</owl:Class>
		</owl:equivalentClass>
		<skos:definition>A proper part of a knowledge expression that is not the realization of a knowledge asset itself</skos:definition>
		<skos:prefLabel>knowledge fragment</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeManifestation">
		<rdfs:subClassOf rdf:resource="&api4kp;DefinedConcept"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;archetypes"/>
				<owl:someValuesFrom rdf:resource="&api4kp;KnowledgeCarrier"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:seeAlso>the notion of &apos;Manifestation&apos; in FRBR</rdfs:seeAlso>
		<skos:definition>concept that abstracts a specific class of Knowledge Artifacts, defining the common qualities of its members and their content</skos:definition>
		<skos:prefLabel>knowledge manifestation</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeProcessingActivity">
		<rdfs:subClassOf rdf:resource="&api4kp;Activity"/>
		<skos:definition>activity that produces, consumes or otherwise makes use of knowledge as a resource</skos:definition>
		<skos:prefLabel>knowledge processing activity</skos:prefLabel>
		<skos:scopeNote>knowledge has to be used as an explicit resource - it is not sufficient that the agent performing the activity has knowledge of how to carry out the activity itself</skos:scopeNote>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeResource">
		<rdfs:subClassOf rdf:resource="&api4kp-series;version"/>
		<skos:altLabel>knowledge source</skos:altLabel>
		<skos:definition>immutable, identifiable, versionable entity that is, expresses or carries some piece of knowledge</skos:definition>
		<skos:prefLabel>knowledge resource</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeResourceDescription">
		<rdfs:subClassOf rdf:resource="&api4kp;KnowledgeAsset"/>
		<owl:equivalentClass>
			<owl:Class>
				<owl:intersectionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&api4kp;KnowledgeAsset">
					</rdf:Description>
					<owl:Restriction>
						<owl:onProperty rdf:resource="&api4kp;is-about"/>
						<owl:someValuesFrom rdf:resource="&api4kp;KnowledgeResource"/>
					</owl:Restriction>
				</owl:intersectionOf>
			</owl:Class>
		</owl:equivalentClass>
		<skos:definition>Representation of Knowledge that contains information about another Resource.</skos:definition>
		<skos:prefLabel xml:lang="en">knowledge resource description</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;KnowledgeableAgent">
		<rdfs:subClassOf>
			<owl:Class>
				<owl:intersectionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&api4kp;Agent">
					</rdf:Description>
					<owl:Restriction>
						<owl:onProperty rdf:resource="&api4kp;performs"/>
						<owl:someValuesFrom rdf:resource="&api4kp;KnowledgeProcessingActivity"/>
					</owl:Restriction>
				</owl:intersectionOf>
			</owl:Class>
		</rdfs:subClassOf>
		<rdfs:comment>the knowledge can be acquired in a variety of ways (learning, experience, teaching), but once internalized, the knowledge should drive the agent&apos;s behavior when applicable, and the agent should be able to express the knowledge so that it can be communicated</rdfs:comment>
		<owl:equivalentClass>
			<owl:Class>
				<owl:intersectionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&api4kp;Agent">
					</rdf:Description>
					<owl:Restriction>
						<owl:onProperty rdf:resource="&api4kp;internallyRepresents"/>
						<owl:someValuesFrom rdf:resource="&api4kp;Knowledge"/>
					</owl:Restriction>
				</owl:intersectionOf>
			</owl:Class>
		</owl:equivalentClass>
		<skos:definition>an agent that internally represents some (piece of) Knowledge</skos:definition>
		<skos:prefLabel>knowledgeable agent</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;PieceOfKnowledge">
		<rdfs:subClassOf rdf:resource="&api4kp;Knowledge"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&dol;isFormalizedBy"/>
				<owl:someValuesFrom rdf:resource="&dol;Graph"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;hasProperPart"/>
				<owl:someValuesFrom rdf:resource="&api4kp;Concept"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:comment>pieces of knowledge are &apos;functional complexes&apos; : relationships and mutual roles hold beetween the concepts that are part of the complex</rdfs:comment>
		<skos:definition>a finite, explicit (i.e. non-tacit) complex organization of concepts (units of knowledge) which can be communicated and internalized by some agent</skos:definition>
		<skos:prefLabel>piece of knowledge</skos:prefLabel>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;PrimitiveConcept">
		<rdfs:subClassOf rdf:resource="&api4kp;Concept"/>
		<skos:definition>concept that is part of a piece of knowledge that does not include any definition of that same concept</skos:definition>
		<skos:prefLabel>primitive concept</skos:prefLabel>
		<skos:scopeNote>the notion of &apos;primitive&apos; concept is useful to define &apos;common&apos; vs &apos;background&apos; knowledge and, in particular, the requirements for an agent&apos;s ability to internalize a shared piece of knowledge.

The more philosophical discussion on &apos;innate concepts&apos; - concepts such that NO explicit, shared definition (needs to) exists - is instead irrelevant</skos:scopeNote>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;StructuringKnowledgeExpression">
		<rdfs:subClassOf rdf:resource="&dol;OMS"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;expresses"/>
				<owl:someValuesFrom rdf:resource="&api4kp;ConstructiveDefinition"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:label>structure</rdfs:label>
		<owl:equivalentClass>
			<owl:Class>
				<owl:intersectionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&dol;OMS">
					</rdf:Description>
					<owl:Restriction>
						<owl:onProperty rdf:resource="&api4kp;structures"/>
						<owl:someValuesFrom rdf:resource="&api4kp;ComplexKnowledgeResource"/>
					</owl:Restriction>
				</owl:intersectionOf>
			</owl:Class>
		</owl:equivalentClass>
		<skos:definition>a model that describes how a complex resource could be decomposed into functional parts, OR, a specification of how to compose knowledge resources into a composite resource</skos:definition>
		<skos:prefLabel>structuring knowledge expression</skos:prefLabel>
		<skos:scopeNote>some structures are extensional and expressed using a graph language (e.g. RDF(S)); other structures are intensional and expressed using a production language (e.g. DOL)</skos:scopeNote>
		<skos:scopeNote>some structures are set-oriented: aggregate resources that share some common type (e.g. rules, or ontology axioms)
some structures are tree-oritented: there is a type of relationship (e.g. dependency) that imposes a tree-based ordering between the components</skos:scopeNote>
	</owl:Class>
	
	<owl:Class rdf:about="&api4kp;WorkOfKnowledge">
		<rdfs:subClassOf rdf:resource="&api4kp;PieceOfKnowledge"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;captures"/>
				<owl:someValuesFrom rdf:resource="&api4kp;Knowledge"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&api4kp;productOf"/>
				<owl:someValuesFrom rdf:resource="&api4kp;KnowledgeProcessingActivity"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:comment>The term &apos;Work of Knowledge&apos; mirrors the term &apos;Work of Art&apos;</rdfs:comment>
		<rdfs:comment>the organization of the concepts is deliberate: works of knowledge are designed to communicate knowledge that enables specific types of activities and facilitates the achievement of specific goals</rdfs:comment>
		<rdfs:comment>the selection of what concepts are primitive within the scope of the work, and what relationships are established between different works, is also deliberate and usually depends on the target audience, i.e. the class of agents (and their background knowledge) that are expected to internalize the knowledge</rdfs:comment>
		<rdfs:seeAlso>(Artistic) Works in FRBR</rdfs:seeAlso>
		<rdfs:seeAlso>http://www.tlainc.com/articl134.htm</rdfs:seeAlso>
		<skos:definition>a piece of knowledge that is the primary product of a knowledge processing activity</skos:definition>
		<skos:example>a formal Ontology, prepared by an ontologist, and engineered to answer a number of competency questions, independently of the actual formal language used to express it.</skos:example>
		<skos:example>a lecture, as the outcome of a teacher&apos;s choosing and organizing the topics so they can be explained to the students.</skos:example>
		<skos:example>a statistician&apos;s description of a stochastic process by means of a Markov model</skos:example>
		<skos:example>an algorithm for the extraction of the square root of a number</skos:example>
		<skos:example>the content of a newspaper article, as determined by a journalist deciding what facts and/or opinions to include, and how to present them, independently of any editorial and/or formatting</skos:example>
		<skos:example>the technique for the preparation of the traditional &apos;ragu alla bolognese&apos;</skos:example>
		<skos:prefLabel>work of knowledge</skos:prefLabel>
	</owl:Class>
	
	<owl:ObjectProperty rdf:about="&api4kp;abbreviates">
		<rdfs:subPropertyOf rdf:resource="&api4kp;associatedTo"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeExpression"/>
		<skos:definition>uses a smaller number of symbols, fragments, and/or concepts than the target expression, while sharing at least subject and topic</skos:definition>
		<skos:prefLabel>abbreviates</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;archetypes">
		<rdfs:subPropertyOf rdf:resource="&api4kp;is-about"/>
		<rdfs:label>archetypes</rdfs:label>
		<rdfs:comment>abstracts the common qualities of a class of individuals</rdfs:comment>
		<rdfs:domain rdf:resource="&api4kp;DefinedConcept"/>
		<rdfs:seeAlso>http://www.w3.org/ns/lemon/ontolex#isConceptOf</rdfs:seeAlso>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;associatedTo">
		<rdfs:domain rdf:resource="&api4kp;KnowledgeResource"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeResource"/>
		<skos:definition>generically related to</skos:definition>
		<skos:prefLabel>associated to</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:NamedIndividual rdf:about="&api4kp;atomic-operation">
	</owl:NamedIndividual>
	
	<owl:NamedIndividual rdf:about="&api4kp;binary-operation">
	</owl:NamedIndividual>
	
	<owl:ObjectProperty rdf:about="&api4kp;captures">
		<rdfs:label>captures</rdfs:label>
		<rdfs:domain rdf:resource="&api4kp;WorkOfKnowledge"/>
		<rdfs:range rdf:resource="&api4kp;Knowledge"/>
		<skos:definition>frames, organizes and makes explicit</skos:definition>
		<skos:scopeNote>knowledge can be tacit or explicit, and due to its graph-oriented nature, it may not have a definitive boundary. 
The curation act of a work of knowledge consists in scoping and externalizing a piece of that knowledge.</skos:scopeNote>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;carriedBy">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestedIn"/>
		<rdfs:label>has some expression that is serialized and inscribed on a knowledge carrier, of which this asset is (part of) its content</rdfs:label>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeAsset"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeCarrier"/>
		<owl:inverseOf rdf:resource="&api4kp;carries"/>
		<skos:altLabel>has carrier</skos:altLabel>
		<skos:altLabel>is content of</skos:altLabel>
		<skos:prefLabel xml:lang="en">carried by</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;carries">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestationOf"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeCarrier"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeAsset"/>
		<owl:propertyChainAxiom rdf:parseType="Collection">
			<rdf:Description rdf:about="&api4kp;embodies">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;expresses">
			</rdf:Description>
		</owl:propertyChainAxiom>
		<owl:propertyChainAxiom rdf:parseType="Collection">
			<rdf:Description rdf:about="&api4kp;inscribedWith">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;encodingOf">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;externalizationOf">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;concretizationOf">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;realizationOf">
			</rdf:Description>
		</owl:propertyChainAxiom>
		<skos:definition>is inscribed with a (serialized) expression of a knowledge asset</skos:definition>
		<skos:prefLabel>carries</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;completelyExpresses">
		<rdfs:subPropertyOf rdf:resource="&api4kp;expresses"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeAsset"/>
		<skos:definition>is such that, for each concept in the knowledge asset, has at least one fragment that captures it</skos:definition>
		<skos:prefLabel>completely expresses</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:NamedIndividual rdf:about="&api4kp;composite-operation">
	</owl:NamedIndividual>
	
	<owl:ObjectProperty rdf:about="&api4kp;conceptualizes">
		<rdfs:subPropertyOf rdf:resource="&api4kp;formallyRepresents"/>
		<rdfs:domain rdf:resource="&dol;Ontology"/>
		<skos:definition>provides a formalization of the necessary aspects of</skos:definition>
		<skos:prefLabel>conceptualizes</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;concretizationOf">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestationOf"/>
		<rdfs:label xml:lang="en">concretization of</rdfs:label>
		<rdfs:domain rdf:resource="&api4kp;ConcreteKnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;AbstractKnowledgeExpression"/>
		<skos:definition>can be parsed into (the) abstract knowledge expression</skos:definition>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;defines">
		<rdfs:subPropertyOf rdf:resource="&api4kp;captures"/>
		<rdfs:domain rdf:resource="&api4kp;Definition"/>
		<rdfs:range rdf:resource="&api4kp;DefinedConcept"/>
		<skos:definition>provides the necessary and sufficient conditions to classify (and possibly to construct) instances of a concept</skos:definition>
		<skos:prefLabel>defines</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;definesInTermsOf">
		<rdfs:subPropertyOf rdf:resource="&api4kp;usesConcept"/>
		<rdfs:comment>requires instances of this concept to be inputs during the process of being applied. 
The instances would have to be scoped by the same context</rdfs:comment>
		<rdfs:domain rdf:resource="&api4kp;Definition"/>
		<rdfs:range rdf:resource="&api4kp;Concept"/>
		<skos:prefLabel>defines in terms of</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;dependsOn">
		<rdfs:subPropertyOf rdf:resource="&api4kp;associatedTo"/>
		<rdfs:comment>an asset may depend on another asset if the latter is background knowledge that facilitates the understanding of the former.</rdfs:comment>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeResource"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeResource"/>
		<skos:altLabel>leverages</skos:altLabel>
		<skos:definition>such that its use is impacted by the availability of the target resource</skos:definition>
		<skos:prefLabel xml:lang="en">depends on</skos:prefLabel>
		<skos:scopeNote>includes mandatory vs optional dependencies, named vs type-based dependencies, and early vs late resolution</skos:scopeNote>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;embodiedIn">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestedIn"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeCarrier"/>
		<owl:inverseOf rdf:resource="&api4kp;embodies"/>
		<skos:definition>has a (serialized and encoded) copy inscribed in the target carrier</skos:definition>
		<skos:prefLabel>embodied in</skos:prefLabel>
		<skos:scopeNote>a specialization of the upper ontology notion of &apos;inherence&apos;</skos:scopeNote>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;embodies">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestationOf"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeCarrier"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeExpression"/>
		<skos:definition>has a copy of an (encoding of a concretization of a) knowledge expression inscribed on/in it</skos:definition>
		<skos:prefLabel>embodies</skos:prefLabel>
		<skos:scopeNote>a specialization of the upper ontology notion of &apos;bearing&apos;</skos:scopeNote>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;encodingOf">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestationOf"/>
		<rdfs:label>encoding of</rdfs:label>
		<rdfs:domain rdf:resource="&api4kp;EncodedKnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;ExternalizedKnowledgeExpression"/>
		<skos:definition>can be decoded into (the) externalized knowledge expression</skos:definition>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;expresses">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestationOf"/>
		<rdfs:label>expresses</rdfs:label>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeAsset"/>
		<owl:inverseOf rdf:resource="&api4kp;materializedIn"/>
		<skos:definition>is the expression of a knowledge asset in a given language</skos:definition>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;externalizationOf">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestationOf"/>
		<rdfs:domain rdf:resource="&api4kp;ExternalizedKnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;ConcreteKnowledgeExpression"/>
		<skos:definition>can be parsed into (the) concrete knowledge expression</skos:definition>
		<skos:prefLabel>externalization of</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;faithfullyExpresses">
		<rdfs:subPropertyOf rdf:resource="&api4kp;completelyExpresses"/>
		<rdfs:subPropertyOf rdf:resource="&api4kp;lucidlyExpresses"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeAsset"/>
		<skos:definition>expresses correctly and completely</skos:definition>
		<skos:prefLabel>faithfully expresses</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:NamedIndividual rdf:about="&api4kp;formal-relationship">
	</owl:NamedIndividual>
	
	<owl:ObjectProperty rdf:about="&api4kp;formallyRepresents">
		<rdfs:subPropertyOf rdf:resource="&dol;formalizes"/>
		<rdfs:subPropertyOf rdf:resource="&api4kp;faithfullyExpresses"/>
		<rdfs:subPropertyOf rdf:resource="&api4kp;laconicallyExpresses"/>
		<rdfs:subPropertyOf rdf:resource="&api4kp;soundlyExpresses"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeExpression"/>
		<skos:definition>is an expression that represents something using principles based in logics and mathematics</skos:definition>
		<skos:prefLabel>formally represents</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;hasAssetSurrogate">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestedIn"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeAsset"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeAssetSurrogate"/>
		<skos:definition>has descriptive knowledge about itself and its manifestations that is carried by some artifact</skos:definition>
		<skos:prefLabel>has asset surrogate</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;hasExemplar">
		<rdfs:subPropertyOf rdf:resource="&api4kp;archetypes"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeManifestation"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeArtifact"/>
		<skos:definition>abstracts the common qualities of a class of knowledge artifacts</skos:definition>
		<skos:prefLabel>has exemplar</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;hasProperPart">
		<rdfs:subPropertyOf rdf:resource="&dol;hasPart"/>
		<owl:inverseOf rdf:resource="&api4kp;properPartOf"/>
		<skos:definition>has part that is identifiable and distinct from the whole</skos:definition>
		<skos:prefLabel>has proper part</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;hasStructuralComponent">
		<rdfs:subPropertyOf rdf:resource="&api4kp;associatedTo"/>
		<rdfs:subPropertyOf rdf:resource="&api4kp;hasProperPart"/>
		<rdfs:domain rdf:resource="&api4kp;CompositeKnowledgeResource"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeResource"/>
		<skos:definition>has proper part that is a functional component (i.e. plays a role with respect to the other parts of the same composite it is part of)</skos:definition>
		<skos:prefLabel>has structural component</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;hasStructuringComponent">
		<rdfs:subPropertyOf rdf:resource="&api4kp;hasProperPart"/>
		<rdfs:domain rdf:resource="&api4kp;CompositeKnowledgeResource"/>
		<rdfs:range rdf:resource="&api4kp;StructuringKnowledgeExpression"/>
		<skos:definition>has structural component whose role is to define roles and relationships between the other components</skos:definition>
		<skos:prefLabel>has structuring component</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;hasSubject">
		<rdfs:subPropertyOf rdf:resource="&api4kp;isAbout"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeResource"/>
		<skos:definition>is, expresses or carries knowledge of a class of entities that are loosely categorized</skos:definition>
		<skos:prefLabel>has subject</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;hasTopic">
		<rdfs:subPropertyOf rdf:resource="&api4kp;isAbout"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeResource"/>
		<skos:definition>is, expresses or carries knowledge of a specific aspect of the entities it has as a subject</skos:definition>
		<skos:prefLabel>has topic</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;inscribedWith">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestationOf"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeCarrier"/>
		<rdfs:range rdf:resource="&api4kp;EncodedKnowledgeExpression"/>
		<skos:altLabel>engraved with</skos:altLabel>
		<skos:prefLabel>inscribed with</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;internallyRepresents">
		<rdfs:label>has internal representation of</rdfs:label>
		<rdfs:label xml:lang="en">internally represents</rdfs:label>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeableAgent"/>
		<rdfs:range rdf:resource="&api4kp;PieceOfKnowledge"/>
		<skos:definition>carries an internal representation of the knowledge (e.g. neurons, but also digital memories) that enables reasoning and planning</skos:definition>
		<skos:prefLabel>internalizes</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;involvedIn">
		<rdfs:range rdf:resource="&api4kp;Activity"/>
		<skos:altLabel>participates in</skos:altLabel>
		<skos:definition>entity that participates, playing some role, in an activity</skos:definition>
		<skos:prefLabel>involved in</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;is-about">
		<rdfs:subPropertyOf rdf:resource="&api4kp;isAbout"/>
		<rdfs:domain rdf:resource="&api4kp;Knowledge"/>
		<skos:definition>is about who, what, how, when, where or why a referent entity is and/or behaves</skos:definition>
		<skos:prefLabel>knowledge of</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;isAbout">
		<skos:definition>relates to a particular subject</skos:definition>
		<skos:prefLabel>is about</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;isDerivedFrom">
		<rdfs:subPropertyOf rdf:resource="&api4kp;associatedTo"/>
		<rdfs:comment>a resource may be a derivative of any number of resources, all which need to contribute at least some concept.</rdfs:comment>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeResource"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeResource"/>
		<skos:definition>created as the product of an activity that used another resource as an input, and such that some of the concepts used in the input resource ended up being used in this resource</skos:definition>
		<skos:prefLabel>is derived from</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;isVariantOf">
		<rdf:type rdf:resource="&owl;SymmetricProperty"/>
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
		<rdfs:subPropertyOf rdf:resource="&api4kp;associatedTo"/>
		<rdfs:domain>
			<owl:Class>
				<owl:unionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&api4kp;KnowledgeArtifact">
					</rdf:Description>
					<rdf:Description rdf:about="&api4kp;KnowledgeExpression">
					</rdf:Description>
				</owl:unionOf>
			</owl:Class>
		</rdfs:domain>
		<rdfs:range>
			<owl:Class>
				<owl:unionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&api4kp;KnowledgeArtifact">
					</rdf:Description>
					<rdf:Description rdf:about="&api4kp;KnowledgeExpression">
					</rdf:Description>
				</owl:unionOf>
			</owl:Class>
		</rdfs:range>
		<skos:definition>expresses or carries the same knowledge asset as, but differs in at least one of language, serialization, lexicon, alphabet, encoding, or internal arrangement thereof</skos:definition>
		<skos:prefLabel>is variant of</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;knowledge-representation-of">
		<rdfs:subPropertyOf rdf:resource="&api4kp;isAbout"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeExpression"/>
		<owl:propertyChainAxiom rdf:parseType="Collection">
			<rdf:Description rdf:about="&api4kp;expresses">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;captures">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;is-about">
			</rdf:Description>
		</owl:propertyChainAxiom>
		<skos:definition>expresses knowledge about something, usually in a formal way</skos:definition>
		<skos:prefLabel>knowledge representation of</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;laconicallyExpresses">
		<rdfs:subPropertyOf rdf:resource="&api4kp;expresses"/>
		<rdfs:label>consistently expresses</rdfs:label>
		<dct:source>(Weber, 1997): construct redundancy occurs when more than
one grammatical construct can be used to represent the same ontological construct</dct:source>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeAsset"/>
		<skos:definition>such that, for each concept in the knowledge asset, that concept is always represented using the same construct every time it is evoked in a fragment of the expression</skos:definition>
		<skos:prefLabel>laconically expresses</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;lucidlyExpresses">
		<rdfs:subPropertyOf rdf:resource="&api4kp;expresses"/>
		<rdfs:label>unambiguously expresses</rdfs:label>
		<dct:source>(Weber, 1997): &quot;construct overload occurs when a single grammatical construct can stand for two or more ontological constructs&quot;</dct:source>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeAsset"/>
		<skos:definition>such that every fragment of the expression has no more than one possible interpretation as a concept that is part of the knowledge asset</skos:definition>
		<skos:prefLabel>lucidly expresses</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;manifestationOf">
		<rdfs:domain rdf:resource="&api4kp;KnowledgeResource"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeResource"/>
		<owl:inverseOf rdf:resource="&api4kp;manifestedIn"/>
		<skos:definition>is mappable to a knowledge resource that exists at a higher level of abstraction on the asset / artifact chain</skos:definition>
		<skos:prefLabel>manifestation of</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;manifestedIn">
		<rdfs:domain rdf:resource="&api4kp;KnowledgeResource"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeResource"/>
		<skos:definition>is mappable to a knowledge resource that exists at a lower level of abstraction on the asset / artifact chain</skos:definition>
		<skos:prefLabel>manifested in</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:NamedIndividual rdf:about="&api4kp;material-relationship">
	</owl:NamedIndividual>
	
	<owl:ObjectProperty rdf:about="&api4kp;materializedIn">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestedIn"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeAsset"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeExpression"/>
		<skos:altLabel>has expression</skos:altLabel>
		<skos:definition>can be reconstructed from the parsing and interpretation of</skos:definition>
		<skos:prefLabel>materialized in</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;models">
		<rdfs:subPropertyOf rdf:resource="&api4kp;formallyRepresents"/>
		<rdfs:domain rdf:resource="&dol;Model"/>
		<skos:definition>provides a descriptive formalization of the necessary and contigent aspects of</skos:definition>
		<skos:prefLabel>models</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:NamedIndividual rdf:about="&api4kp;nullary-operation">
	</owl:NamedIndividual>
	
	<owl:ObjectProperty rdf:about="&api4kp;performs">
		<rdfs:subPropertyOf rdf:resource="&api4kp;involvedIn"/>
		<rdfs:domain rdf:resource="&api4kp;Agent"/>
		<rdfs:range rdf:resource="&api4kp;Activity"/>
		<skos:definition>actively contributes to the progress of the activity towards the achievement of its goals</skos:definition>
		<skos:prefLabel>performs</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;productOf">
		<rdfs:subPropertyOf rdf:resource="&api4kp;involvedIn"/>
		<rdfs:range rdf:resource="&api4kp;Activity"/>
		<skos:definition>exists as a consequence of the execution of an activity</skos:definition>
		<skos:prefLabel>product of</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;properPartOf">
		<rdf:type rdf:resource="&owl;IrreflexiveProperty"/>
		<rdfs:subPropertyOf rdf:resource="&dol;partOf"/>
		<skos:definition>part of something distinct</skos:definition>
		<skos:prefLabel>proper part of</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:NamedIndividual rdf:about="&api4kp;pure-operation">
	</owl:NamedIndividual>
	
	<owl:ObjectProperty rdf:about="&api4kp;realizationOf">
		<rdfs:subPropertyOf rdf:resource="&api4kp;manifestationOf"/>
		<rdfs:domain rdf:resource="&api4kp;AbstractKnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeAsset"/>
		<skos:definition>can be abstracted into (the) knowledge asset</skos:definition>
		<skos:prefLabel>realization of</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;recipientOf">
		<rdfs:subPropertyOf rdf:resource="&api4kp;involvedIn"/>
		<rdfs:range rdf:resource="&api4kp;Activity"/>
		<skos:altLabel>patient of</skos:altLabel>
		<skos:altLabel>target of</skos:altLabel>
		<skos:definition>participates passively, and is somehow affected, during the course of an activity</skos:definition>
		<skos:prefLabel>recipient of</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:NamedIndividual rdf:about="&api4kp;side-effecful-operation">
	</owl:NamedIndividual>
	
	<owl:ObjectProperty rdf:about="&api4kp;soundlyExpresses">
		<rdfs:subPropertyOf rdf:resource="&api4kp;expresses"/>
		<rdfs:label>concisely expresses</rdfs:label>
		<rdfs:comment>no element in the epxression is redundant</rdfs:comment>
		<dct:source>(Weber, 1997): &quot;construct excess occurs when a grammatical construct does not map onto an ontological construct&quot;</dct:source>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;KnowledgeAsset"/>
		<skos:definition>is such that every fragment in the expression can be interpreted in terms of concepts that are part of the knowledge asset</skos:definition>
		<skos:prefLabel>soundly expresses</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;specifies">
		<rdfs:subPropertyOf rdf:resource="&api4kp;formallyRepresents"/>
		<rdfs:domain rdf:resource="&dol;Specification"/>
		<skos:definition>provides a prescriptive formalization of the normative and informative aspects of</skos:definition>
		<skos:prefLabel>specifies</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;structures">
		<rdfs:label>structures</rdfs:label>
		<rdfs:domain rdf:resource="&api4kp;StructuringKnowledgeExpression"/>
		<rdfs:range rdf:resource="&api4kp;ComplexKnowledgeResource"/>
		<skos:definition>establishes (potential) components, roles and mutual relationships</skos:definition>
	</owl:ObjectProperty>
	
	<owl:NamedIndividual rdf:about="&api4kp;ternary-operation">
	</owl:NamedIndividual>
	
	<owl:NamedIndividual rdf:about="&api4kp;unary-operation">
	</owl:NamedIndividual>
	
	<owl:ObjectProperty rdf:about="&api4kp;usedIn">
		<rdfs:subPropertyOf rdf:resource="&api4kp;involvedIn"/>
		<rdfs:range rdf:resource="&api4kp;Activity"/>
		<skos:definition>employed under the control of an agent that performs an activity, for the purpose of achieving a goal</skos:definition>
		<skos:prefLabel>used in</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&api4kp;usesConcept">
		<rdfs:subPropertyOf rdf:resource="&owl;topObjectProperty"/>
		<rdfs:domain rdf:resource="&api4kp;KnowledgeResource"/>
		<rdfs:range rdf:resource="&api4kp;Concept"/>
		<skos:definition>is, expresses or carries knowledge of which this concept is either part or a dependency of</skos:definition>
		<skos:prefLabel>uses concept</skos:prefLabel>
	</owl:ObjectProperty>
	
	<owl:Class rdf:about="&lcc-lr;Identifier">
	</owl:Class>
	
	<owl:Class rdf:about="&lcc-lr;Language">
		<rdfs:subClassOf>
			<owl:Class>
				<owl:intersectionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&api4kp-series;MutableEntity">
					</rdf:Description>
					<rdf:Description rdf:about="&api4kp;Knowledge">
					</rdf:Description>
				</owl:intersectionOf>
			</owl:Class>
		</rdfs:subClassOf>
	</owl:Class>
	
	<owl:ObjectProperty rdf:about="&lcc-lr;denotes">
		<owl:inverseOf rdf:resource="&lcc-lr;hasDenotation"/>
		<skos:note>the semiotic relationship between a linguistic expression and its referent, where the former references the latter, possibly within a context</skos:note>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&lcc-lr;hasDenotation">
		<skos:note>the relationship between a referent and a symbolic expression that resolves to that referent, possibly within a given context</skos:note>
	</owl:ObjectProperty>
	
	<owl:AllDifferent>
		<owl:distinctMembers rdf:parseType="Collection">
			<rdf:Description rdf:about="&api4kp;atomic-operation">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;composite-operation">
			</rdf:Description>
		</owl:distinctMembers>
	</owl:AllDifferent>
	<owl:AllDifferent>
		<owl:distinctMembers rdf:parseType="Collection">
			<rdf:Description rdf:about="&api4kp;binary-operation">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;nullary-operation">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;ternary-operation">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;unary-operation">
			</rdf:Description>
		</owl:distinctMembers>
	</owl:AllDifferent>
	<owl:AllDifferent>
		<owl:distinctMembers rdf:parseType="Collection">
			<rdf:Description rdf:about="&api4kp;formal-relationship">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;material-relationship">
			</rdf:Description>
		</owl:distinctMembers>
	</owl:AllDifferent>
	<owl:AllDifferent>
		<owl:distinctMembers rdf:parseType="Collection">
			<rdf:Description rdf:about="&api4kp;pure-operation">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;side-effecful-operation">
			</rdf:Description>
		</owl:distinctMembers>
	</owl:AllDifferent>
	<owl:AllDisjointClasses>
		<owl:members rdf:parseType="Collection">
			<rdf:Description rdf:about="&api4kp;KnowledgeArtifact">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;KnowledgeAsset">
			</rdf:Description>
			<rdf:Description rdf:about="&api4kp;KnowledgeExpression">
			</rdf:Description>
		</owl:members>
	</owl:AllDisjointClasses>
</rdf:RDF>