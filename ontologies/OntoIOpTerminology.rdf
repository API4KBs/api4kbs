<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY dct "http://purl.org/dc/terms/" >
    <!ENTITY skos "http://www.w3.org/2004/02/skos/core#" >
    <!ENTITY sm "http://www.omg.org/techprocess/ab/SpecificationMetadata/" >
    <!ENTITY ontoiop-trm "http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/" >
]>


<rdf:RDF      xml:base="http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:dct="http://purl.org/dc/terms/"
     xmlns:skos="http://www.w3.org/2004/02/skos/core#"
xmlns:sm="http://www.omg.org/techprocess/ab/SpecificationMetadata/"
     xmlns:ontoiop-trm="http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/">

    <owl:Ontology rdf:about="http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/">
        <rdfs:label>OntoIOp Terminology Ontology</rdfs:label>


    <!-- Curation and Rights Metadata for the OntoIOp Terminology Ontology -->

        <sm:copyright rdf:datatype="&xsd;string">Copyright (c) 2014 Athan Services
Copyright (c) 2014 Thematix Partners LLC
Copyright (c) 2014 Object Management Group, Inc.</sm:copyright>
        <dct:license rdf:datatype="&xsd;anyURI">http://www.omg.org/techprocess/ab/SpecificationMetadata/MITLicense</dct:license>


    <!-- Ontology/File-Level Metadata for the OntoIOp Terminology Ontology -->

        <sm:filename rdf:datatype="&xsd;string">OntoIOpTerminology.rdf</sm:filename>
        <sm:fileAbbreviation rdf:datatype="&xsd;string">ontoiop-trm</sm:fileAbbreviation>
        <owl:versionIRI rdf:resource="http://www.omg.org/spec/OntoIOp/20141101/OntoIOpTerminology/"/>
        <sm:fileAbstract rdf:datatype="&xsd;string">This ontology covers terminology used for describing logics, ontology and rule languages, and related terms from the OntoIOp specification.</sm:fileAbstract>

        <sm:contentLanguage rdf:datatype="&xsd;anyURI">http://www.w3.org/standards/techs/owl#w3c_all</sm:contentLanguage>
        <sm:contentLanguage rdf:datatype="&xsd;anyURI">http://www.omg.org/spec/ODM/</sm:contentLanguage>

        <owl:imports rdf:resource="http://www.omg.org/techprocess/ab/SpecificationMetadata/"/>

    </owl:Ontology>
    

    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <owl:ObjectProperty rdf:about="&ontoiop-trm;conservativelyExtendsTo">
        <rdfs:label xml:lang="en">conservatively extends to</rdfs:label>
        <rdfs:domain rdf:resource="&ontoiop-trm;ConservativeExtensionMapping"/>
        <rdfs:subPropertyOf rdf:resource="&ontoiop-trm;extendsTo"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;definitionallyExtendsTo">
        <rdfs:label>definitionally extends to</rdfs:label>
        <rdfs:domain rdf:resource="&ontoiop-trm;DefinitionalExtensionMapping"/>
        <rdfs:subPropertyOf rdf:resource="&ontoiop-trm;conservativelyExtendsTo"/>
    </owl:ObjectProperty>
    

    <owl:ObjectProperty rdf:about="&ontoiop-trm;documentsOMS">
        <rdfs:label>documents OMS</rdfs:label>
        <owl:inverseOf rdf:resource="&ontoiop-trm;isOMSDocumentationOf"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;extends">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <skos:prefLabel rdf:datatype="&xsd;string">extends</skos:prefLabel>
        <skos:altLabel rdf:datatype="&xsd;string">is extension of</skos:altLabel>
        <skos:definition rdf:datatype="&xsd;string">TBD</skos:definition>
        <rdfs:domain rdf:resource="&ontoiop-trm;OMS"/>
        <rdfs:range rdf:resource="&ontoiop-trm;OMS"/>
        <rdfs:subPropertyOf rdf:resource="&ontoiop-trm;isMappableTo"/>
        <owl:propertyChainAxiom rdf:parseType="Collection">
            <rdf:Description rdf:about="&ontoiop-trm;isMappedBy"/>
            <rdf:Description rdf:about="&ontoiop-trm;extendsTo"/>
        </owl:propertyChainAxiom>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;extendsTo">
        <rdfs:label>extends to</rdfs:label>
        <rdfs:domain rdf:resource="&ontoiop-trm;ExtensionMapping"/>
        <rdfs:range rdf:resource="&ontoiop-trm;OMS"/>
        <rdfs:subPropertyOf rdf:resource="&ontoiop-trm;mapsTo"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;formalizes">
        <rdfs:label>formalizes</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">see Class &apos;institution&apos;</skos:definition>
        <owl:inverseOf rdf:resource="&ontoiop-trm;isFormalizedBy"/>
    </owl:ObjectProperty>
    

    <owl:ObjectProperty rdf:about="&ontoiop-trm;hasLanguageAspect">
        <rdfs:label>has language aspect</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">see Class &apos;language aspect&apos;</skos:definition>
        <rdfs:range rdf:resource="&ontoiop-trm;LanguageAspect"/>
        <rdfs:domain rdf:resource="&ontoiop-trm;OMSLanguage"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;supportsLogic">
        <rdfs:label>supports logic</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">logic represented by a satisfaction relation of the language.</skos:definition>
        <rdfs:range rdf:resource="&ontoiop-trm;Logic"/>
        <rdfs:domain rdf:resource="&ontoiop-trm;OMSLanguage"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;hasHeterogeneousEnvironment">
        <rdfs:label>has logical environment</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">relationship between something and a heterogeneous environment in which it is embedded or is associated with.</skos:definition>
        <rdfs:range rdf:resource="&ontoiop-trm;HeterogeneousEnvironment"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;hasPart">
        <rdfs:label>has part</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">relationship between two things were the second is a component of the first</skos:definition>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;hasSubset">
        <rdfs:label>has subset</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">relationship between two sets where every member of the second set belongs to the first set</skos:definition>
        <rdfs:domain rdf:resource="&ontoiop-trm;Set"/>
        <rdfs:range rdf:resource="&ontoiop-trm;Set"/>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ontoiop-trm;implicitlyExtendsTo">
        <rdfs:label>implicitly extends to</rdfs:label>
        <rdfs:domain rdf:resource="&ontoiop-trm;ImpliedExtensionMapping"/>
        <rdfs:subPropertyOf rdf:resource="&ontoiop-trm;definitionallyExtendsTo"/>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ontoiop-trm;isAdjointOf">
        <rdfs:label>is adjoint of</rdfs:label>
        <rdfs:domain rdf:resource="&ontoiop-trm;Mapping"/>
        <rdfs:range rdf:resource="&ontoiop-trm;Mapping"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;isApproximantOf">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <rdfs:label>is approximant of</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">approximation (in the sense of a logically implied theory, possibly aftersuitable translation) of an OMS in a smaller signature or OMS language</skos:definition>
        <rdfs:domain rdf:resource="&ontoiop-trm;OMS"/>
        <rdfs:range rdf:resource="&ontoiop-trm;OMS"/>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ontoiop-trm;isConservativeExtensionOf">
        <rdfs:label>is conservative extension of</rdfs:label>
        <rdfs:subPropertyOf rdf:resource="&ontoiop-trm;extends"/>
        <owl:propertyChainAxiom rdf:parseType="Collection">
            <rdf:Description rdf:about="&ontoiop-trm;isMappedBy"/>
            <rdf:Description rdf:about="&ontoiop-trm;conservativelyExtendsTo"/>
        </owl:propertyChainAxiom>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ontoiop-trm;isDefinitionalExtensionOf">
        <rdfs:label>is definitional extension of</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">extension whose newly introduced non-logical symbols are interpreted in a unique way</skos:definition><skos:note rdf:datatype="&xsd;string"> An extension $O_2$ of an OMS $O_1$ is a definitional extension, if each model of $O_1$ can be uniquely expanded to a model of $O_2$. </skos:note>
  <skos:note rdf:datatype="&xsd;string"> $O_2$ being a definitional extension of $O_1$ implies a bijective correspondence between the classes of models of $O_2$ and $O_1$. </skos:note>
  <skos:note rdf:datatype="&xsd;string"> Each definitional extension is also a monomorphic extension but not vice versa. </skos:note>
        <rdfs:subPropertyOf rdf:resource="&ontoiop-trm;isConservativeExtensionOf"/>
        <owl:propertyChainAxiom rdf:parseType="Collection">
            <rdf:Description rdf:about="&ontoiop-trm;isMappedBy"/>
            <rdf:Description rdf:about="&ontoiop-trm;definitionallyExtendsTo"/>
        </owl:propertyChainAxiom>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;isElementOf">
        <rdfs:label>is element of OMS</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">any resource in an OMS (e.g. a non-logical symbol, a sentence, a correspondence, the OMS itself, ...) or a named set of such resources.</skos:definition>
        <rdfs:range rdf:resource="&ontoiop-trm;OMS"/>
        <rdfs:subPropertyOf rdf:resource="&ontoiop-trm;hasPart"/>
    </owl:ObjectProperty>
    

    <owl:ObjectProperty rdf:about="&ontoiop-trm;isFormalizedBy">
        <rdfs:label>is formalized by</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">institution that formalizes a logic</skos:definition>
        <rdfs:range rdf:resource="&ontoiop-trm;Institution"/>
        <rdfs:domain rdf:resource="&ontoiop-trm;Logic"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;isImpliedExtensionOf">
        <rdfs:label>is implied extension of</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">model-theoretic conservative extension that does not introduce new non-logical symbols} </skos:definition><skos:note rdf:datatype="&xsd;string"> A conservative extension $O_2$ of an OMS $O_1$ is an implied extension, if and only if the signature of $O_2$ is the signature of $O_1$. $O_2$ is an implied extension of $O_1$ if and only if the model class of $O_2$ is the model class of $O_1$. </skos:note><skos:note rdf:datatype="&xsd;string"> Each implied extension is also a definitional extension but not vice versa. </skos:note>
        <rdfs:subPropertyOf rdf:resource="&ontoiop-trm;isDefinitionalExtensionOf"/>
        <owl:propertyChainAxiom rdf:parseType="Collection">
            <rdf:Description rdf:about="&ontoiop-trm;isMappedBy"/>
            <rdf:Description rdf:about="&ontoiop-trm;implicitlyExtendsTo"/>
        </owl:propertyChainAxiom>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;isLanguageAspectOf">
        <rdfs:label>is language aspect of</rdfs:label>
        <owl:inverseOf rdf:resource="&ontoiop-trm;hasLanguageAspect"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;isLogicallyInteroperableWith">
        <rdf:type rdf:resource="&owl;SymmetricProperty"/>
        <rdfs:label>is logically interoperable with</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">TBD</skos:definition>
        <rdfs:range rdf:resource="&ontoiop-trm;StructuredOMS"/>
        <rdfs:domain rdf:resource="&ontoiop-trm;StructuredOMS"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;isMappableTo">
        <rdf:type rdf:resource="&owl;SymmetricProperty"/>
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <rdfs:label>is mappable to</rdfs:label>
        <skos:editorialNote rdf:datatype="&xsd;string">reification of this property, and its subproperties, is illustrated by property chain</skos:editorialNote>
        <owl:propertyChainAxiom rdf:parseType="Collection">
            <rdf:Description rdf:about="&ontoiop-trm;isMappedBy"/>
            <rdf:Description rdf:about="&ontoiop-trm;mapsTo"/>
        </owl:propertyChainAxiom>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ontoiop-trm;isMappedBy">
        <rdfs:label>is mapped by</rdfs:label>
        <owl:inverseOf rdf:resource="&ontoiop-trm;mapsFrom"/>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ontoiop-trm;isModelOfSignature">
        <rdfs:label>is a model of the signature</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">relationship between a model and a signature (vocabulary) such that the model provides a semantic interpretation of all non-logical symbols in the signature</skos:definition>
        <rdfs:domain rdf:resource="&ontoiop-trm;Model"/>
        <rdfs:range rdf:resource="&ontoiop-trm;Vocabulary"/>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ontoiop-trm;isModelOfOMS">
        <rdfs:label>is a model of the OMS</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">relationship between a model and an OMS where the model is a model of the signature of the OMS and further satisfies all sentences in the OMS.</skos:definition>
        <rdfs:domain rdf:resource="&ontoiop-trm;Model"/>
        <rdfs:range rdf:resource="&ontoiop-trm;OMS"/>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ontoiop-trm;isModuleOf">
        <rdfs:label>is module of</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">relationship between two OMSs where the first conservatively extends to the second OMS</skos:definition>
        <owl:inverseOf rdf:resource="&ontoiop-trm;isConservativeExtensionOf"/>
        <rdfs:subPropertyOf rdf:resource="&ontoiop-trm;isSubOMSOf"/>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ontoiop-trm;isOMSCombinationOf">
        <rdfs:label>is combination of OMSs</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">aggregation of all the OMS in a OMS graph, where non-logical symbols are shared according to the OMS mappings in the OMS graph} </skos:definition><skos:example rdf:datatype="&xsd;string">Consider an ontology involving a concept \texttt{Person}, and another one involving \texttt{Human being}, and an alignment that relates these to concepts. In the combination of the ontologies along the alignment, there is only one concept, representing both \texttt{Person} and \texttt{Human being}.</skos:example>
        <rdfs:range rdf:resource="&ontoiop-trm;SetOfOMSs"/>
        <rdfs:domain rdf:resource="&ontoiop-trm;StructuredOMS"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;isOMSDocumentationOf">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <rdfs:label>is OMS documentation of</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">relationship between an OMS documentation and an OMS where TBD</skos:definition>
        <rdfs:range rdf:resource="&ontoiop-trm;OMS"/>
        <rdfs:domain rdf:resource="&ontoiop-trm;OMSDocumentation"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;isOMSUnionOf">
        <rdfs:label>is union of OMSs</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">aggregation of several OMSs to a new OMS, without any renaming</skos:definition>
        <rdfs:range rdf:resource="&ontoiop-trm;SetOfOMSs"/>
        <rdfs:domain rdf:resource="&ontoiop-trm;StructuredOMS"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;isSubLanguageOf">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <rdfs:label>is sublanguage of</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">syntactically specified subset of a given language, consisting of a subset of its terminal and nonterminal symbols and grammar rules</skos:definition>
        <rdfs:range rdf:resource="&ontoiop-trm;Language"/>
        <rdfs:domain rdf:resource="&ontoiop-trm;Language"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;isSubLogicOf">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <rdfs:label>is sublogic of</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">a logic that is a syntactic restriction of another logic, inheriting its semnatics</skos:definition>
        <rdfs:domain rdf:resource="&ontoiop-trm;Logic"/>
        <rdfs:range rdf:resource="&ontoiop-trm;Logic"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;isSubOMSOf">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <rdfs:label>is subOMS of</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">OMS whose sets of non-logical symbols and sentences are subsets of those present in a given larger OMS</skos:definition>
        <rdfs:range rdf:resource="&ontoiop-trm;OMS"/>
        <rdfs:domain rdf:resource="&ontoiop-trm;OMS"/>
        <owl:inverseOf rdf:resource="&ontoiop-trm;extends"/>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ontoiop-trm;isVocabularyOfOMS">
        <rdfs:label>is the vocabulary of</rdfs:label>
        <skos:note rdf:datatype="&xsd;string">The signature of an OMS is usually uniquely determined.</skos:note>
        <skos:altLabel rdf:datatype="&xsd;string">is the signature of</skos:altLabel>
        <skos:definition rdf:datatype="&xsd;string">relationship between a vocabulary and an OMS where the set of non-logical symbols in the vocabulary is exactly the set of non-logical symbols occurring in the OMS</skos:definition>
    </owl:ObjectProperty>

    <owl:ObjectProperty rdf:about="&ontoiop-trm;mapsFrom">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <rdfs:label>maps from</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">relationship between a mapping and its domain</skos:definition>
        <rdfs:domain rdf:resource="&ontoiop-trm;Mapping"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;mapsTo">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <rdfs:label>maps to</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">relationship between a mapping and its codomain</skos:definition>
        <rdfs:domain rdf:resource="&ontoiop-trm;Mapping"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;profileOf">
        <rdfs:label>is profile of</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">see Class &apos;profile&apos;</skos:definition>
        <rdfs:range rdf:resource="&ontoiop-trm;OMSLanguage"/>
        <rdfs:domain rdf:resource="&ontoiop-trm;Profile"/>
        <rdfs:subPropertyOf rdf:resource="&ontoiop-trm;isSubLanguageOf"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;satisfies">
        <rdfs:label>satisfies</rdfs:label>
        <dct:abstract></dct:abstract>
        <skos:definition rdf:datatype="&xsd;string">relationship between a model and a sentence indicating that the sentence holds true in the model</skos:definition>
        <rdfs:domain rdf:resource="&ontoiop-trm;Model"/>
        <rdfs:seeAlso rdf:resource="&ontoiop-trm;SatisfactionRelation"/>
        <rdfs:range rdf:resource="&ontoiop-trm;Sentence"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;serializes">
        <rdfs:label>serializes</rdfs:label>
        <rdfs:range rdf:resource="&ontoiop-trm;Language"/>
        <rdfs:domain rdf:resource="&ontoiop-trm;OMSSerialization"/>
    </owl:ObjectProperty>
    
    <owl:ObjectProperty rdf:about="&ontoiop-trm;usesLanguage">
        <rdfs:label>uses language</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">relation between something and a language used by one or more components of it.</skos:definition>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <owl:Class rdf:about="&ontoiop-trm;AdjointEquivalence">
        <rdfs:label>adjoint of equivalence</rdfs:label>
        <owl:equivalentClass>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;isAdjointOf"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;Equivalence"/>
            </owl:Restriction>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Equivalence"/>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;AnnotationExpression">
        <rdfs:label>annotation expression</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Expression"/>
        <skos:definition rdf:datatype="&xsd;string">additional information without a logical semantics that is attached to an element of an OMS</skos:definition><skos:note rdf:datatype="&xsd;string">\label{note:annotation-rdf} Formally, an annotation is given as a $(\text{subject}, \text{predicate}, \text{object})$ triple as defined by \nisref{SOURCE: W3C/TR REC-rdf-concepts:2004, Section 6}. The subject of an annotation is an element of an OMS. The predicate is an RDF property defined in an external OMS and describes in what way the annotation object is related to the annotation subject. </skos:note>
  <skos:note rdf:datatype="&xsd;string"> According to note~\ref{note:annotation-rdf} it is possible to interpret annotations under an RDF semantics. ``Without a logical semantics&apos;&apos; in this definition means that annotations to an OMS are not considered sentences of that OMS. </skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;AnnotationExpressionLanguageAspect">
        <rdfs:label>annotation expression language aspect</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LanguageAspect"/>
        <owl:disjointWith rdf:resource="&ontoiop-trm;LogicalLanguageAspect"/>
        <owl:disjointWith rdf:resource="&ontoiop-trm;StructuringLanguageAspect"/>
        <skos:definition rdf:datatype="&xsd;string">the (unique) language aspect of an OMS language that enables the expression of comments and annotations</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;AnswerSubstitution">
        <rdfs:label>answer substitution</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Substitution"/>
        <skos:definition rdf:datatype="&xsd;string">substitution that, when applied to a given query, turns the latter into a logical consequence of a given OMS</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;Approximation">
        <rdfs:label>approximation</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LogicalOMSMapping"/>
        <skos:definition rdf:datatype="&xsd;string">logical OMS mapping to a logically implied theory (possibly after suitable translation) in a smaller signature or OMS language</skos:definition>
        <skos:editorialNote rdf:datatype="&xsd;string">this definition is derived from the defintion of approximant in the spec</skos:editorialNote>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;AxiomSentence">
        <rdfs:label>axiom sentence</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Sentence"/>
        <skos:definition rdf:datatype="&xsd;string">sentence postulated to be valid (i.e.\ true in every model)</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;BasicOMS">
        <rdfs:label>basic OMS</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;FlattenableOMS"/>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;StructuredOMS"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;hasPart"/>
                <owl:onClass rdf:resource="&ontoiop-trm;OMSDocumentation"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;hasPart"/>
                <owl:onClass rdf:resource="&ontoiop-trm;Vocabulary"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;hasPart"/>
                <owl:onClass rdf:resource="&ontoiop-trm;SetOfSentences"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:note rdf:datatype="&xsd;string"> The sentences must use only those non-logical symbols that are present in the signature. </skos:note>
        <skos:definition rdf:datatype="&xsd;string">signature equipped with a set of sentences and annotations, which may be used as a building block for a larger OMS</skos:definition>
    </owl:Class>
    


    <!-- http://www.omg.org/spec/OntoIOp/Terminology/ConsequenceTheoreticConservativeExtensionMappin -->

    <owl:Class rdf:about="&ontoiop-trm;ConsequenceTheoreticConservativeExtensionMappin">
        <rdfs:label>consequence-theoretic conservative extension mapping</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;ConservativeExtensionMapping"/>
        <skos:note rdf:datatype="&xsd;string">An extension $O_2$ of an OMS $O_1$ is a consequence-theoretic conservative extension, if all properties formulated in the signature of $O_1$ hold for $O_1$ whenever they hold for $O_2$.</skos:note>
        <skos:definition rdf:datatype="&xsd;string">extension that does not add new theorems (in terms of the unextended signature)</skos:definition>
    </owl:Class>
    


    <!-- http://www.omg.org/spec/OntoIOp/Terminology/ConservativeExtensionMapping -->

    <owl:Class rdf:about="&ontoiop-trm;ConservativeExtensionMapping">
        <rdfs:label>conservative extension mapping</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;ExtensionMapping"/>
        <skos:note rdf:datatype="&xsd;string">If used without qualification, the consequence-theoretic version is meant.</skos:note>
        <skos:definition rdf:datatype="&xsd;string">consequence-theoretic or model-theoretic conservative extension</skos:definition>
        <owl:disjointUnionOf rdf:parseType="Collection">
            <rdf:Description rdf:about="&ontoiop-trm;ConsequenceTheoreticConservativeExtensionMappin"/>
            <rdf:Description rdf:about="&ontoiop-trm;ModelTheoreticConservativeExtensionMapping"/>
        </owl:disjointUnionOf>
    </owl:Class>
    


    <!-- http://www.omg.org/spec/OntoIOp/Terminology/DefinitionalExtension -->

    <owl:Class rdf:about="&ontoiop-trm;DefinitionalExtensionMapping">
        <rdfs:label>definitional extension mapping</rdfs:label>
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ontoiop-trm;ModelTheoreticConservativeExtensionMapping"/>
                    <rdf:Description rdf:about="&ontoiop-trm;WeakDefinitionalExtensionMapping"/>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;MonomorphicExtensionMapping"/>
        <skos:note rdf:datatype="&xsd;string">$O_2$ being a definitional extension of $O_1$ implies a bijective correspondence between the classes of models of $O_2$ and $O_1$.</skos:note>
        <skos:note rdf:datatype="&xsd;string">An extension $O_2$ of an OMS $O_1$ is a definitional extension, if each model of $O_1$ can be uniquely expanded to a model of $O_2$.</skos:note>
        <skos:note rdf:datatype="&xsd;string">Each definitional extension is also a monomorphic extension but not vice versa.</skos:note>
        <skos:definition rdf:datatype="&xsd;string">extension whose newly introduced non-logical symbols are interpreted in a unique way</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;ElusiveOMS">
        <rdfs:label>elusive OMS</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;OMS"/>
        <owl:disjointWith rdf:resource="&ontoiop-trm;FlattenableOMS"/>
        <skos:definition rdf:datatype="&xsd;string">OMS that is not flattenable</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Equivalence">
        <rdfs:label>equivalence</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LogicalOMSMapping"/>
        <skos:definition rdf:datatype="&xsd;string">logical OMS mapping ensuring that two OMSs share the same definable concepts} </skos:definition><skos:note rdf:datatype="&xsd;string"> Two OMSs are equivalent if they have a common definitional extension. The OMSs may be written in different OMS languages. </skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Expression">
        <rdfs:label>expression</rdfs:label>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;usesLanguage"/>
                <owl:onClass rdf:resource="&ontoiop-trm;Language"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:definition rdf:datatype="&xsd;string">TBD see Class &apos;language&apos;</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;ExtensionMapping">
        <rdfs:label>extension mapping</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LogicalOMSMapping"/>
        <skos:definition rdf:datatype="&xsd;string">mapping between two OMSs where the sets of non-logical symbols and sentences of the second OMS are supersets of those present in the first OMS</skos:definition>
        <skos:editorialNote rdf:datatype="&xsd;string">This definition differs from that in the OntoIOp glossary by focussing on the mapping rather than the codomain of the mapping.</skos:editorialNote>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;FlattenableOMS">
        <rdfs:label>flattenable OMS</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;OMS"/>
        <skos:note rdf:datatype="&xsd;string">More precisely, an OMS is flattenable if and only if it is either a basic OMS or it is an extension, union, translation, module extraction, approximation, filtering, or reference of named OMS involving only flattenable OMS.</skos:note>
        <skos:definition rdf:datatype="&xsd;string">OMS that can be seen, by purely syntactical means, to be logically equivalent to a basic OMS</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Graph">
        <rdfs:label>graph</rdfs:label>
        <skos:altLabel rdf:datatype="&xsd;string">diagram</skos:altLabel>
        <skos:definition rdf:datatype="&xsd;string">TBD</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;HeterogeneousEnvironment">
        <rdfs:label>heterogeneous environment</rdfs:label>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;hasPart"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;OMSLogicGraph"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;hasPart"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;SupportsRelation"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;hasPart"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;OMSLanguageGraph"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:definition rdf:datatype="&xsd;string">environment for the expression of homogeneous and heterogeneous OMS, comprising a logic graph, an OMS language graph and a supports relation</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;HeterogeneousOMS">
        <rdfs:label>heterogeneous OMS</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;OMS"/>
        <owl:disjointWith rdf:resource="&ontoiop-trm;HomogeneousOMS"/>
        <skos:definition rdf:datatype="&xsd;string">OMS whose parts are supported by different logics</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;HomogeneousOMS">
        <rdfs:label>homogeneous OMS</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;OMS"/>
        <skos:definition rdf:datatype="&xsd;string">OMS whose parts are supported by one logic</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;ImpliedExtensionMapping">
        <rdfs:label>implied extension mapping</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;DefinitionalExtensionMapping"/>
        <skos:note rdf:datatype="&xsd;string">A conservative extension $O_2$ of an OMS $O_1$ is an implied extension, if and only if the signature of $O_2$ is the signature of $O_1$. $O_2$ is an implied extension of $O_1$ if and only if the model class of $O_2$ is the model class of $O_1$.</skos:note>
        <skos:note rdf:datatype="&xsd;string">Each implied extension is also a definitional extension but not vice versa.</skos:note>
        <skos:definition rdf:datatype="&xsd;string">model-theoretic conservative extension that does not introduce new non-logical symbols</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;Institution">
        <rdfs:label>institution</rdfs:label>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;formalizes"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;Logic"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:definition rdf:datatype="&xsd;string">metaframework mathematically formalising the notion of a logic</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Language">
        <rdfs:label>language</rdfs:label>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;hasPart"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;SetOfExpressions"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:definition rdf:datatype="&xsd;string">collection of expressions</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;LanguageAspect">
        <rdfs:label>language aspect</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">set of language constructs of a given language, not necessarily forming a sublanguage</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;LanguageMapping">
        <rdfs:label>language mapping</rdfs:label>
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ontoiop-trm;mapsFrom"/>
                        <owl:onClass rdf:resource="&ontoiop-trm;Language"/>
                        <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
                    </owl:Restriction>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ontoiop-trm;mapsTo"/>
                        <owl:onClass rdf:resource="&ontoiop-trm;Language"/>
                        <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Mapping"/>
        <skos:definition rdf:datatype="&xsd;string">mapping between languages</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;LinkedData">
        <rdfs:label>linked data</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">structured data that is published on the Web in a machine-processable way, according to principles specified in \cite{BernersLee:LinkedData2006,BizerHeath09}}</skos:definition><skos:note rdf:datatype="&xsd;string"> The linked data principles (adapted from \cite{BernersLee:LinkedData2006} and its paraphrase at \cite{Wikipedia:LinkedData2011}) are the following: \begin{enumerate} \item Use IRIs as names for things. \item Use HTTP IRIs so that these things can be referred to and looked up (``dereferenced&apos;&apos;) by people and user agents.\footnote{I.e., the IRI is treated as a URL (uniform resource locator).} \item Provide useful machine-processable (plus optionally human-readable) information about the thing when its IRI is dereferenced, using standard formats. \item Include links to other, related IRIs in the exposed data to improve discovery of other related information on the Web. \end{enumerate} </skos:note>
<skos:note rdf:datatype="&xsd;string"> RDF, serialized as RDF/XML \cite{W3C:REC-rdf-syntax-grammar-20040210}, is the most common format for publishing linked data. However, its usage is not mandatory. </skos:note>
<skos:note rdf:datatype="&xsd;string"> Using HTTP content negotiation \cite{rfc2616} it is possible to serve representations in different formats from the same URL. </skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Logic">
        <rdfs:label>logic</rdfs:label>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;isFormalizedBy"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;Institution"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:definition rdf:datatype="&xsd;string">specification of valid reasoning that comprises signatures, sentences, models, and a satisfaction relation between models and sentences</skos:definition>
  <skos:note rdf:datatype="&xsd;string"> Most OMS languages have an underlying logic. </skos:note>
  <skos:example rdf:datatype="&xsd;string"> $\mathcal{SROIQ}(D)$ is the logic underlying OWL 2 DL. </skos:example>
  <skos:note rdf:datatype="&xsd;string"> See annex~\ref{a:rdf-logic-vocab} for the organization of the relation between OMS languages and their logics and serializations. </skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;LogicApproximation">
        <rdfs:label>logic approximation</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LogicMapping"/>
        <skos:definition rdf:datatype="&xsd;string">mapping of a source logic onto a (usually less expressive) target logic that tries to approximate the OMSs expressed in the source logic with means of the expressivity of the target logic</skos:definition><skos:note rdf:datatype="&xsd;string"> A unique maximal approximation need not exist. </skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;LogicMapping">
        <rdfs:label>logic mapping</rdfs:label>
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ontoiop-trm;mapsFrom"/>
                        <owl:onClass rdf:resource="&ontoiop-trm;Logic"/>
                        <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
                    </owl:Restriction>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ontoiop-trm;mapsTo"/>
                        <owl:onClass rdf:resource="&ontoiop-trm;Logic"/>
                        <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Mapping"/>
        <skos:definition rdf:datatype="&xsd;string">mapping between logics</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;LogicReduction">
        <rdfs:label>logic reduction</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LogicMapping"/>
        <skos:definition rdf:datatype="&xsd;string">mapping of a source logic onto a (usually less expressive) target logic (mapping signatures, sentences and models) that simply forgets those parts of the logical structure not fitting the target logic</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;LogicTranslation">
        <rdfs:label>logic translation</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LogicMapping"/>
        <skos:definition rdf:datatype="&xsd;string">mapping of a source logic into a target logic (mapping signatures, sentences and models) that keeps or encodes the logical content of OMSs</skos:definition>
    </owl:Class>
    

    <owl:Class rdf:about="&ontoiop-trm;LogicalLanguageAspect">
        <rdfs:label>logical language aspect</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LanguageAspect"/>
        <owl:disjointWith rdf:resource="&ontoiop-trm;StructuringLanguageAspect"/>
        <skos:definition rdf:datatype="&xsd;string">the (unique) language aspect of an OMS language that enables the expression of non-logical symbols and sentences in a logical language</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;LogicalOMSMapping">
        <rdfs:label>logical OMS mapping</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;OMSMapping"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;hasPart"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;SetOfCorrespondences"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:definition rdf:datatype="&xsd;string">OMS mapping that has a formal, logic-based semantics</skos:definition><skos:note rdf:datatype="&xsd;string"> Logical OMS mappings are given as sets of correspondences, which are required to be \emph{signature morphisms}. </skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;LogicalTheory">
        <rdfs:label>logical theory</rdfs:label>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;hasPart"/>
                <owl:onClass rdf:resource="&ontoiop-trm;SetOfSentences"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;hasPart"/>
                <owl:onClass rdf:resource="&ontoiop-trm;Vocabulary"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:definition rdf:datatype="&xsd;string">signature equipped with a set of sentences over the signature</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Mapping">
        <rdfs:label>mapping</rdfs:label>
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ontoiop-trm;mapsFrom"/>
                        <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:cardinality>
                    </owl:Restriction>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ontoiop-trm;mapsTo"/>
                        <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:cardinality>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <skos:definition rdf:datatype="&xsd;string">TBD</skos:definition>
        <skos:note rdf:datatype="&xsd;string">in some cases is a morphism, as in Category Theory.</skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Model">
        <rdfs:label>model</rdfs:label>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;isModelOfSignature"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;Vocabulary"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:definition rdf:datatype="&xsd;string"> semantic interpretation of a signature</skos:definition>
        <skos:note rdf:datatype="&xsd;string">A model of an OMS is a model of the signature of the OMS that moreover satisfies all the axioms of the OMS.</skos:note>
        <skos:scopeNote rdf:datatype="&xsd;string">This term is not to be confused with model in the sense of modeling (i.e., the ``M&apos;&apos; in OMS).</skos:scopeNote>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;ModelTheoreticConservativeExtensionMapping">
        <rdfs:label>model-theoretic conservative extension mapping</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;ConservativeExtensionMapping"/>
        <skos:note rdf:datatype="&xsd;string">An extension $O_2$ of an OMS $O_1$ is a model-theoretic conservative extension, if all properties formulated in the signature of $O_1$ hold for $O_1$ whenever they hold for $O_2$.</skos:note>
        <skos:note rdf:datatype="&xsd;string">Any model-theoretic conservative extension is also a consequence-theoretic one.</skos:note>
        <skos:definition rdf:datatype="&xsd;string">extension mapping that does not lead to a restriction of class of models of an OMS</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;ModuleExtraction">
        <rdfs:label>module extraction</rdfs:label>
        <sm:informativeReference>Cited and slightly adapted from \cite{SuarezFigueroaEtAl:OntologyGlossary2008}</sm:informativeReference>
        <skos:note rdf:datatype="&xsd;string">The goal of module extraction is ``decomposing an OMS into smaller, more manageable modules with appropriate dependencies&apos;&apos; \cite{DBLP:series/lncs/5445}</skos:note>
        <skos:definition rdf:datatype="&xsd;string">activity of obtaining from an OMS concrete modules to be used for a particular purpose (e.g. to contain a particular sub-signature of the original OMS)</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;MonomorphicExtensionMapping">
        <rdfs:label>monomorphic extension mapping</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;ModelTheoreticConservativeExtensionMapping"/>
        <skos:note rdf:datatype="&xsd;string">An extension $O_2$ of an OMS $O_1$ is a monomorphic extension, if each model of $O_1$ can be expanded to a model of $O_2$ that is unique up to isomorphism.</skos:note>
        <skos:note rdf:datatype="&xsd;string">Each monomorphic extension is also a model-theoretic conservative extension but not vice versa.</skos:note>
        <skos:definition rdf:datatype="&xsd;string">extension whose newly introduced non-logical symbols are interpreted in a way unique up to isomorphism</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;NonLogicalSymbol">
        <rdfs:label>non-logical symbol</rdfs:label>
        <skos:altLabel rdf:datatype="&xsd;string">OMS symbol</skos:altLabel>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Symbol"/>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Term"/>
        <skos:example rdf:datatype="&xsd;string"> Non-logical symbols in Common Logic \nisref{ISO/IEC 24707:2007} comprise \begin{itemize} \item names (denoting objects from the domain of discourse), \item sequence markers (denoting sequences of objects). \end{itemize} This is opposed to logical symbols in Common Logic, e.g.\ logical connectives and quantifiers. </skos:example>
        <skos:example rdf:datatype="&xsd;string"> Non-logical symbols in OWL \nisref{W3C/TR REC-owl2-syntax:2009} (there called ``entities&apos;&apos;) comprise \begin{itemize} \item individuals (denoting objects from the domain of discourse), \item classes (denoting sets of objects; also called concepts), and \item properties (denoting binary relations over objects; also called roles). \end{itemize} This is opposed to logical symbols in OWL, e.g.\ those for intersection and union of classes. </skos:example>
        <skos:note rdf:datatype="&xsd;string">The notion of ``atomic sentence&apos;&apos; used in logic is different, it usually may involve several non-logical symbols. </skos:note>
        <skos:definition rdf:datatype="&xsd;string">OMS symbol atomic expression or syntactic constituent of an OMS that requires an interpretation through a model</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;OMS">
        <rdfs:label>OMS (ontology, specification or model)</rdfs:label>
        <owl:equivalentClass>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ontoiop-trm;HeterogeneousOMS"/>
                    <rdf:Description rdf:about="&ontoiop-trm;HomogeneousOMS"/>
                </owl:unionOf>
            </owl:Class>
        </owl:equivalentClass>
        <owl:equivalentClass>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ontoiop-trm;ElusiveOMS"/>
                    <rdf:Description rdf:about="&ontoiop-trm;FlattenableOMS"/>
                </owl:unionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;usesLanguage"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;OMSLanguage"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:note rdf:datatype="&xsd;string">An OMS can be written in different OMS language serializations.</skos:note>
        <skos:definition rdf:datatype="&xsd;string">collection of expressions (like non-logical symbols, sentences and structuring elements) in a given OMS language (or several such languages)</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;OMSDocumentation">
        <rdfs:label>OMS documentation</rdfs:label>
        <sm:informativeReference>  
    Adapted from \cite{SuarezFigueroaEtAl:OntologyGlossary2008}
  </sm:informativeReference>
        <skos:definition rdf:datatype="&xsd;string">set of all annotations to an OMS, plus any other documents and explanatory comments generated during the entire OMS building process</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;OMSGraph">
        <rdfs:label>OMS graph</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Graph"/>
        <skos:definition rdf:datatype="&xsd;string"> graph with OMSs as nodes and OMS mappings as edges, showing how the OMS are interlinked </skos:definition><skos:note rdf:datatype="&xsd;string"> An OMS graph is a diagram of OMS in the sense of category theory, but different from a diagram in the sense of model-driven architecture.</skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;OMSLanguage">
        <rdfs:label>OMS language</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Language"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;supportsLogic"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;Logic"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:note rdf:datatype="&xsd;string"> An OMS language is used for the formal specification of OMSs.</skos:note>
        <skos:example rdf:datatype="&xsd;string"> OMS languages include OWL, Common Logic, F-logic, UML class diagrams, RDFS, and OBO. </skos:example>
        <skos:definition rdf:datatype="&xsd;string">language equipped with a formal, declarative, logic-based semantics, plus non-logical annotations</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;OMSLanguageGraph">
        <rdfs:label>OMS language graph</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Graph"/>
        <skos:definition rdf:datatype="&xsd;string">TBD</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;OMSLanguageTranslation">
        <rdfs:label>OMS language translation</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LanguageMapping"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;mapsFrom"/>
                <owl:onClass rdf:resource="&ontoiop-trm;OMSLanguage"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;mapsTo"/>
                <owl:onClass rdf:resource="&ontoiop-trm;OMSLanguage"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:definition rdf:datatype="&xsd;string">mapping from constructs in the source OMS language to their equivalents in the target OMS language</skos:definition><skos:note rdf:datatype="&xsd;string"> An OMS language translation shall satisfy the property that the result of a translation is a well-formed text in the target language. </skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;OMSLogicGraph">
        <rdfs:label>OMS logic graph</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Graph"/>
        <skos:definition rdf:datatype="&xsd;string">TBD</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;OMSMapping">
        <rdfs:label>OMS mapping</rdfs:label>
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ontoiop-trm;mapsFrom"/>
                        <owl:onClass rdf:resource="&ontoiop-trm;OMS"/>
                        <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
                    </owl:Restriction>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ontoiop-trm;mapsTo"/>
                        <owl:onClass rdf:resource="&ontoiop-trm;OMS"/>
                        <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Mapping"/>
        <skos:definition rdf:datatype="&xsd;string">relationship between two OMSs, typically given as a set of correspondences</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;OMSNetwork">
        <rdfs:label>OMS network</rdfs:label>
        <skos:altLabel rdf:datatype="&xsd;string">hyperontology</skos:altLabel>
        <skos:definition rdf:datatype="&xsd;string">collection of named OMSs, possibly written in different OMS languages, linked by named OMS mappings and named OMS graphs</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;OMSSerialization">
        <rdfs:label>OMS serialization</rdfs:label>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;serializes"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;OMSLanguage"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:definition rdf:datatype="&xsd;string">specific syntactic encoding of a given OMS language} </skos:definition><skos:note rdf:datatype="&xsd;string">Serializations serve as standard formats for exchanging OMSs between tools.</skos:note><skos:example rdf:datatype="&xsd;string">OWL uses the term ``serialization&apos;&apos;; the following are standard OWL serializations: OWL functional-style syntax, OWL/XML, OWL Manchester syntax, plus any standard serialization of RDF (e.g.  RDF/XML, Turtle, \dots). However, RDF/XML is the only one tools are required to implement. </skos:example>
  <skos:example rdf:datatype="&xsd;string"> Common Logic uses the term ``dialect&apos;&apos;; the following are standard Common Logic dialects: Common Logic Interchange Format (CLIF), Conceptual Graph Interchange Format (GCIF), eXtended Common Logic Markup Language (XCL).</skos:example>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Profile">
        <rdfs:label>profile</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;OMSLanguage"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;supportsLogic"/>
                <owl:onClass rdf:resource="&ontoiop-trm;Logic"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:definition rdf:datatype="&xsd;string">(syntactic) sublanguage of an OMS language interpreting according to a particular logic that targets specific applications or reasoning methods} </skos:definition>
<skos:example rdf:datatype="&xsd;string">Profiles of OWL 2 include OWL 2 EL, OWL 2 QL, OWL 2 RL, OWL 2 DL, and OWL 2 Full.</skos:example><skos:note rdf:datatype="&xsd;string">Profiles typically correspond to sublogics. </skos:note>
  <skos:note rdf:datatype="&xsd;string"> Profiles can have different logics, even with completely different semantics, e.g.\ OWL 2 DL versus OWL 2 Full.</skos:note><skos:note rdf:datatype="&xsd;string"> The logic needs to support the language. </skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Query">
        <rdfs:label>query</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Sentence"/>
        <skos:definition rdf:datatype="&xsd;string">sentence containing query variables that can be instantiated by a substitution</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;QueryLanguage">
        <rdfs:label>query language</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;OMSLanguage"/>
        <skos:example rdf:datatype="&xsd;string"> SPARQL, Prolog </skos:example>
        <skos:scopeNote rdf:datatype="&xsd;string"> There are also general purpose OMS languages, which can express both OMS and quries. </skos:scopeNote>
        <skos:definition rdf:datatype="&xsd;string">OMS language specifically dedicated to queries</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;QueryVariable">
        <rdfs:label>query variable</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Symbol"/>
        <skos:note rdf:datatype="&xsd;string">From an abstract point of view, query variables are just symbols; they are used in a way that they will be substituted using a substitution. Many OMS languages have special notations for (query) variables.</skos:note>
        <skos:note rdf:datatype="&xsd;string">If there are no variables in an OMS language, constants can be used as query variables.</skos:note>
        <skos:note rdf:datatype="&xsd;string">Usually, query variables are the free variables of a sentence, whereas there can be other (bound) variables.</skos:note>
        <skos:definition rdf:datatype="&xsd;string">symbol that will be used in a query and a substitution</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Reduction">
        <rdfs:label>reduction</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LogicalOMSMapping"/>
        <skos:definition rdf:datatype="&xsd;string">logical OMS mapping reducing an OMS to a smaller signature</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Renaming">
        <rdfs:label>renaming</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LogicalOMSMapping"/>
        <skos:definition rdf:datatype="&xsd;string">assignment of new names to some non-logical symbols of an OMS</skos:definition><skos:note rdf:datatype="&xsd;string"> A renaming results in a logical OMS mapping between the original and the renamed OMS. </skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Resource">
        <rdfs:label>resource</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">something that can be globally identified} </skos:definition><skos:note rdf:datatype="&xsd;string">\nisref{IETF/RFC 3986:2005, Section 1.1} deliberately defines a resource as ``in a general sense \textelp{} whatever might be identified by \textins*{an IRI}&apos;&apos;. The original source refers to URIs, but DOL uses the compatible IRI standard \nisref{IETF/RFC 3987:2005} for identification.</skos:note><skos:example rdf:datatype="&xsd;string">Familiar examples include an electronic document, an image, a source of information with a consistent purpose (e.g., ``today&apos;s weather report for Los Angeles&apos;&apos;), a service (e.g., an HTTP-to-SMS gateway), and a collection of other resources. A resource is not necessarily accessible via the Internet; e.g., human beings, corporations, and bound books in a library can also be resources. Likewise, abstract concepts can be resources, such as the operators and operands of a mathematical equation, the types of a relationship (e.g., ``parent&apos;&apos; or ``employee&apos;&apos;), or numeric values (e.g., zero, one, and infinity). \nisref{IETF/RFC 3986:2005, Section 1.1}</skos:example>
    </owl:Class>
    


    <!-- http://www.omg.org/spec/OntoIOp/Terminology/SatisfactionRelation -->

    <owl:Class rdf:about="&ontoiop-trm;SatisfactionRelation">
        <rdfs:label>satisfaction relation</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">relation between models and sentences indicating which sentences hold true in the model</skos:definition>
        <rdfs:seeAlso rdf:resource="&ontoiop-trm;satisfies"/>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Sentence">
        <rdfs:label>sentence</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Term"/>
        <skos:definition rdf:datatype="&xsd;string">term that is either true or false in a given model, i.e.\ which is assigned a truth value in this model.</skos:definition>
        <skos:note rdf:datatype="&xsd;string">A sentence can conform to one or more signatures (namely those signatures containing all non-logical symbols used in the sentence).</skos:note>
        <skos:note rdf:datatype="&xsd;string">\CLnote[type=fyi]{From Common Logic, I changed ``unit of logical text&apos;&apos; to ``term&apos;&apos;.}}</skos:note>
        <skos:note rdf:datatype="&xsd;string">In a model, on the one hand, a sentence is always true or false. In an OMS, on the other hand, a sentence can have several logical statuses: it can be an axiom, if postulated to be true; a theorem, if proven from other axioms and theorems; a conjecture, if expecting to be proven from other axioms and theorems; or have another of many possible statuses.</skos:note>
        <skos:note rdf:datatype="&xsd;string">It is quite common that sentences are required to be closed (i.e.\ have no free variables). However, this depends on the OMS language at hand.</skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Set">
        <rdfs:label>set</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">set whose members have a certain type, as specified by the type parameter.</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;SetOfAnnotationExpressions">
        <rdfs:label>set of annotation expressions</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;SetOfExpressions"/>
        <skos:definition rdf:datatype="&xsd;string">set whose members are annotation expressions.</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;SetOfCorrespondences">
        <rdfs:label>set of correspondences</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;SetOfMappings"/>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;SetOfExpressions">
        <rdfs:label>set of expressions</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Set"/>
        <skos:definition rdf:datatype="&xsd;string">set whose members are expressions</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;SetOfMappings">
        <rdfs:label>set of mappings</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Set"/>
        <skos:definition rdf:datatype="&xsd;string">set whose members are mappings.</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;SetOfNonlogicalSymbols">
        <rdfs:label>set of non-logical symbols</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;SetOfExpressions"/>
        <skos:definition rdf:datatype="&xsd;string">set whose members are non-logical symbols</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;SetOfOMSs">
        <rdfs:label>set of OMSs</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Set"/>
        <skos:definition rdf:datatype="&xsd;string">set whose members are OMSs.</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;SetOfSentences">
        <rdfs:label>set of sentences</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;SetOfExpressions"/>
        <skos:definition rdf:datatype="&xsd;string">set whose members are sentences</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;StandoffMarkup">
        <rdfs:label>standoff markup</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Language"/>
        <skos:definition rdf:datatype="&xsd;string">way of providing annotations to subjects in external resources, without embedding them into the original resource (here: OMS)</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;StructuredOMS">
        <rdfs:label>structured OMS</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;OMS"/>
        <skos:definition rdf:datatype="&xsd;string">OMS that results from other OMSs by import, union, combination, renaming or other structuring operations</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;FocusedOMS">
        <rdfs:label>focused OMS</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;OMS"/>
        <skos:definition rdf:datatype="&xsd;string">TBD</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;StructuringLanguageAspect">
        <rdfs:label>structuring language aspect</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LanguageAspect"/>
        <skos:definition rdf:datatype="&xsd;string">the (unique) language aspect of an OMS language that covers structured OMSs as well as the relations of basic OMSs and structured OMSs to each other, including, but not limited to imports, OMS mappings, conservative extensions, and the handling of prefixes for CURIEs</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Substitution">
        <rdfs:label>substitution</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LogicalOMSMapping"/>
        <skos:definition rdf:datatype="&xsd;string">logical OMS mapping that maps query variables of one OMS to complex terms of another OMS</skos:definition>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;SupportsRelation">
        <rdfs:label>supports relation</rdfs:label>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;Symbol">
        <rdfs:label>symbol</rdfs:label>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Term">
        <rdfs:label>term</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Expression"/>
        <skos:definition rdf:datatype="&xsd;string">syntactic expression either consisting of a single non-logical symbol or recursively composed of other terms (a.k.a. its subterms)</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;TheoremSentence">
        <rdfs:label>theorem sentence</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;Sentence"/>
        <skos:definition rdf:datatype="&xsd;string">sentence that has been proven from other axioms and theorems</skos:definition>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;View">
        <rdfs:label>view</rdfs:label>
        <skos:altLabel>interpretation</skos:altLabel>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;LogicalOMSMapping"/>
        <skos:definition rdf:datatype="&xsd;string">logical OMS mapping that postulates a relation between two OMSs</skos:definition>
      <skos:note rdf:datatype="&xsd;string">An interpretation typically leads to proof obligations, \ie one has to prove that axioms of the source OMS of the mapping are theorems in the target OMS.</skos:note><skos:note rdf:datatype="&xsd;string"> When an interpretation is given as a set of correspondences, these are given as tuples, where the type of relationship is given by the specific kind of interpretation. </skos:note>
    </owl:Class>
    
    <owl:Class rdf:about="&ontoiop-trm;Vocabulary">
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ontoiop-trm;hasPart"/>
                <owl:someValuesFrom rdf:resource="&ontoiop-trm;SetOfNonlogicalSymbols"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <skos:note rdf:datatype="&xsd;string">The signature of a term is the set of all non-logical symbols occuring in the term. The signature of an OMS language is the set of all non-logical symbols possible in that language.</skos:note>
        <skos:definition rdf:datatype="&xsd;string">set (or otherwise structured entity) of non-logical symbols of an OMS</skos:definition>
        <skos:altLabel rdf:datatype="&xsd;string">signature</skos:altLabel>
        <skos:prefLabel rdf:datatype="&xsd;string">vocabulary</skos:prefLabel>
    </owl:Class>

    <owl:Class rdf:about="&ontoiop-trm;WeakDefinitionalExtensionMapping">
        <rdfs:label>weak definitional extension mapping</rdfs:label>
        <rdfs:subClassOf rdf:resource="&ontoiop-trm;ExtensionMapping"/>
        <skos:note rdf:datatype="&xsd;string">An extension $O_2$ of an OMS $O_1$ is a weak definitional extension, if each model of $O_1$ can be expanded to at most one model of $O_2$.</skos:note>
        <skos:note rdf:datatype="&xsd;string">An extension is definitional if and only if it is both weakly definitional and model-theoretically conservative.</skos:note>
        <skos:definition rdf:datatype="&xsd;string">extension whose newly introduced non-logical symbols can be interpreted in at most one way</skos:definition>
    </owl:Class>

    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <owl:NamedIndividual rdf:about="&ontoiop-trm;DOL">
        <rdf:type rdf:resource="&ontoiop-trm;OMSLanguage"/>
        <rdfs:label>DOL</rdfs:label>
        <skos:definition rdf:datatype="&xsd;string">language for formalizing distributed OMSs, whose syntax and semantics are specified in this \IS} </skos:definition><skos:note rdf:datatype="&xsd;string"> When viewed as an \termref{OMS language}, DOL has OMSs as its non-logical symbols, and OMS mappings as its sentences.</skos:note>
    </owl:NamedIndividual>
    
</rdf:RDF>