<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY dct "http://purl.org/dc/terms/" >
    <!ENTITY skos "http://www.w3.org/2004/02/skos/core#" >
    <!ENTITY sm "http://www.omg.org/techprocess/ab/SpecificationMetadata/" >
    <!ENTITY ontoiop-trm "http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/" >
    <!ENTITY apiforkb-trm "http://www.omg.org/spec/API4KB/API4KBTerminology/" >
    <!ENTITY apiforkb-op "http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBOperation/" >
    <!ENTITY apiforkb-ev "http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/" >
    <!ENTITY apiforkb-pro "http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/" >
    <!ENTITY apiforkb-try     "http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBTry/" >
]>


<rdf:RDF xml:base="&apiforkb-try;"
  xmlns:rdf="&rdf;"
  xmlns:rdfs="&rdfs;"
  xmlns:owl="&owl;"
  xmlns:xsd="&xsd;"
  xmlns:dct="&dct;"
  xmlns:skos="&skos;"
  xmlns:sm="&sm;"
  xmlns:ontoiop-trm="&ontoiop-trm;"
  xmlns:apiforkb-trm="&apiforkb-trm;"
  xmlns:apiforkb-op="&apiforkb-op;"
  xmlns:apiforkb-ev="&apiforkb-ev;"
  xmlns:apiforkb-pro="&apiforkb-pro;"
  xmlns:apiforkb-try="&apiforkb-try;">
  
  <owl:Ontology rdf:about="&apiforkb-try;/">
    <rdfs:label>API4KB Try Terminology Ontology</rdfs:label>
    
    
    <!-- Curation and Rights Metadata for the API4KB Try Terminology Ontology -->
    
    <sm:copyright rdf:datatype="&xsd;string">Copyright (c) 2014 Athan Services
      Copyright (c) 2014 Thematix Partners LLC
      Copyright (c) 2014 Object Management Group, Inc.</sm:copyright>
    <dct:license rdf:datatype="&xsd;anyURI">http://www.omg.org/techprocess/ab/SpecificationMetadata/MITLicense</dct:license>
    
    
    <!-- Ontology/File-Level Metadata for the API4KB Try Terminology Ontology -->
    
    <sm:filename rdf:datatype="&xsd;string">API4KBTerminologyTry.rdf</sm:filename>
    <sm:fileAbbreviation rdf:datatype="&xsd;string">api4kb-try</sm:fileAbbreviation>
    <owl:versionIRI rdf:resource="http://www.omg.org/spec/API4KB/20150201/API4KBTerminology/API4KBTry/"/>
    <sm:fileAbstract rdf:datatype="&xsd;string">This ontology covers terminology used for describing events defined by the API4KB specification.</sm:fileAbstract>
    
    <sm:contentLanguage rdf:datatype="&xsd;anyURI">http://www.w3.org/standards/techs/owl#w3c_all</sm:contentLanguage>
    <sm:contentLanguage rdf:datatype="&xsd;anyURI">http://www.omg.org/spec/ODM/</sm:contentLanguage>
    
    <owl:imports rdf:resource="http://www.omg.org/techprocess/ab/SpecificationMetadata/"/>
    <owl:imports rdf:resource="http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/"/>
    
  </owl:Ontology>


  <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
   -->

  <owl:ObjectProperty rdf:about="&apiforkb-try;hasEvent">
    <rdfs:label>has event</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">event of a success</skos:definition>
    <rdf:type rdf:resource="&owl;FunctionalProperty"/>
    <rdfs:domain rdf:resource="&apiforkb-try;Success"/>    
    <owl:inverseOf rdf:resource="&apiforkb-try;isEventOf"/>
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-try;isEventOf">
    <rdfs:label>is event of</rdfs:label>
  </owl:ObjectProperty>  
  
  
  <owl:ObjectProperty rdf:about="&apiforkb-try;hasInput">
    <rdfs:label>has input</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">input of a try</skos:definition>
    <rdfs:domain rdf:resource="&apiforkb-try;Try"/>
    <owl:inverseOf rdf:resource="&apiforkb-try;isInputOf"/>
    <owl:propertyChainAxiom rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-try;hasEvent"/>
      <rdf:Description rdf:about="&apiforkb-ev;hasInput"/>
    </owl:propertyChainAxiom>
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-try;isInputOf">
    <rdfs:label>is input of</rdfs:label>
  </owl:ObjectProperty>  
  
  <owl:ObjectProperty rdf:about="&apiforkb-try;hasOutput">
    <rdfs:label>has output</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">output of a successful try</skos:definition>
    <skos:note>
      &lt;rdf:type rdf:resource="&owl;FunctionalProperty"/>
    </skos:note>
      <rdfs:domain rdf:resource="&apiforkb-try;Success"/>
    <owl:inverseOf rdf:resource="&apiforkb-try;isOutputOf"/>
    <owl:propertyChainAxiom rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-try;hasEvent"/>
      <rdf:Description rdf:about="&apiforkb-ev;hasOutput"/>
    </owl:propertyChainAxiom>
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-try;isOutputOf">
    <rdfs:label>is output of</rdfs:label>
  </owl:ObjectProperty>
    
  <owl:ObjectProperty rdf:about="&apiforkb-try;appliesQuery">
    <rdfs:label>applies query resource</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">TBD</skos:definition>
    <rdfs:domain rdf:resource="&apiforkb-try;QueryingTry"/>
    <rdfs:range rdf:resource="&apiforkb-trm;QuerySource"/>    
    <rdfs:subPropertyOf rdf:resource="&apiforkb-try;hasInput"/>
    <skos:note>need inverse</skos:note>
  </owl:ObjectProperty>

  <owl:ObjectProperty rdf:about="&apiforkb-try;appliesQueryTo">
    <rdfs:label>applies query to resource</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">TBD</skos:definition>
    <skos:note>
      &lt;rdf:type rdf:resource="&owl;FunctionalProperty"/>                  </skos:note>
    <rdfs:domain rdf:resource="&apiforkb-try;QueryingTry"/>
    <rdfs:range rdf:resource="&apiforkb-trm;KnowledgeSource"/>    
    <rdfs:subPropertyOf rdf:resource="&apiforkb-try;hasInput"/>
    <skos:note>need inverse</skos:note>
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-try;adds">
    <rdfs:label>adds resource</rdfs:label>
    <rdfs:domain rdf:resource="&apiforkb-try;InternalAddingTry"/>
    <rdfs:range rdf:resource="&apiforkb-trm;KnowledgeSource"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-try;hasInput"/>
    <skos:note>need inverse</skos:note>
  </owl:ObjectProperty>

  <owl:ObjectProperty rdf:about="&apiforkb-try;addsTo">
    <rdfs:label>adds resource</rdfs:label>
    <skos:note>
      &lt;rdf:type rdf:resource="&owl;FunctionalProperty"/>            
    </skos:note>
    <rdfs:domain rdf:resource="&apiforkb-try;InternalAddingTry"/>
    <rdfs:range rdf:resource="&apiforkb-trm;KnowledgeSource"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-try;hasInput"/>
    <skos:note>need inverse</skos:note>
  </owl:ObjectProperty>

  <owl:ObjectProperty rdf:about="&apiforkb-try;hasOutputFromInStreaming">
    <rdfs:label>has output from instreaming</rdfs:label>
    <rdfs:domain rdf:resource="&apiforkb-try;InStreamTry"/>
    <rdfs:range rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-try;hasOutput"/>
    <skos:note>need inverse</skos:note>
  </owl:ObjectProperty>
  
  <owl:ObjectProperty rdf:about="&apiforkb-try;hasOutputFromUnmarshalling">
    <rdfs:label>has output from unmarshalling</rdfs:label>
    <rdfs:domain rdf:resource="&apiforkb-try;UnmarshallingTry"/>
    <rdfs:range rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-try;hasOutput"/>
    <skos:note>need inverse</skos:note>
  </owl:ObjectProperty>

  <owl:ObjectProperty rdf:about="&apiforkb-try;hasOutputFromParsing">
    <rdfs:label>has output from parsing</rdfs:label>
    <rdfs:domain rdf:resource="&apiforkb-try;ParsingTry"/>
    <rdfs:range rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-try;hasOutput"/>
    <skos:note>need inverse</skos:note>
  </owl:ObjectProperty>
    
  <owl:ObjectProperty rdf:about="&apiforkb-try;hasOutputFromConceptualizing">
    <rdfs:label>has output from conceptualizing</rdfs:label>
    <rdfs:domain rdf:resource="&apiforkb-try;ConceptualizingTry"/>
    <rdfs:range rdf:resource="&apiforkb-trm;KnowledgeAsset"/>
    <rdfs:subPropertyOf rdf:resource="&apiforkb-try;hasOutput"/>
    <skos:note>need inverse</skos:note>
  </owl:ObjectProperty>
  
  
  
  <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

  <owl:Class rdf:about="&apiforkb-try;Try">
    <rdfs:label>try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">try of an API4KB Operation.</skos:definition>
    <skos:example rdf:datatype="&xsd;string">Example: the try of some applications to execute the adding of an Asset to an immutable KB to generate a new immutable KB. </skos:example>
    <owl:subClassOf>
      <owl:Restriction>
        <owl:onProperty
          rdf:resource="&apiforkb-try;isTryOf"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-op;Operation"/>
      </owl:Restriction>
    </owl:subClassOf>
    <owl:disjointUnionOf rdf:parseType="Collection">
      <rdf:Description
        rdf:about="&apiforkb-try;Success"/>
      <rdf:Description
        rdf:about="&apiforkb-try;Failure"/>
    </owl:disjointUnionOf>
  </owl:Class>
  
  
  <owl:Class rdf:about="&apiforkb-try;Success">
    <rdfs:label>success</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">success of application of an API4KB Operation.</skos:definition>
    <skos:example rdf:datatype="&xsd;string">Example: the success of adding of an Asset to an immutable KB to generate a new immutable KB,
      executed by some application. </skos:example>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;Try"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-try;hasEvent"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-ev;Event"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-try;Failure">
    <rdfs:label>failure</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">failure of application of an API4KB Operation.</skos:definition>
    <skos:example rdf:datatype="&xsd;string">Example: the failure of adding of an Asset to an immutable KB to generate a new immutable KB,
      attemptec by some application. </skos:example>
    <owl:subClassOf>      
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasEvent"/>
        <owl:onClass rdf:resource="&apiforkb-ev;Event"/>
        <owl:maxQualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">0</owl:maxQualifiedCardinality>
      </owl:Restriction>    
    </owl:subClassOf>
    
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-try;SideEffectFreeTry">
    <rdfs:label>side-effect-free event</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">try of a side-effect-free operation</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;Try"/>
    <owl:equivalentClass>
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;Try"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-try;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;SideEffectFreeOperation"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>    
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-try;SideEffectfulTry">
    <rdfs:label>side-effectful event</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">try of a side-effectful operation</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;Try"/>
    <owl:equivalentClass>
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;Try"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-try;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;SideEffectfulOperation"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>    
  </owl:Class>


  <owl:Class rdf:about="&apiforkb-try;UnaryTry">
    <rdfs:label>unary event</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">try of a unary operation</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;Try"/>
    <owl:equivalentClass>
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;Try"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-try;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;UnaryOperation"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
  </owl:Class> 
  

  <owl:Class rdf:about="&apiforkb-try;InternalTry">
    <rdfs:label>internal operation event</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">try of an Internal Operation.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;Try"/>
    <owl:equivalentClass>
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;Try"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-try;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;InternalOperation"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <owl:disjointWith
      rdf:resource="&apiforkb-try;PublicTry"/>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-try;ActionTry">
    <rdfs:label>action try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">try of an Action.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;InternalTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;UnaryTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;InternalTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-try;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;Action"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
  </owl:Class>


  <owl:Class rdf:about="&apiforkb-try;PublicTry">
    <rdfs:label>public operation try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">try of a public operation.</skos:definition>
    <skos:example rdf:datatype="&xsd;string">Example: add Asset to an immutable KB to generate a new immutable KB. </skos:example>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;Try"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;Try"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-try;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;PublicOperation"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-try;LoweringTry">
    <rdfs:label>lowering try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">try of a lowering action.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;ActionTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;SideEffectFreeTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;ActionTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;LoweringAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointUnionOf rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-try;OutStreamingTry"/>
      <rdf:Description rdf:about="&apiforkb-try;MarshallingTry"/>
      <rdf:Description rdf:about="&apiforkb-try;ManifestingTry"/>
      <rdf:Description rdf:about="&apiforkb-try;ExpressingTry"/>
    </owl:disjointUnionOf>
  </owl:Class>
    
  <owl:Class rdf:about="&apiforkb-try;ExpressingTry">
    <rdfs:label>expressing try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">lowering try transforming a knowledge asset into
      a generalized expression.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;LoweringTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;LoweringTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;ExpressingAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeAsset"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-try;ManifestingTry">
    <rdfs:label>manifesting try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">lowering try transforming a generalized
      expression into a knowledge manifestation.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;LoweringTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;LoweringTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;ManifestingAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
      </owl:Restriction>
    </rdfs:subClassOf>    
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-try;MarshallingTry">
    <rdfs:label>marshalling try</rdfs:label>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;LoweringTry"/>
    <skos:definition rdf:datatype="&xsd;string">lowering try transforming a knowledge
      manifestation into a knowledge encoding.</skos:definition>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;LoweringTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;MarshallingAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-try;OutStreamingTry">
    <rdfs:label>outstreaming try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">lowering try transforming a knowledge encoding into a
      knowledge item.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;LoweringTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;LoweringTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;OutStreamingAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeItem"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  
  <owl:Class rdf:about="&apiforkb-try;LiftingTry">
    <rdfs:label>lifting try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">try of a lifting action.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;ActionTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;SideEffectFreeTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;ActionTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;LiftingAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointUnionOf rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-try;InStreamingTry"/>
      <rdf:Description rdf:about="&apiforkb-try;UnmarshallingTry"/>
      <rdf:Description rdf:about="&apiforkb-try;ParsingTry"/>
      <rdf:Description rdf:about="&apiforkb-try;ConceptualizingTry"/>
    </owl:disjointUnionOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-try;InStreamingTry">
    <rdfs:label>instreaming try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">lifting try transforming a knowledge item into a
      knowledge encoding.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;LiftingTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;LiftingTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;InStreamingAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeItem"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  
  

  <owl:Class rdf:about="&apiforkb-try;UnmarshallingTry">
    <rdfs:label>unmarshalling try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">lifting try that transforms knowledge encodings into knowledge manifestations.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;LiftingTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;LiftingTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;UnmarshallingAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;KnowledgeEncoding"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
      
  <owl:Class rdf:about="&apiforkb-try;ParsingTry">
    <rdfs:label>parsing try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">action try of transforming a knowledge
      manifestation into a generalized expression.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;LiftingTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;LiftingTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;ParsingAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeManifestation"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  

  <owl:Class rdf:about="&apiforkb-try;ConceptualizingTry">
    <rdfs:label>conceptualizinging try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">try of a conceptualizing operation.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;LiftingTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;LiftingTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;ConceptualizingAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom
          rdf:resource="&apiforkb-trm;KnowledgeAsset"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>


  <owl:Class rdf:about="&apiforkb-try;HorizontalTry">
    <rdfs:label xml:lang="en">horizontal try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">side-effect-free unary try whose input and output are knowledge resources at the same level of abstraction that are related by a mapping (sensu DOL)</skos:definition>
    <owl:equivalentClass>
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="&apiforkb-try;ActionTry"/>
          <owl:Restriction>
            <owl:onProperty rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom rdf:resource="&apiforkb-op;HorizontalAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;SideEffectFreeTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;ActionTry"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;matchesMapping"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;Mapping"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointUnionOf rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-try;HorizontalAssetTry"/>
      <rdf:Description rdf:about="&apiforkb-try;HorizontalExpressionTry"/>
      <rdf:Description rdf:about="&apiforkb-try;HorizontalManifestationTry"/>
      <rdf:Description rdf:about="&apiforkb-try;HorizontalEncodingTry"/>
      <rdf:Description rdf:about="&apiforkb-try;HorizontalItemTry"/>
    </owl:disjointUnionOf>        
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-try;HorizontalSuccess">
    <rdfs:label xml:lang="en">horizontal success</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">success of horizontal try</skos:definition>
    <owl:equivalentClass>
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="&apiforkb-try;Success"/>
          <rdf:Description rdf:about="&apiforkb-try;HorizontalTry"/>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointUnionOf rdf:parseType="Collection">
      <rdf:Description rdf:about="&apiforkb-try;HorizontalAssetSuccess"/>
      <rdf:Description rdf:about="&apiforkb-try;HorizontalExpressionSuccess"/>
      <rdf:Description rdf:about="&apiforkb-try;HorizontalManifestationSuccess"/>
      <rdf:Description rdf:about="&apiforkb-try;HorizontalEncodingSuccess"/>
      <rdf:Description rdf:about="&apiforkb-try;HorizontalItemSuccess"/>
    </owl:disjointUnionOf>        
    
  </owl:Class>
  
  <!-- need Horizontal Try and Success subClasses -->
  <!--
  <owl:Class
    rdf:about="&apiforkb-ev;AddingEvent-KnowledgeResourceToImmutableKB">
    <rdfs:label>adding event of a knowledge resource to an immutable knowledge base</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">public operation event adding a knowlede
      resource to an immutable knowledge base</skos:definition>
    <skos:note rdf:datatype="&xsd;string">Members of this class are events of some operation of type
      &apos;AddingOperation-KnowledgeResourceToImmutableKB"&apos;</skos:note>
    <rdfs:subClassOf
      rdf:resource="&apiforkb-ev;PublicEvent"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;actualizes"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-pro;AddingProficiency-KnowledgeResourceToImmutableKB"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-ev;PublicEvent"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isEventOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;AddingOperation-KnowledgeResourceToImmutableKB"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-ev;adds"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;addsTo"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-ev;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  -->
    
  <owl:Class
    rdf:about="&apiforkb-try;InternalAddingTry-KnowledgeResourceToImmutableKB">
    <rdfs:label>internal adding try of a knowledge resource to an immutable knowledge base</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">internal operation try adding a knowlede
      resource to an immutable knowledge base</skos:definition>
    <skos:note rdf:datatype="&xsd;string">Members of this class are trys of some operation of type
      &apos;InternalAddingOperation-KnowledgeResourceToImmutableKB&apos;</skos:note>
    <rdfs:subClassOf
      rdf:resource="&apiforkb-try;InternalTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;InternalTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;InternalAddingOperation-KnowledgeResourceToImmutableKB"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;adds"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;addsTo"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class
    rdf:about="&apiforkb-try;AddingTry-QueryItemToImmutableKB">
    <rdfs:label>adding try of a query item to an immutable knowledge base</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">operation try adding a Knowledge Resource that is a query item to a
      immutable KB</skos:definition>
    <rdfs:subClassOf
      rdf:resource="&apiforkb-try;InternalAddingTry-KnowledgeResourceToImmutableKB"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;InternalAddingTry-KnowledgeResourceToImmutableKB"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;InternalAddingOperation-QueryItemToImmutableKB"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;QueryItem"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-try;ActionTry-AdditionTo">
    <rdfs:label xml:lang="en">action try - addition to</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">horizontal try whose output is an extension of the input</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-trm;API4KBTry//HorizontalTry"/>
    <owl:equivalentClass>
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description rdf:about="&apiforkb-try;HorizontalTry"/>
          <owl:Restriction>
            <owl:onProperty rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom rdf:resource="&apiforkb-op;Action-AdditionTo"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;matchesMapping"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;ExtensionMapping"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-try;ActionTry-AdditionToKnowledgeExpression">
    <rdfs:label>action try - addition to knowledge expression</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">'addition to' action try that maps knowledge expressions into knowledge expressions.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;ActionTry-AdditionTo"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;HorizontalExpressionTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;ActionTry-AdditionTo"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;Action-AdditionToKnowledgeExpression"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;matchesMapping"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;ExtensionExpressionMapping"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-try;ActionTry-ResourceIn">
    <rdfs:label>action try - resource in</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">action try whose input is a knowledge resources</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;ActionTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;ActionTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;Action-ResourceIn"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-try;ActionTry-ExpressionIn">
    <rdfs:label>action try - resource in</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">action try whose input is a knowledge expression</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;ActionTry-ResourceIn"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;ActionTry-ResourceIn"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;Action-ExpressionIn"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasInput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-try;CurriedActionTry">
    <rdfs:label xml:lang="en">curried action try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">side-effect free action try that maps to an action</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;ActionTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;SideEffectFreeTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;ActionTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;CurriedAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-op;Action"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-try;CurriedActionTry-HorizontalExpressionActionOut">
    <rdfs:label xml:lang="en">curried action try - horizontal expression action out</rdfs:label>
    <skos:definition>curried action try whose output is a horizontal expression action</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;CurriedActionTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;CurriedActionTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;CurriedAction-HorizontalExpressionActionOut"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-op;HorizontalExpressionAction"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <owl:Class rdf:about="&apiforkb-try;ActionTry-AdditionOf">
    <rdfs:label>action try - addition of</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">curried action try that maps knowledge expressions into 'addition to' actions.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;ActionTry-ExpressionIn"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;CurriedActionTry-HorizontalExpressionActionOut"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;CurriedActionTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;Action-AdditionOf"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-try;ActionTry-AdditionTo"/>
      </owl:Restriction>
    </rdfs:subClassOf>        
  </owl:Class>
    
  <owl:Class rdf:about="&apiforkb-try;VoidActionTry">
    <rdfs:label xml:lang="en">void action try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">side-effectful action try whose output is void</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;ActionTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;SideEffectfulTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;ActionTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;VoidAction"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-op;Void"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <owl:Class rdf:about="&apiforkb-try;InternalAddingTry-KnowledgeResourceToImmutableKB">
    <rdfs:label>internal try adding knowledge resources to immutable KBs</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">internal try adding a knowlede
      resource to an immutable knowledge base producing an immutable knowledge base</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;InternalTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;AddingTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;InternalTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;InternalAddingOperation-KnowledgeResourceToImmutableKB"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;adds"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;addsTo"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>    
  </owl:Class>  
  
 
  <owl:Class
    rdf:about="&apiforkb-try;InternalAddingTry-FocusedItemToImmutableKB">
    <rdfs:label>adding try of a focused item to an immutable knowledge base</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">internal try adding a Knowledge Resource that is a focused expression to an immutable KB</skos:definition>
    <rdfs:subClassOf
      rdf:resource="&apiforkb-try;InternalAddingTry-KnowledgeResourceToImmutableKB"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description            rdf:about="&apiforkb-try;InternalAddingTry-KnowledgeResourceToImmutableKB"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;InternalAddingOperation-FocusedItemToImmutableKB"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;adds"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;FocusedItem"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class> 
  
  <owl:Class rdf:about="&apiforkb-try;InternalAddingTry-KnowledgeSourceToMutableKB">
    <rdfs:label>internal try adding knowledge resources to mutable KBs</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">internal try adding knowlede
      resources to mutable KBs</skos:definition>
    <dct:abstract/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;InternalTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;AddingTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;SideEffectfulTry"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;adds"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-trm;addsTo"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;MutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  <!-- Public Trys -->

  <owl:Class rdf:about="&apiforkb-try;PublicAddingTry-KnowledgeResourceToImmutableKB">
    <rdfs:label>public try adding knowledge resources to immutable KBs</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">public try adding a knowlede
      resource to an immutable knowledge base producing an immutable knowledge base</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;PublicTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;AddingTry"/>
    <owl:equivalentClass> 
      <owl:Class>
        <owl:intersectionOf rdf:parseType="Collection">
          <rdf:Description
            rdf:about="&apiforkb-try;PublicTry"/>
          <owl:Restriction>
            <owl:onProperty
              rdf:resource="&apiforkb-trm;isTryOf"/>
            <owl:someValuesFrom
              rdf:resource="&apiforkb-op;PublicAddingOperation-KnowledgeResourceToImmutableKB"/>
          </owl:Restriction>
        </owl:intersectionOf>
      </owl:Class>
    </owl:equivalentClass>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;adds"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;KnowledgeResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;addsTo"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>    
  </owl:Class>  
  

  <owl:Class rdf:about="&apiforkb-try;PublicAddingTry-KnowledgeSourceToMutableKB">
    <rdfs:label>public try adding knowledge sources to mutable KBs</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">public try adding knowledge
      sources to mutable KBs</skos:definition>
    <dct:abstract/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;PublicTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;AddingTry"/>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;SideEffectfulTry"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;adds"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;KnowledgeSource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;addsTo"/>
        <owl:allValuesFrom rdf:resource="&apiforkb-trm;MutableKnowledgeBase"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  

  <owl:Class rdf:about="&apiforkb-try;AddingTry">
    <rdfs:label>adding operation</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">public or internal adding try</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;Try"/>
  </owl:Class>  
  
    
  <owl:Class rdf:about="&apiforkb-try;PublicQueryingResourceTry">
    <rdfs:label>public querying resource try</rdfs:label>
    <skos:definition rdf:datatype="&xsd;string">public try that applies a query resource to a focused resource producing a (resource) collection of answer
      substitutions.</skos:definition>
    <rdfs:subClassOf rdf:resource="&apiforkb-try;QueryingTry"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;appliesQuery"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;QueryResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;appliesQueryTo"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;FocusedResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&apiforkb-try;hasOutput"/>
        <owl:someValuesFrom rdf:resource="&apiforkb-trm;AnswerSubstitutionCollectionResource"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  
  
  
</rdf:RDF>
