<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY dct "http://purl.org/dc/terms/" >
    <!ENTITY skos "http://www.w3.org/2004/02/skos/core#" >
    <!ENTITY sm "http://www.omg.org/techprocess/ab/SpecificationMetadata/" >
    <!ENTITY ontoiop-trm "http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/" >
    <!ENTITY apiforkb-trm "http://www.omg.org/spec/API4KB/API4KBTerminology/" >
    <!ENTITY apiforkb-op "http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBOperation/" >
    <!ENTITY apiforkb-ev "http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/" >
    <!ENTITY apiforkb-pro "http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/" >
    <!ENTITY apiforkb-st "http://www.omg.org/spec/API4KB/SmallTest/" >
]>


<rdf:RDF xml:base="&apiforkb-st;"
  xmlns:rdf="&rdf;"
  xmlns:rdfs="&rdfs;"
  xmlns:owl="&owl;"
  xmlns:xsd="&xsd;"
  xmlns:dct="&dct;"
  xmlns:skos="&skos;"
  xmlns:sm="&sm;"
  xmlns:ontoiop-trm="&ontoiop-trm;"
  xmlns:apiforkb-trm="&apiforkb-trm;"
  xmlns:apiforkb-op="&apiforkb-op;"
  xmlns:apiforkb-ev="&apiforkb-ev;"
  xmlns:apiforkb-pro="&apiforkb-pro;"
  xmlns:apiforkb-st="&apiforkb-st;">
    <owl:Ontology rdf:about="&apiforkb-st;">
        <rdfs:label>API4KB Terminology Ontology</rdfs:label>
        <owl:imports rdf:resource="&apiforkb-trm;"/>
        <owl:imports rdf:resource="&sm;"/>
    </owl:Ontology>
    

    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    
  <!--Proficiency-->
  
  <!-- Properties
      isActualizedBy [Event]
      isProficiencyOf [KPManager]
      isRequiredBy [Role]
  -->
  
  <owl:NamedIndividual rdf:about="&apiforkb-st;AddingProficiency-KnowledgeResourceToImmutableKByKPManagerW">
        <rdf:type rdf:resource="&apiforkb-pro;AddingProficiency-KnowledgeResourceToImmutableKB"/>
    <rdfs:label>proficiency adding knowledge resources to immutable knowledge bases by knowledge platform manager W</rdfs:label>
    </owl:NamedIndividual>
    


  <!--Client -->

  <!-- Properties
       interactsWith [Proxy]
       (requests)
  -->
  
  <owl:NamedIndividual rdf:about="&apiforkb-st;ClientZ">
    <rdfs:label>client Z</rdfs:label>
    <rdf:type rdf:resource="&apiforkb-trm;Client"/>
    </owl:NamedIndividual>
    


    <!--Expression-->

  <!-- Properties
       accordingTo [Environment]
       expresses [Asset]
       isManifestedBy [Manifestation]
       usesLanguage [Language]
       isRegisteredWith [KP]
       isInputOf [Event]
       isOutputOf [Event]
       isSnapshotOf [MutableSource]
       (hasModel, inverse of isModelOfOMS) 
       ontoiop-trm:hasSetOfExpressions
  -->
  
    <owl:NamedIndividual rdf:about="&apiforkb-st;FOMS2">
      <rdfs:label>basic OMS 2</rdfs:label>
      <rdf:type rdf:resource="&ontoiop-trm;BasicOMS"/>
      <apiforkb-trm:accordingTo rdf:resource="&apiforkb-st;LE2"/>
        <ontoiop-trm:hasSetOfExpressions rdf:resource="&apiforkb-st;SetOfExpressions2"/>
    </owl:NamedIndividual>
    


    <!-- Encoding -->

  <!-- Properties
       accordingTo [Environment]
       encodes [Manifestation]
       characterizes [Item]
       (usesCodingSystem [CodingSystem])
       isRegisteredWith [KP]
       isInputOf [Event]
       isOutputOf [Event]
       isSnapshotOf [MutableSource]
  -->
  
    <owl:NamedIndividual rdf:about="&apiforkb-st;FOMSEncoding2">
      <rdfs:label>focused encoding 2</rdfs:label>
      <rdf:type rdf:resource="&apiforkb-trm;FocusedEncoding"/>
      <apiforkb-trm:encodes rdf:resource="&apiforkb-st;FOMSManifestation2"/>
    </owl:NamedIndividual>
    


    <!-- Manifestation -->

  <!-- Properties
       accordingTo [Environment]
       manifests [Expression]
       decodes [Encoding]
       (usesSerialization [Serialization])
       isRegisteredWith [KP]
       isInputOf [Event]
       isOutputOf [Event]
       isSnapshotOf [MutableSource]
  -->
  
    <owl:NamedIndividual rdf:about="&apiforkb-st;FOMSManifestation2">
      <rdfs:label>focused manifestation 2</rdfs:label>
      <rdf:type rdf:resource="&apiforkb-trm;FocusedManifestation"/>
      <apiforkb-trm:manifestationOf rdf:resource="&apiforkb-st;FOMS2"/>
    </owl:NamedIndividual>
    


    <!-- Item -->

  <!-- Properties
       accordingTo [Environment]
       reproduces [Encoding]
       isRegisteredWith [KP]
       isInputOf [Event]
       isOutputOf [Event]
       isSnapshotOf [MutableSource]
  -->
  
    <owl:NamedIndividual rdf:about="&apiforkb-st;FocusedItem2">
      <rdfs:label>focused item 2</rdfs:label>
      <rdf:type rdf:resource="&apiforkb-trm;FocusedItem"/>
      <apiforkb-trm:localCopyOf rdf:resource="&apiforkb-st;FOMSEncoding2"/>
    </owl:NamedIndividual>
    


    <!-- Expression -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;KE-B">
      <rdfs:label>knowledge expression B</rdfs:label>
      <rdf:type rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
        <ontoiop-trm:hasSetOfExpressions rdf:resource="&apiforkb-st;SetOfExpressions1"/>
    </owl:NamedIndividual>
    


    <!-- Expression -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;KE-D">
      <rdfs:label>knowledge expression D</rdfs:label>
      <rdf:type rdf:resource="&apiforkb-trm;GeneralizedExpression"/>
        <ontoiop-trm:hasSetOfExpressions rdf:resource="&apiforkb-st;SetOfExpressions3"/>
    </owl:NamedIndividual>
    


    <!-- Asset -->

  <!-- Properties
       accordingTo [Environment]
       conceptualizes [Expression]
       isRegisteredWith [KP]
       isInputOf [Event]
       isOutputOf [Event]
       isSnapshotOf [MutableSource]
  -->
  
    <owl:NamedIndividual rdf:about="&apiforkb-st;ImmutableKBB">
        <rdf:type rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
        <rdfs:label>immutable knowledge base B</rdfs:label>
      <apiforkb-trm:conceptualizes rdf:resource="&apiforkb-st;KE-B"/>
      <apiforkb-trm:isRegisteredWith rdf:resource="&apiforkb-st;KPV"/>
      <apiforkb-trm:accordingTo rdf:resource="&apiforkb-st;LEB"/>
    </owl:NamedIndividual>
    


    <!-- KB -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;ImmutableKBD">
        <rdf:type rdf:resource="&apiforkb-trm;ImmutableKnowledgeBase"/>
        <rdfs:label>immutable knowledge base D</rdfs:label>
      <apiforkb-trm:expressedAs rdf:resource="&apiforkb-st;KE-D"/>
      <apiforkb-trm:accordingTo rdf:resource="&apiforkb-st;LED"/>
    </owl:NamedIndividual>
    


    <!-- Event -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;KPMWconceptualizingKED">
        <rdf:type rdf:resource="&apiforkb-ev;ConceptualizingEvent"/>
        <rdfs:label>action event: knowledge platform manager W conceptualizing generalized expression D</rdfs:label>
      <apiforkb-trm:hasInput rdf:resource="&apiforkb-st;KE-D"/>
      <apiforkb-trm:hasOutput-Conceptualize rdf:resource="&apiforkb-st;ImmutableKBD"/>
    </owl:NamedIndividual>
    


    <!-- KPManager -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;KPManagerW">
        <rdf:type rdf:resource="&apiforkb-trm;KnowledgePlatformManager"/>
        <rdfs:label>knowledge platform manager W</rdfs:label>
      <apiforkb-trm:hasProficiency rdf:resource="&apiforkb-st;AdditionOfKnowledgeResourceToImmutableKBbyKPManagerW"/>
      <apiforkb-trm:executes rdf:resource="&apiforkb-st;KPMWconceptualizingKED"/>
      <apiforkb-trm:fillsRole rdf:resource="&apiforkb-st;KPManagerWasImmutableKBFactoryRole"/>
      <apiforkb-trm:manages rdf:resource="&apiforkb-st;KPV"/>
    </owl:NamedIndividual>
    


    <!-- Role -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;KPManagerWasImmutableKBFactoryRole">
        <rdf:type rdf:resource="&apiforkb-trm;ImmutableKBFactoryRole"/>
        <rdfs:label>role or knowledge platform manager W as an immutable knowledge base factory</rdfs:label>
      <apiforkb-trm:requires rdf:resource="&apiforkb-st;AdditionOfKnowledgeResourceToImmutableKBbyKPManagerW"/>
    </owl:NamedIndividual>
    


    <!-- KP -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;KPV">
        <rdf:type rdf:resource="&apiforkb-trm;KnowledgePlatform"/>
        <rdfs:label>knowledge platform V</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- Environment -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;LE2">
      <rdfs:label>environment 2</rdfs:label>
      <rdf:type rdf:resource="&apiforkb-trm;BasicEnvironment"/>
    </owl:NamedIndividual>
    


    <!-- Environment -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;LEB">
      <rdfs:label>environment B</rdfs:label>
      <rdf:type rdf:resource="&apiforkb-trm;ImmutableFocusedEnvironment"/>
    </owl:NamedIndividual>
    


    <!-- Environment -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;LED">
      <rdfs:label>environment D</rdfs:label>
      <rdf:type rdf:resource="&apiforkb-trm;ImmutableFocusedEnvironment"/>
    </owl:NamedIndividual>
    

    <!-- Proxy -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;ProxyQ">
      <rdfs:label>proxy Q</rdfs:label>
      <rdf:type rdf:resource="&apiforkb-trm;Proxy"/>
      <apiforkb-trm:implements rdf:resource="&apiforkb-trm;IAddKnowledgeResourceToImmutableKB"/>
      <apiforkb-trm:interactsWith rdf:resource="&apiforkb-st;ClientZ"/>
        <executes rdf:resource="&apiforkb-st;proxyQaddingFocusedItem2ToImmutableKBB"/>
    </owl:NamedIndividual>
    


    <!-- SetOfExpressions -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;SetOfExpressions1">
        <rdf:type rdf:resource="&ontoiop-trm;SetOfExpressions"/>
    </owl:NamedIndividual>
    


    <!-- SetOfExpressions -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;SetOfExpressions2">
        <rdf:type rdf:resource="&ontoiop-trm;SetOfExpressions"/>
    </owl:NamedIndividual>
    


    <!-- SetOfExpressions -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;SetOfExpressions3">
        <rdf:type rdf:resource="&ontoiop-trm;SetOfExpressions"/>
        <ontoiop-trm:hasSubset rdf:resource="&apiforkb-st;SetOfExpressions1"/>
        <ontoiop-trm:hasSubset rdf:resource="&apiforkb-st;SetOfExpressions2"/>
    </owl:NamedIndividual>
    


    <!-- Event -->

    <owl:NamedIndividual rdf:about="&apiforkb-st;proxyQaddingFocusedItem2ToImmutableKBB">
      <rdf:type rdf:resource="&apiforkb-ev;AddingEvent-FocusedItemToImmutableKB"/>
        <rdfs:label>operation event by proxy Q adding focused item 2 to knowledge base B producing knowledge base D</rdfs:label>
      <apiforkb-trm:actualizes rdf:resource="&apiforkb-st;AdditionOfKnowledgeResourceToImmutableKBbyKPManagerW"/>
      <apiforkb-trm:adds rdf:resource="&apiforkb-st;FocusedItem2"/>
      <apiforkb-trm:addsImmutable rdf:resource="&apiforkb-st;ImmutableKBB"/>
      <apiforkb-trm:hasOutput rdf:resource="&apiforkb-st;ImmutableKBD"/>
    </owl:NamedIndividual>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->

