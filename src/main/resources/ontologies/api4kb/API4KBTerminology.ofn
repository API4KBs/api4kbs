Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.omg.org/spec/API4KB/API4KBTerminology/>
<http://www.omg.org/spec/API4KB/20150201/API4KBTerminology/>
Import(<http://www.omg.org/techprocess/ab/SpecificationMetadata/>)
Import(<http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBTry/>)
Import(<http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBOperation/>)
Import(<http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/>)
Import(<http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/>)
Import(<http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/>)
Annotation(rdfs:label "API4KB Terminology Ontology")
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/fileAbbreviation> "api4kb-trm"^^xsd:string)
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/contentLanguage> "http://www.w3.org/standards/techs/owl#w3c_all"^^xsd:anyURI)
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/filename> "API4KBTerminology.rdf"^^xsd:string)
Annotation(<http://purl.org/dc/terms/license> "http://www.omg.org/techprocess/ab/SpecificationMetadata/MITLicense"^^xsd:anyURI)
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/contentLanguage> "http://www.omg.org/spec/ODM/"^^xsd:anyURI)
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/copyright> "Copyright (c) 2014 Athan Services
Copyright (c) 2014 Thematix Partners LLC
Copyright (c) 2014 Object Management Group, Inc."^^xsd:string)
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/fileAbstract> "This ontology covers terminology used for describing the main concepts used by the API4KB specification."^^xsd:string)

Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/API4KB>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KB> "API4KB")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/API4KB> <http://www.omg.org/spec/API4KB/API4KBTerminology/Specification>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Application>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Application> "application")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/Application> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesSpecification> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KB>))
DisjointUnion(<http://www.omg.org/spec/API4KB/API4KBTerminology/Application> <http://www.omg.org/spec/API4KB/API4KBTerminology/Client> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager> <http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/AssetEnvironment>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/AssetEnvironment> "focused, categorical, preserving language environment where the focus is a KRR language")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/AssetEnvironment> "The special case where all languages in an asset environment are KRR languages supporting model-theoretic semantics without side-effects (logics), and the preserving property is characterized by a logical graph reduces to a heterogeneous logical environment as defined in DOL.")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/AssetEnvironment> "asset environment")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/AssetEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/CategoricalEnvironment>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/AssetEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/FocusedEnvironment>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/AssetEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/LanguageEnvironment>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/AssetEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/PreservingEnvironment>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicEnvironment>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicEnvironment> "a focused environment having exactly one member")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicEnvironment> "basic environment")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/FocusedEnvironment>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicEnvironment> ObjectExactCardinality(1 <http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMapping>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeAsset>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeAsset> "equivalence class of basic expressions determined by the equivalence relation of an asset environment")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeAsset> "KA1: an OWL2 DL series for a biomedical ontology, viewed as an equivalence class of basic knowledge expressions, including example KE1, according to a semantics-preserving environment for the OWL2 DL language where the mapping to the focus language strips the natural language definitions from the axioms")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeAsset> "basic knowledge asset")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeAsset> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeResource>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeAsset> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeAsset>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeEncoding>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeEncoding> "basic knowledge encoding")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeEncoding> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeResource>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeEncoding> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeEncoding>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeExpression>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeExpression> "The use of \"basic\" in API4KP differs from its usage in DOL - a DOL basic OMS  (ontologies, models and specifications) is a set, and corresponds to a Set-structured knowledge asset in API4KP.")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeExpression> "well-formed, stand-alone formula in the abstract syntax of a machine-readable language")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeExpression> "KE1: the instance of the OWL 2 DL abstract syntax for the latest version of a biomedical ontology from an ontology series KA1 defining observable entities, such as the 2015 international version of the SNOMED-CT knowledge base\\footnote{http://browser.ihtsdotools.org/} (see also the definition of Basic Knowledge Asset). 
This ontology differs from other versions of the series only in the natural language definitions.")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeExpression> "basic knowledge expression")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeExpression> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeResource>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeExpression> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeExpression>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeItem>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeItem> "KI1: a file on a network server embodying example KM1")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeItem> "basic knowledge item")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeItem> "single exemplar of a basic knowledge manifestation in a particular location")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeItem> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeResource>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeItem> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeItem>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeManifestation>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeManifestation> "basic knowledge manifestation")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeManifestation> "character-based embodiment of a basic knowledge expression in a concrete dialect.")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeManifestation> "KM1: the OWL/RDF XML Document Object Model (DOM) document instance of example KE1")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeManifestation> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeResource>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeManifestation> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeManifestation>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeResource>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeResource> "basic knowledge resource")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>)
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeResource>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/CategoricalEnvironment>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/CategoricalEnvironment> "environment with an associative composition operation for mappings, that is closed under composition and contains an identity mapping for every member")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/CategoricalEnvironment> "a composable environment with identies whose composition operation is associative")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/CategoricalEnvironment> "categorical environment")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/CategoricalEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/EnvironmentWithIdentities>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Client>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Client> "client")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/Client> "application that needs to use API4KB; the client interacts with the proxy"^^xsd:string)
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/Client> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/Application> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/interactsWith> <http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy>) ObjectMaxCardinality(0 <http://www.omg.org/spec/API4KB/API4KBTerminology/implements> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBOperation/KnowledgeOperation>) ObjectMaxCardinality(0 <http://www.omg.org/spec/API4KB/API4KBTerminology/interactsWith> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager>)))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/Client> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager>)
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/Client> <http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Component>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Component> "component")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/Component> "software unit deployed within a knowledge platform"^^xsd:string)
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/Component> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/isDeployedWithin> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatform>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ComposableEnvironment>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#editorialNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/ComposableEnvironment> "The composition M2 o M1 of two mappings M1 and M2 is well-defined when M1 maps to the same thing that M2 maps from. (The codomain of M1 is the domain of M2).")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ComposableEnvironment> "composable environment")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/ComposableEnvironment> "an environment having a composition operation where the composition of its mappings is a mapping of the environment whenever the composition is well-defined")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ComposableEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/Environment>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Description>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Description> "description")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/Description> "generalised expression that describes a knowledge resource."^^xsd:string)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/Description> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/EmptyEnvironment>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/EmptyEnvironment> "empty environment")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/EmptyEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/Environment>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/EmptyEnvironment> ObjectExactCardinality(0 <http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMapping>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/EmptyEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/NonemptyEnvironment>)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/Environment> "a KRR language environment containing semantics-preserving translations from RDF and OWL into CL, assisting in the integrated interpretation of a stream of RDF graphs and OWL ontologies")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/Environment> "mathematical structure of mappings and members, where the domain and codomains of the mappings are members of the environment")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Environment> "environment")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/Environment> <http://www.omg.org/spec/API4KB/API4KBTerminology/Immutable>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/EnvironmentWithIdentities>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#editorialNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/EnvironmentWithIdentities> "an identity mapping is a mapping whose domain and codomain are the same, and when composed with another mapping is equal to the original mapping")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/EnvironmentWithIdentities> "a composable environment having an identity mapping for each member")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/EnvironmentWithIdentities> "environment with identity")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/EnvironmentWithIdentities> <http://www.omg.org/spec/API4KB/API4KBTerminology/ComposableEnvironment>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/EquivalenceRelation>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/EquivalenceRelation> "equivalence relation")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/EquivalenceRelation> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBOperation/KnowledgeOperation>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/FocusedEnvironment>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/FocusedEnvironment> "a nonempty environment which has a member F (called the focus or focus member) such that for every other member A, there is a mapping in the environment from A to F"^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/FocusedEnvironment> "focused environment")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/FocusedEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/NonemptyEnvironment>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Immutable>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Immutable> "immutable")
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/Immutable> <http://www.omg.org/spec/API4KB/API4KBTerminology/Mutable>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableKBFactoryRole>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableKBFactoryRole> "role immutable knowledge base factory")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableKBFactoryRole> <http://www.omg.org/spec/API4KB/API4KBTerminology/Role>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableKBFactoryRole> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/requires> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/AddingProficiency-KnowledgeResourceToImmutableKB>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableKnowledgeBase> "immutable knowledgebase")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableKnowledgeBase> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeAsset>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableKnowledgeBase> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableKnowledgeBase> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeBase>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableSource>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableSource> "All OntoIOp concepts are immutable."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableSource> "immutable source")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableSource> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/Source> <http://www.omg.org/spec/API4KB/API4KBTerminology/Immutable>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableView>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableView> "immuable view")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableView> <http://www.omg.org/spec/API4KB/API4KBTerminology/Immutable>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset> "equivalence class (according to an environment) of generalized expressions.

Note:  intuitively, a knowledge asset is information that may be (equivalently) expressed in one or more KR languages."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset> "knowledge asset")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset> "Example: assertion that Socrates is a philospher.
Example: assertion that the author of Moby Dick is Herman Melville.
Example: query for the names of philosphers.
Example: a sequence of strings that are asserted to be names of philosphers in some KB."^^xsd:string)
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset> ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/conceptualizes> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>) <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset> ObjectExactCardinality(1 <http://www.omg.org/spec/API4KB/API4KBTerminology/accordingTo> <http://www.omg.org/spec/API4KB/API4KBTerminology/AssetEnvironment>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeBase>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeBase> "knowledge base")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeBase> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSource>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding> "Example A: the encoding in UTF-8 of the serialization in Manchester syntax of an OWL ontology. 
Example B: the zip archive of
   -  the encoding in UTF-8 of the serialization in Manchester syntax of an OWL ontology.
   - the encoding in UTF-16 of the serialization in XCL of a Common Logic text.
   - the encoding in UTF-8 of the serialization in standard syntax of a DOL text providing the details of how the above two files should be jointly interpreted. "^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding> "byte (or bit) sequence that is the encoding of a knowledge manifestation in some format (e.g. character encoding system(s) together with an archive format)."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding> "knowledge encoding")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/encodes> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression> "Set of Expressions in one or more languages, in the context of a Logical Environment determining how these Expressions are jointly interpreted."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression> "knowledge expression")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression> "Expression examples;
Example A: OWL Ground fact expressing that Socrates is a philosopher.
Example B: Common Logic sentence expressing that Socrates is a philosopher.
Example C: RDF graph expressing that the author of Moby Dick is Herman Melville.
Example D: SPARQL query for the names of philosphers.

generalised expression examples;
Example E: A and B, together with a mapping that allows OWL to be converted to Common Logic."^^xsd:string)
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesLanguage> <http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/Language>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression> ObjectSomeValuesFrom(<http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/hasPart> <http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/SetOfExpressions>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression> ObjectAllValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasPart> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem> "physical instance of a knowledge encoding, e.g. snapshot of a file on a hard drive, a Java String in memory."^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem> "Example: my copy in my Download folder of the encoding in UTF-8 of the serialization in Manchester syntax of an OWL ontology. "^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem> "knowledge item")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation> "Example: character sequence in Manchester OWL syntax that is the serialization of an OWL Ground fact expressing that Socrates is a philosopher.
Example: character sequence in OWL RDF/XML syntax that is the serialization of an OWL Ground fact expressing that Socrates is a philosopher.
Example: character sequence in CLIF syntax that is the serialization of a Common Logic sentence expressing that Socrates is a philosopher.
Example: character sequence in RDF/XML that is the serialization of an RDF graph expressing that the author of Moby Dick is Herman Melville.
Example: character sequence in Turtle that is the serialization of an RDF graph expressing that the author of Moby Dick is Herman Melville.
Example: SPARQL query String for the names of philosphers."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation> "knowledge manifestation")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation> "character sequence, or collection of character sequences, each being the serialization of a generalised expression in a knowledge serialization."^^xsd:string)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/manifests> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesSerialization> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSerialization>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatform>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatform> "Original Definition: software architecture that supports the Components and their interactions.

Note: The proxy will not have access to the KP except through the KP Manager."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatform> "knowledge platform")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatform> ObjectIntersectionOf(ObjectAllValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/isManagedBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager>) ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/supports> <http://www.omg.org/spec/API4KB/API4KBTerminology/Component>)))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager> "Optionally, a KP Manager can orchestrate the Components in the KP.
Alternatively, the Components may coordinate among each other"^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager> "knowledge platform manager")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager> "application that interacts with the proxy and implements the API4KB internal interfaces"^^xsd:string)
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager> <http://www.omg.org/spec/API4KB/API4KBTerminology/Client>)
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager> <http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeRepresentationAndReasoningLanguage>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeRepresentationAndReasoningLanguage> "OMS language, query language, or result language"^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeRepresentationAndReasoningLanguage> "knowledge representation and reasoning language")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeRepresentationAndReasoningLanguage> <http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/Language>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource> "immutable knowledge source, which may be identified to be at one of the following levels of abstraction; knowledge asset, generalised expression, knowledge manifestation, knowledge encoding, or knowledge item."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource> "knowledge resource")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableSource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSource>)
DisjointUnion(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSerialization>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSerialization> "knowledge serialization")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSerialization> "system of converting an expression into an character sequence."^^xsd:string)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSerialization> <http://www.omg.org/spec/API4KB/API4KBTerminology/Serialization>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSerialization> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSerializationOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeRepresentationAndReasoningLanguage>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSource>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSource> "a database with a mapping to an ontology")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSource> "source of machine-readable information with (possibly ambiguous) semantics")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSource> "knowledge source")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSource> "a stream of RDF graphs providing data from biomedical devices")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSource> "OntoIOp sensitive"^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSource> "a stateful representation of a patient's history with OWL snapshots")
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSourceDescription>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSourceDescription> "knowledge resource whose subject matter is another knowledge source")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSourceDescription> "knowledge source description")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSourceDescription> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/LanguageEnvironment>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/LanguageEnvironment> "language environment")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/LanguageEnvironment> "environment whose members are languages")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/LanguageEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/Environment>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/LanguageEnvironment> ObjectAllValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMember> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeRepresentationAndReasoningLanguage>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/LanguageMapping>))
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/LanguageMapping> <http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/LanguageMapping>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/LanguageMapping> <http://www.omg.org/spec/API4KB/API4KBTerminology/Mapping>)
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/Mapping> <http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/Mapping>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Mutable>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Mutable> "mutable")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/Mutable> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasSnapshot> <http://www.omg.org/spec/API4KB/API4KBTerminology/Immutable>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/Mutable> <http://www.omg.org/spec/API4KB/API4KBTerminology/Immutable>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/MutableKnowledgeBase>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/MutableKnowledgeBase> "mutable knowledge base")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/MutableKnowledgeBase> ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasSnapshot> <http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableKnowledgeBase>) <http://www.omg.org/spec/API4KB/API4KBTerminology/MutableSource>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/MutableKnowledgeBase> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSource>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/MutableSource>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/MutableSource> "mutable source")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/MutableSource> "API4KP does not commit to any particular topology of time. E.g. Linear, branching and braided time indices are possible.")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/MutableSource> "container that has, at any point in time, an explicit state that is fully represented by a knowledge resource. The language, structure and content of a mutable knowledge source may change over time, but the abstraction level is unchanging.")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/MutableSource> "the snapshot of a patient's current condition (with timestamp)")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/MutableSource> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/Mutable> <http://www.omg.org/spec/API4KB/API4KBTerminology/Source> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasSnapshot> <http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableSource>)))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/NonemptyEnvironment>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/NonemptyEnvironment> "nonempty environment")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/NonemptyEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/Environment>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/NonemptyEnvironment> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMapping> <http://www.omg.org/spec/API4KB/API4KBTerminology/Mapping>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/NonemptyEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/EmptyEnvironment>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/PreservingEnvironment>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/PreservingEnvironment> "preserving environment")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/PreservingEnvironment> "environment where every mapping preserves a specified property")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/PreservingEnvironment> <http://www.omg.org/spec/API4KB/API4KBTerminology/Environment>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/PreservingEnvironment> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/allPreserve> <http://www.omg.org/spec/API4KB/API4KBTerminology/EquivalenceRelation>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy> "The proxy may play a security role."^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#editorialNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy> "should this be a subclass of role?")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy> "proxy")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> <http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy> "This definition does not exclude other functionalities."^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy> "application that receives certain API4KP operations but does not execute these requests directly. The proxy will forward the request to another proxy or a KP, possibly mapping the request to other operations before forwarding. The proxy may also relay the response back to the requestor."^^xsd:string)
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy> <http://www.omg.org/spec/API4KB/API4KBTerminology/Client>)
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryAsset>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryAsset> "knowledge asset of queries."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryAsset> "query asset")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryAsset> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryAsset> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryAsset> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/conceptualizes> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryGeneralizedExpession>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryEncoding>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryEncoding> "query encoding")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryEncoding> "byte (or bit) sequence that is the encoding of a query manifestation in some character encoding system(s)."^^xsd:string)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryEncoding> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryEncoding> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryEncoding> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/encodes> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryManifestation>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryGeneralizedExpession>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryGeneralizedExpession> "query generalised expression")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryGeneralizedExpession> "generalized expression using query languages."^^xsd:string)
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryGeneralizedExpession> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>))
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryGeneralizedExpession> ObjectIntersectionOf(ObjectAllValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesLanguage> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryLanguage>) ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesLanguage> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryLanguage>)))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryItem>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryItem> "query item")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryItem> "physical instance of an encoding, e.g. a file on a hard drive, a Java String in memory."^^xsd:string)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryItem> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryItem> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryItem> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryEncoding>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryLanguage>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryLanguage> "query language")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryLanguage> "language consisting of a set of query expressions, one or more serializations of these Expressions, and one or more Entailment Regimes (http://www.w3.org/TR/sparql11-entailment/#entRegimeParts) defined in terms of formal, logic-based semantics. "^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryLanguage> "Note: the set of expressions of a query language may be defined by a grammar, or it may be defined in terms of expressions of an OMS language together with a sequence of non-logical constants that will be treated as the distinguished query variables. Additional features of a query language are perfomatives used to indicate how query results should be returned."^^xsd:string)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryLanguage> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeRepresentationAndReasoningLanguage>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryManifestation>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryManifestation> "character sequence, or collection of character sequences, each being the serialization of a query in a query serialization (Formats)."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryManifestation> "query manifestation")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryManifestation> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryManifestation> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryManifestation> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/manifests> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryGeneralizedExpession>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryManifestation> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesSerialization> <http://www.omg.org/spec/API4KB/API4KBTerminology/QuerySerialization>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryResource>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryResource> "query asset, query, query manifestation, query encoding, or query item"^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryResource> "query resource")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QueryResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/QuerySerialization>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/QuerySerialization> "query serialization")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/QuerySerialization> "serialization of a query language."^^xsd:string)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QuerySerialization> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSerialization>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/QuerySerialization> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSerializationOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/QueryLanguage>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultAsset>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultAsset> "knowledge asset for query results."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultAsset> "result asset")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultAsset> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultAsset> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultAsset> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/conceptualizes> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultGeneralizedExpression>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultEncoding>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultEncoding> "result encoding")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultEncoding> "byte (or bit) sequence that is the encoding of a result manifestation in some character encoding system(s)."^^xsd:string)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultEncoding> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultEncoding> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultEncoding> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/encodes> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultManifestation>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultGeneralizedExpression>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultGeneralizedExpression> "sequence of bindings as a correspondence between distinguished query variables and derived symbols."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultGeneralizedExpression> "result generalized expression")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultGeneralizedExpression> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultGeneralizedExpression> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultGeneralizedExpression> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesLanguage> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultLanguage>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultGeneralizedExpression> ObjectAllValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesLanguage> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultLanguage>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultItem>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultItem> "result item")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultItem> "physical instance of an encoding, e.g. a file on a hard drive, a Java String in memory."^^xsd:string)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultItem> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultItem> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultItem> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultEncoding>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultLanguage>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultLanguage> "result language")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultLanguage> "language for expressing query results."^^xsd:string)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultLanguage> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeRepresentationAndReasoningLanguage>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultManifestation>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultManifestation> "character sequence, or collection of character sequences, each being the serialization of a result in a result serialization (Formats)."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultManifestation> "result manifestation")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultManifestation> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultManifestation> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultResource>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultManifestation> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/manifests> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultGeneralizedExpression>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultManifestation> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesSerialization> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultSerialization>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultResource>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultResource> "result asset, Result, result manifestation, result encoding, or result item"^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultResource> "result resource")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultSerialization>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultSerialization> "result serialization")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultSerialization> "serialization of a result language."^^xsd:string)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultSerialization> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSerialization>)
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/ResultSerialization> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSerializationOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/ResultLanguage>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Role>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/Role> "set of required proficiencies."^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/Role> "Certain standard API4KB Roles will be enumerated in the specification. The specification will also allow user-defined Roles."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Role> "role")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/Role> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/requires> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/Proficiency>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Serialization>))
AnnotationAssertion(rdfs:isDefinedBy <http://www.omg.org/spec/API4KB/API4KBTerminology/Serialization> "http://www.omg.org/spec/OntoIOp/Terminology")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> <http://www.omg.org/spec/API4KB/API4KBTerminology/Serialization> "OntoIOp sensitive"^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/Serialization> "system for transforming from an expression to a character sequence"^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Serialization> "serialization")
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/Serialization> ObjectSomeValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSerializationOf> <http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/Language>))
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Source>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Source> "source")
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Specification>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Specification> "specification")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/Specification> "TBD"^^xsd:string)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/Structured>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/Structured> "structured")
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeAsset>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeAsset> "collection of knowledge assets  (either structured or basic), which are not necessarily according to the same environment, but where there is a unique language that is the focus of the environment of each component")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeAsset> "KA2: a heterogeneous structure of assets conceptualized from the RDF, OWL and CL expressions of example KE2 according to an environment that provides translations from RDF or OWL into CL, and an ontology-based data access (OBDA) source schema providing a mapping from XMPP schemas to OWL")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeAsset> "structured knowledge asset")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeAsset> <http://www.omg.org/spec/API4KB/API4KBTerminology/ImmutableKnowledgeBase>)
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeAsset> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeAsset> ObjectAllValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasStructuralComponent> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeAsset> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeAsset>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeEncoding>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeEncoding> "structured knowledge encoding")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeEncoding> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeEncoding> ObjectAllValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasStructuralComponent> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeEncoding> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeEncoding>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeExpression>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeExpression> "structured knowledge expression")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeExpression> "collection of knowledge expressions (either structured or basic), which are not necessarily in the same language and may themselves have structure.")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeExpression> "KE2: a heterogeneous collection of streaming data and RDF graphs, together with static OWL ontologies and CL texts, and ECA rules describing actions of a CDS")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeExpression> "KE3: the OWL 2 DL ontology series KA1, viewed as a collection of expressions rather than an equivalence class")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeExpression> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeExpression> ObjectAllValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasStructuralComponent> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeExpression> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeExpression>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeItem>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeItem> "KI2:  a heterogeneous structure of an RDF triple store, network connections to binary input streams cached in a MySQL database, RuleML XML files on a local hard drive and CL XCL2 files on a network server in a content management system, exemplifying example KM2")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeItem> "collection of knowledge items  (either structured or basic), which are not necessarily in the same language, dialect, format or location, and may themselves have structure")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeItem> "structured knowledge item")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeItem> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeItem> ObjectAllValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasStructuralComponent> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeItem> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeItem>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeManifestation>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeManifestation> "structured knowledge manifestation")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeManifestation> "collection of knowledge manifestations (either structured or basic), which are not necessarily in the same language or dialect and may themselves have structure")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeManifestation> "KM2: a heterogeneous structure of RDF Turtle, OWL Manchester as sequences of string tokens, and XMPP, OWL/XML, ECA RuleML and CL XCL2 (the XML-based dialect of Common Logic Edition 2) as XML DOM documents embodying example KE2")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeManifestation> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeManifestation> ObjectAllValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasStructuralComponent> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeManifestation> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeManifestation>)
Declaration(Class(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeResource>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeResource> "structured knowledge resource")
EquivalentClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeResource> ObjectIntersectionOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/Structured> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>))
SubClassOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeResource> ObjectAllValuesFrom(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasStructuralComponent> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>))
DisjointClasses(<http://www.omg.org/spec/API4KB/API4KBTerminology/StructuredKnowledgeResource> <http://www.omg.org/spec/API4KB/API4KBTerminology/BasicKnowledgeResource>)
Declaration(Class(<http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/Expression>))
SubClassOf(<http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/Expression> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>)
EquivalentClasses(<http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/LanguageMapping> <http://www.omg.org/spec/API4KB/API4KBTerminology/LanguageMapping>)
EquivalentClasses(<http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/Mapping> <http://www.omg.org/spec/API4KB/API4KBTerminology/Mapping>)
SubClassOf(<http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/OMSLanguage> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeRepresentationAndReasoningLanguage>)
Declaration(Class(<http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/OMSSerialization>))
SubClassOf(<http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/OMSSerialization> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSerialization>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/about>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/about> "about")
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/about> <http://www.omg.org/spec/API4KB/API4KBTerminology/Response>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/accordingTo>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/accordingTo> "according to")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/accordingTo> "relationship between a collection and an environment whereby the results of application of a mapping of the environment to a member of the collection are also members of the environment"^^xsd:string)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/accordingTo> <http://www.omg.org/spec/API4KB/API4KBTerminology/Environment>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/actualizes>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/actualizes> "actualizes")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/actualizes> <http://www.omg.org/spec/API4KB/API4KBTerminology/isActualizedBy>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/actualizes> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/KnowledgeEvent>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/actualizes> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/Proficiency>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/allPreserve>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/allPreserve> "all preserve")
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/allPreserve> <http://www.omg.org/spec/API4KB/API4KBTerminology/PreservingEnvironment>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/allPreserve> <http://www.omg.org/spec/API4KB/API4KBTerminology/EquivalenceRelation>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/conceptualizes>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/conceptualizes> "conceptualizes")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/conceptualizes> "inverse of 'expresses'"^^xsd:string)
SubObjectPropertyOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/conceptualizes> <http://www.omg.org/spec/API4KB/API4KBTerminology/lifts>)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/conceptualizes> <http://www.omg.org/spec/API4KB/API4KBTerminology/expresses>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/conveys>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/conveys> "conveys")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/conveys> <http://www.omg.org/spec/API4KB/API4KBTerminology/isConveyedBy>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/conveys> <http://www.omg.org/spec/API4KB/API4KBTerminology/Proxy>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/conveys> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/Proficiency>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/decodes>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/decodes> "inverse of 'encodes'"^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/decodes> "decodes")
SubObjectPropertyOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/decodes> <http://www.omg.org/spec/API4KB/API4KBTerminology/lifts>)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/decodes> <http://www.omg.org/spec/API4KB/API4KBTerminology/encodes>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/encodes>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/encodes> "encodes")
SubObjectPropertyOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/encodes> <http://www.omg.org/spec/API4KB/API4KBTerminology/lowers>)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/decodes> <http://www.omg.org/spec/API4KB/API4KBTerminology/encodes>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/encodes> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/encodes> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/executes>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/executes> "executes")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/executes> <http://www.omg.org/spec/API4KB/API4KBTerminology/isExecutedBy>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/executes> <http://www.omg.org/spec/API4KB/API4KBTerminology/Application>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/executes> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/KnowledgeEvent>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/exposes>))
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/exposes> <http://www.omg.org/spec/API4KB/API4KBTerminology/isExposedBy>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/exposes> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/Proficiency>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/expresses>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#altLabel> <http://www.omg.org/spec/API4KB/API4KBTerminology/expresses> "is expression of")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/expresses> "knowledge asset that would be obtained by conceptualizing the generalized expression."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/expresses> "expresses")
SubObjectPropertyOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/expresses> <http://www.omg.org/spec/API4KB/API4KBTerminology/lowers>)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/conceptualizes> <http://www.omg.org/spec/API4KB/API4KBTerminology/expresses>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/expresses> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/expresses> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeAsset>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/fillsRole>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/fillsRole> "fills role")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isFilledBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/fillsRole>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasContent>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasContent> "has content")
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasContent> <http://www.omg.org/spec/API4KB/API4KBTerminology/Response>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMapping>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMapping> "has environment mapping")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMapping> <http://www.omg.org/spec/API4KB/API4KBTerminology/isEnvironmentMappingOf>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMapping> <http://www.omg.org/spec/API4KB/API4KBTerminology/Mapping>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMember>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMember> "has environment member")
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMember> <http://www.omg.org/spec/API4KB/API4KBTerminology/NonemptyEnvironment>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMember> owl:Thing)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEvent>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasEvent> "has event")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isEventOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/hasEvent>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasFocusMember>))
SubObjectPropertyOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasFocusMember> <http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMember>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasPart>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasPart> "has part")
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasProficiency>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasProficiency> "has proficiency")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasProficiency> <http://www.omg.org/spec/API4KB/API4KBTerminology/isProficiencyOf>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasRegistrant>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasRegistrant> "has registrant")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasRegistrant> <http://www.omg.org/spec/API4KB/API4KBTerminology/isRegisteredWith>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasRequestee>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasRequestee> "has requestee"@en)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/hasRequestee> "application that is the recipient of the request"^^xsd:string)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasRequestee> <http://www.omg.org/spec/API4KB/API4KBTerminology/isRequesteeOf>)
FunctionalObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasRequestee>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasRequestee> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBTry/Try>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasRequestee> <http://www.omg.org/spec/API4KB/API4KBTerminology/Application>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasSetOfMappings>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasSetOfMappings> "has set of mappings")
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasSnapshot>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/hasSnapshot> "relationship between a mutable source and its state at one timepoint."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasSnapshot> "has snapshot")
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasSnapshot> <http://www.omg.org/spec/API4KB/API4KBTerminology/Mutable>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasSnapshot> <http://www.omg.org/spec/API4KB/API4KBTerminology/Immutable>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasStructuralComponent>))
SubObjectPropertyOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasStructuralComponent> <http://www.omg.org/spec/API4KB/API4KBTerminology/hasPart>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasStructuralComponent> <http://www.omg.org/spec/API4KB/API4KBTerminology/Structured>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasSubenvironment>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasSubenvironment> "has subenvironment")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubenvironmentOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/hasSubenvironment>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasSubproficiency>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/hasSubproficiency> "has subproficiency")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubproficiencyOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/hasSubproficiency>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/implements>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/implements> "implements")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isImplementedBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/implements>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/implements> <http://www.omg.org/spec/API4KB/API4KBTerminology/Application>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/implements> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBOperation/KnowledgeOperation>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/interactsWith>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/interactsWith> "interacts with")
SymmetricObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/interactsWith>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/interactsWith> <http://www.omg.org/spec/API4KB/API4KBTerminology/Application>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/interactsWith> <http://www.omg.org/spec/API4KB/API4KBTerminology/Application>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isActualizedBy>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isActualizedBy> "is actualized by")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/actualizes> <http://www.omg.org/spec/API4KB/API4KBTerminology/isActualizedBy>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isConveyedBy>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isConveyedBy> "is conveyed by")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/conveys> <http://www.omg.org/spec/API4KB/API4KBTerminology/isConveyedBy>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isDeployedWithin>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isDeployedWithin> "is deployed within")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isDeployedWithin> <http://www.omg.org/spec/API4KB/API4KBTerminology/supports>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isDeployedWithin> <http://www.omg.org/spec/API4KB/API4KBTerminology/Component>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/isDeployedWithin> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatform>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isEnvironmentMappingOf>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isEnvironmentMappingOf> "is environment mapping of")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMapping> <http://www.omg.org/spec/API4KB/API4KBTerminology/isEnvironmentMappingOf>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isEventOf>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isEventOf> "is event of")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isEventOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/hasEvent>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isEventOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/KnowledgeEvent>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/isEventOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBOperation/KnowledgeOperation>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isExecutedBy>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isExecutedBy> "is executed by")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> <http://www.omg.org/spec/API4KB/API4KBTerminology/isExecutedBy> "
        <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#FunctionalProperty\"/>            
      ")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> <http://www.omg.org/spec/API4KB/API4KBTerminology/isExecutedBy> "OWL does not let us declare this to be functional, while keeping the property chain for its inverse.")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/executes> <http://www.omg.org/spec/API4KB/API4KBTerminology/isExecutedBy>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isExecutedBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/KnowledgeEvent>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/isExecutedBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/Application>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isExposedBy>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isExposedBy> "is exposed by")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/exposes> <http://www.omg.org/spec/API4KB/API4KBTerminology/isExposedBy>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isFilledBy>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isFilledBy> "is filled by")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isFilledBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/fillsRole>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isFilledBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/Role>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/isFilledBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isImplementedBy>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isImplementedBy> "is implemented by")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isImplementedBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/implements>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isManagedBy>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> <http://www.omg.org/spec/API4KB/API4KBTerminology/isManagedBy> "OWL does not let us declare this to be functional, while keeping the property chain on its inverse.")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> <http://www.omg.org/spec/API4KB/API4KBTerminology/isManagedBy> "
        <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#FunctionalProperty\"/>            
      ")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isManagedBy> "is managed by")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isManagedBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/manages>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isProficiencyOf>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isProficiencyOf> "is proficiency of")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasProficiency> <http://www.omg.org/spec/API4KB/API4KBTerminology/isProficiencyOf>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isProficiencyOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/Proficiency>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/isProficiencyOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isRegisteredWith>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isRegisteredWith> "is registered with")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasRegistrant> <http://www.omg.org/spec/API4KB/API4KBTerminology/isRegisteredWith>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isRegisteredWith> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeSource>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/isRegisteredWith> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatform>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isRequestedBy>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> <http://www.omg.org/spec/API4KB/API4KBTerminology/isRequestedBy> "
      <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#FunctionalProperty\"/>            
    ")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> <http://www.omg.org/spec/API4KB/API4KBTerminology/isRequestedBy> "OWL does not let us declare this to be functional, while keeping the property chain for its inverse.")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isRequestedBy> "is requested by")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/requests> <http://www.omg.org/spec/API4KB/API4KBTerminology/isRequestedBy>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isRequesteeOf>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isRequesteeOf> "is requestee of"@en)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasRequestee> <http://www.omg.org/spec/API4KB/API4KBTerminology/isRequesteeOf>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isRequiredBy>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isRequiredBy> "is required by")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isRequiredBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/requires>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSerializationOf>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isSerializationOf> "is serialization of")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/isSerializationOf> "language that is manifested by the serialization"^^xsd:string)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSerializationOf> <http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/Language>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSerializationOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/Serialization>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubenvironmentOf>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isSubenvironmentOf> "is subenvironment of"@en)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/isSubenvironmentOf> "relationship between two environments that is a partial order where the language and logic graphs of the first enviroment are subgraphs, resp., of the language and logic graphs of the second environment"^^xsd:string)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubenvironmentOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/hasSubenvironment>)
TransitiveObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubenvironmentOf>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubenvironmentOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/Environment>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubenvironmentOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/Environment>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubproficiencyOf>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/isSubproficiencyOf> "is subproficiency of"@en)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/isSubproficiencyOf> "relationship between two proficiencies that is a partial order such that any operation that exposes a proficiency also exposes any subproficiency of it"^^xsd:string)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubproficiencyOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/hasSubproficiency>)
TransitiveObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubproficiencyOf>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubproficiencyOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/Proficiency>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/isSubproficiencyOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/Proficiency>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/lifts>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/lifts> "relation between two knowledge resources where the first is an abstraction of the second by one level (e.g. if the first is an encoding, the second is an item, etc.).  Lifts relations are limited to one of the following: prototypes, decodes, parses, conceptualizes"^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> <http://www.omg.org/spec/API4KB/API4KBTerminology/lifts> "OWL does not let us declare this to be functional, while keeping the property chains that link Events and Operations.")
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/lifts> "lifts")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/lifts> <http://www.omg.org/spec/API4KB/API4KBTerminology/lowers>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/lifts> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/lifts> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeResource>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/lowers>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/lowers> "lowers")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/lowers> "relation between two knowledge resources where the first is a deabstraction of the second by one level (e.g. if the first is an item, the second is an encoding, etc.).  Lowers relations are limited to one of the following: reproduces, encodes, manifests, expresses"^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> <http://www.omg.org/spec/API4KB/API4KBTerminology/lowers> "
      <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#FunctionalProperty\"/>            
    ")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> <http://www.omg.org/spec/API4KB/API4KBTerminology/lowers> "OWL does not let us declare this to be functional, while keeping the property chains that link Events and Operations.")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/lifts> <http://www.omg.org/spec/API4KB/API4KBTerminology/lowers>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/manages>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/manages> "manages")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isManagedBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/manages>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/manages> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatformManager>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/manages> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgePlatform>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/manifests>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/manifests> "manifests")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/manifests> "generalized expression that would be obtained from parsing the knowledge manifestation"^^xsd:string)
SubObjectPropertyOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/manifests> <http://www.omg.org/spec/API4KB/API4KBTerminology/lowers>)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/parses> <http://www.omg.org/spec/API4KB/API4KBTerminology/manifests>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/manifests> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/manifests> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/parses>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/parses> "parses")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/parses> "inverse of 'manifests'"^^xsd:string)
SubObjectPropertyOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/parses> <http://www.omg.org/spec/API4KB/API4KBTerminology/lifts>)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/parses> <http://www.omg.org/spec/API4KB/API4KBTerminology/manifests>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/preserves>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/preserves> "preserves")
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/preserves> <http://www.omg.org/spec/API4KB/API4KBTerminology/Mapping>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/preserves> <http://www.omg.org/spec/API4KB/API4KBTerminology/EquivalenceRelation>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/prototypes>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/prototypes> "inverse of 'reproduces'"^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/prototypes> "prototypes")
SubObjectPropertyOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/prototypes> <http://www.omg.org/spec/API4KB/API4KBTerminology/lifts>)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/prototypes> <http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces> "knowledge encoding that would be obtained from instreaming the knowledge item"^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces> "reproduces")
SubObjectPropertyOf(<http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces> <http://www.omg.org/spec/API4KB/API4KBTerminology/lowers>)
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/prototypes> <http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeItem>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeEncoding>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/requests>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/requests> "requests")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/requests> <http://www.omg.org/spec/API4KB/API4KBTerminology/isRequestedBy>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/requests> <http://www.omg.org/spec/API4KB/API4KBTerminology/Application>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/requests> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBTry/Try>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/requires>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/requires> "requires")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isRequiredBy> <http://www.omg.org/spec/API4KB/API4KBTerminology/requires>)
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/requires> <http://www.omg.org/spec/API4KB/API4KBTerminology/Role>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/requires> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBProficiency/Proficiency>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/responds>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/responds> "responds")
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/responds> <http://www.omg.org/spec/API4KB/API4KBTerminology/Application>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/responds> <http://www.omg.org/spec/API4KB/API4KBTerminology/Response>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/supports>))
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/supports> "supports")
InverseObjectProperties(<http://www.omg.org/spec/API4KB/API4KBTerminology/isDeployedWithin> <http://www.omg.org/spec/API4KB/API4KBTerminology/supports>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesLanguage>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/usesLanguage> "language used by a generalized expression."^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/usesLanguage> "uses language")
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesLanguage> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeExpression>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesLanguage> <http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/Language>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesSerialization>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/usesSerialization> "serialization used by a knowledge manifestation"^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/usesSerialization> "uses serialization")
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesSerialization> <http://www.omg.org/spec/API4KB/API4KBTerminology/KnowledgeManifestation>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesSerialization> <http://www.omg.org/spec/API4KB/API4KBTerminology/Serialization>)
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesSpecification>))
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> <http://www.omg.org/spec/API4KB/API4KBTerminology/usesSpecification> "specification used by an application"^^xsd:string)
AnnotationAssertion(rdfs:label <http://www.omg.org/spec/API4KB/API4KBTerminology/usesSpecification> "uses specification")
ObjectPropertyDomain(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesSpecification> <http://www.omg.org/spec/API4KB/API4KBTerminology/Application>)
ObjectPropertyRange(<http://www.omg.org/spec/API4KB/API4KBTerminology/usesSpecification> <http://www.omg.org/spec/API4KB/API4KBTerminology/Specification>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/fillsRole> <http://www.omg.org/spec/API4KB/API4KBTerminology/requires>) <http://www.omg.org/spec/API4KB/API4KBTerminology/hasProficiency>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/isInputOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/hasOutputFromInStreaming>) <http://www.omg.org/spec/API4KB/API4KBTerminology/reproduces>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isEnvironmentMappingOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/allPreserve>) <http://www.omg.org/spec/API4KB/API4KBTerminology/preserves>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isRequesteeOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBTry/hasEvent>) <http://www.omg.org/spec/API4KB/API4KBTerminology/executes>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMapping> <http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/mapsTo>) <http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMember>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/isInputOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/hasOutputFromParsing>) <http://www.omg.org/spec/API4KB/API4KBTerminology/manifests>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/requests> <http://www.omg.org/spec/API4KB/API4KBTerminology/hasRequestee>) <http://www.omg.org/spec/API4KB/API4KBTerminology/interactsWith>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isRequesteeOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBTry/hasEvent> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/hasKPOutput>) <http://www.omg.org/spec/API4KB/API4KBTerminology/manages>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBTry/isEventOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBTry/isTryOf>) <http://www.omg.org/spec/API4KB/API4KBTerminology/isEventOf>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/actualizes> <http://www.omg.org/spec/API4KB/API4KBTerminology/isExposedBy>) <http://www.omg.org/spec/API4KB/API4KBTerminology/isEventOf>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/isInputOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/hasOutputFromConceptualizing>) <http://www.omg.org/spec/API4KB/API4KBTerminology/expresses>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/parses> <http://www.omg.org/spec/API4KB/API4KBTerminology/usesSerialization> <http://www.omg.org/spec/API4KB/API4KBTerminology/isSerializationOf>) <http://www.omg.org/spec/API4KB/API4KBTerminology/usesLanguage>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMapping> <http://www.omg.org/spec/OntoIOp/OntoIOpTerminology/mapsFrom>) <http://www.omg.org/spec/API4KB/API4KBTerminology/hasEnvironmentMember>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/isInputOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBEvent/hasOutputFromUnmarshalling>) <http://www.omg.org/spec/API4KB/API4KBTerminology/encodes>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/implements> <http://www.omg.org/spec/API4KB/API4KBTerminology/exposes>) <http://www.omg.org/spec/API4KB/API4KBTerminology/conveys>)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KB/API4KBTerminology/isRequesteeOf> <http://www.omg.org/spec/API4KB/API4KBTerminology/API4KBTry/isDelegatedTo>) <http://www.omg.org/spec/API4KB/API4KBTerminology/requests>)
)
