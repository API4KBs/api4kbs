Prefix(:=<http://www.omg.org/spec/API4KP/Operations/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.omg.org/spec/API4KP/Operations/>
<http://www.omg.org/spec/API4KP/20160801/Operations/>
Import(<http://www.omg.org/techprocess/ab/SpecificationMetadata/>)
Import(<http://www.omg.org/spec/API4KP/OperationClassifiers>)
Import(<http://www.omg.org/spec/DOL/DOL-terms/>)
Import(<http://www.omg.org/spec/API4KP/Classifiers>)
Annotation(<http://purl.org/dc/terms/license> "http://www.omg.org/techprocess/ab/SpecificationMetadata/MITLicense"^^xsd:anyURI)
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/contentLanguage> "http://www.omg.org/spec/ODM/"^^xsd:anyURI)
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/contentLanguage> "http://www.w3.org/standards/techs/owl#w3c_all"^^xsd:anyURI)
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/copyright> "Copyright (c) 2014 Athan Services
Copyright (c) 2014 Thematix Partners LLC
Copyright (c) 2014 Object Management Group, Inc."^^xsd:string)
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/fileAbbreviation> "api4kp-op"^^xsd:string)
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/fileAbstract> "This ontology covers terminology used for describing the operations defined by the API4KP specification."^^xsd:string)
Annotation(<http://www.omg.org/techprocess/ab/SpecificationMetadata/filename> "API4KPTerminologyOperation.rdf"^^xsd:string)
Annotation(rdfs:label "API4KP Operation Terminology Ontology")

Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/Expression>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/Immutable>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/ImmutableKnowledgeBase>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/KnowledgeAsset>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/KnowledgeEncoding>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/KnowledgeExpression>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/KnowledgeItem>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/KnowledgeManifestation>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/KnowledgePlatform>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/KnowledgeResource>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/KnowledgeSource>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/Operation>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/QueryResource>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/ResultAsset>))
Declaration(Class(<http://www.omg.org/spec/API4KP/Terminology/ResultResource>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsAtomicEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsAtomicEvent-AdditionToKnowledgeExpression>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsConceptualizingEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsCurriedActionEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsExpressingEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsHorizontalAssetEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsHorizontalEncodingEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsHorizontalEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsHorizontalExpressionEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsHorizontalItemEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsHorizontalManifestationEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsInStreamingEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsLiftingEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsLoweringEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsManifestingEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsMarshallingEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsNullaryEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsOutStreamingEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsParsingEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsSideEffectFreeEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsSideEffectfulEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsUnaryEvent>))
Declaration(Class(<http://www.omg.org/spec/API4KP/EventsUnmarshallingEvent>))
Declaration(Class(:AddingKOperation))
Declaration(Class(:AdditionOperation))
Declaration(Class(:AdditionToKnowledgeExpressionOperation))
Declaration(Class(:AtomicKOperation))
Declaration(Class(:AtomicOperation))
Declaration(Class(:BinaryOperation))
Declaration(Class(:ConceptualizingAction))
Declaration(Class(:CreateEmptyKPOperation))
Declaration(Class(:CreateEmpty_-AtomicOperation))
Declaration(Class(:ExpressingAction))
Declaration(Class(:ExpressionInputOperation))
Declaration(Class(:HigherOrderAtomicKOperation))
Declaration(Class(:HigherOrderOperation))
Declaration(Class(:HorizontalAction-FocusedAssetIn-ResultAssetOut))
Declaration(Class(:HorizontalAssetAction))
Declaration(Class(:HorizontalAtomicKOperation))
Declaration(Class(:HorizontalEncodingAction))
Declaration(Class(:HorizontalExpressionAction))
Declaration(Class(:HorizontalItemAction))
Declaration(Class(:HorizontalKnowledgeExpressionOperation))
Declaration(Class(:HorizontalManifestationAction))
Declaration(Class(:HorizontalOperation))
Declaration(Class(:IdempotentOperation))
Declaration(Class(:ImmutableKBaseOutputOperation))
Declaration(Class(:InStreamAction))
Declaration(Class(:InStreamingAction))
Declaration(Class(:KPlatformOutputOperation))
Declaration(Class(:KnowledgeOperation))
Declaration(Class(:KnowledgeSourceInputOperation))
Declaration(Class(:KnowledgeSourceOutputOperation))
Declaration(Class(:LiftingAtomicKOperation))
Declaration(Class(:LiftingOperation))
Declaration(Class(:LoweringAtomicKOperation))
Declaration(Class(:LoweringOperation))
Declaration(Class(:ManifestingAction))
Declaration(Class(:MarshallingAction))
Declaration(Class(:MoreThanBinaryOperation))
Declaration(Class(:NonVoidOperation))
Declaration(Class(:NullaryOperation))
Declaration(Class(:NullaryVoidAction))
Declaration(Class(:OutStreamingAction))
Declaration(Class(:ParsingAction))
Declaration(Class(:Put))
Declaration(Class(:QueryingOperation))
Declaration(Class(:QueryingOperation-KnowledgeResourceToImmutableKB))
Declaration(Class(:QueryingResourceAction))
Declaration(Class(:ResultResourceOutputOperation))
Declaration(Class(:SideEffectFreeOperation))
Declaration(Class(:SideEffectfulKOperation))
Declaration(Class(:SideEffectfulOperation))
Declaration(Class(:UnaryOperation))
Declaration(Class(:UnmarshallingAction))
Declaration(Class(:Update))
Declaration(Class(:Void))
Declaration(Class(:VoidOperation))
Declaration(Class(<http://www.omg.org/spec/DOL/DOL-terms/KnowledgeSource>))
Declaration(Class(<http://www.omg.org/spec/DOL/DOL-terms/QuerySource>))
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KP/Terminology/hasEvent>))
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KP/EventshasInput>))
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KP/EventshasOutput>))
Declaration(ObjectProperty(:adds))
Declaration(ObjectProperty(:addsTo))
Declaration(ObjectProperty(:appliesQuery))
Declaration(ObjectProperty(:appliesQueryTo))
Declaration(ObjectProperty(:hasInput))
Declaration(ObjectProperty(:hasOutput))
Declaration(ObjectProperty(:hasOutputFromConceptualizing))
Declaration(ObjectProperty(:hasOutputFromInStreaming))
Declaration(ObjectProperty(:hasOutputFromParsing))
Declaration(ObjectProperty(:hasOutputFromUnmarshalling))
Declaration(ObjectProperty(:isInputOf))
Declaration(ObjectProperty(:isOutputOf))
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KP/Tries/hasEvent>))
Declaration(ObjectProperty(<http://www.omg.org/spec/API4KP/Tries/hasOutput>))

############################
#   Object Properties
############################

# Object Property: :adds (adds resource)

AnnotationAssertion(rdfs:label :adds "adds resource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :adds "need property chain")
SubObjectPropertyOf(:adds :hasInput)
ObjectPropertyDomain(Annotation(<http://www.w3.org/2004/02/skos/core#note> "This relates either a binary adding operation to its first argument or a higher-order adding operation to its only input.") :adds ObjectIntersectionOf(:AdditionOperation ObjectUnionOf(:BinaryOperation :HigherOrderOperation)))
ObjectPropertyRange(Annotation(<http://www.w3.org/2004/02/skos/core#editorialNote> "We need to think about what it means to add to an immutable KP and what an immutable KP is in relation to a mutable KP.") :adds ObjectIntersectionOf(<http://www.omg.org/spec/API4KP/Terminology/Immutable> ObjectUnionOf(<http://www.omg.org/spec/API4KP/Terminology/KnowledgePlatform> <http://www.omg.org/spec/DOL/DOL-terms/KnowledgeSource>)))

# Object Property: :addsTo (adds resource to)

AnnotationAssertion(rdfs:label :addsTo "adds resource to")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :addsTo "
      <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#FunctionalProperty\"/>            
    ")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :addsTo "need property chain")
SubObjectPropertyOf(:addsTo :hasInput)
ObjectPropertyDomain(Annotation(<http://www.w3.org/2004/02/skos/core#note> "This relates either a binary adding operation to its second argument or a horizontal adding operation to its only input.") :addsTo ObjectIntersectionOf(:AdditionOperation ObjectUnionOf(:BinaryOperation :HorizontalOperation)))
ObjectPropertyRange(Annotation(<http://www.w3.org/2004/02/skos/core#editorialNote> "We need to think about what it means to add to an immutable KP and what an immutable KP is in relation to a mutable KP.") :addsTo ObjectIntersectionOf(<http://www.omg.org/spec/API4KP/Terminology/Immutable> ObjectUnionOf(<http://www.omg.org/spec/API4KP/Terminology/KnowledgePlatform> <http://www.omg.org/spec/DOL/DOL-terms/KnowledgeSource>)))

# Object Property: :appliesQuery (applies query resource)

AnnotationAssertion(rdfs:label :appliesQuery "applies query resource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :appliesQuery "TBD"^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :appliesQuery "need property chain")
SubObjectPropertyOf(:appliesQuery :hasInput)
ObjectPropertyDomain(:appliesQuery :QueryingOperation)
ObjectPropertyRange(:appliesQuery <http://www.omg.org/spec/DOL/DOL-terms/QuerySource>)

# Object Property: :appliesQueryTo (applies query to resource)

AnnotationAssertion(rdfs:label :appliesQueryTo "applies query to resource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :appliesQueryTo "TBD"^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :appliesQueryTo "
      <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#FunctionalProperty\"/>            
    ")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :appliesQueryTo "need property chain")
SubObjectPropertyOf(:appliesQueryTo :hasInput)
ObjectPropertyDomain(:appliesQueryTo :QueryingOperation)
ObjectPropertyRange(:appliesQueryTo <http://www.omg.org/spec/DOL/DOL-terms/KnowledgeSource>)

# Object Property: :hasInput (has input)

AnnotationAssertion(rdfs:label :hasInput "has input")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :hasInput "input of an operation"^^xsd:string)
InverseObjectProperties(:hasInput :isInputOf)
ObjectPropertyDomain(:hasInput :KnowledgeOperation)

# Object Property: :hasOutput (has output)

AnnotationAssertion(rdfs:label :hasOutput "has output")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :hasOutput "output of an operation event"^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :hasOutput "
      <rdf:type rdf:resource=\"http://www.w3.org/2002/07/owl#FunctionalProperty\"/>            
    ")
InverseObjectProperties(:hasOutput :isOutputOf)
ObjectPropertyDomain(:hasOutput :KnowledgeOperation)

# Object Property: :hasOutputFromConceptualizing (has output from conceptualizing)

AnnotationAssertion(rdfs:label :hasOutputFromConceptualizing "has output from conceptualizing")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :hasOutputFromConceptualizing "need property chain")
SubObjectPropertyOf(:hasOutputFromConceptualizing :hasOutput)
ObjectPropertyDomain(:hasOutputFromConceptualizing :ConceptualizingAction)
ObjectPropertyRange(:hasOutputFromConceptualizing <http://www.omg.org/spec/API4KP/Terminology/KnowledgeAsset>)

# Object Property: :hasOutputFromInStreaming (has output from instreaming)

AnnotationAssertion(rdfs:label :hasOutputFromInStreaming "has output from instreaming")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :hasOutputFromInStreaming "need property chain")
SubObjectPropertyOf(:hasOutputFromInStreaming :hasOutput)
ObjectPropertyDomain(:hasOutputFromInStreaming :InStreamAction)
ObjectPropertyRange(:hasOutputFromInStreaming <http://www.omg.org/spec/API4KP/Terminology/KnowledgeEncoding>)

# Object Property: :hasOutputFromParsing (has output from parsing)

AnnotationAssertion(rdfs:label :hasOutputFromParsing "has output from parsing")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :hasOutputFromParsing "need property chain")
SubObjectPropertyOf(:hasOutputFromParsing :hasOutput)
ObjectPropertyDomain(:hasOutputFromParsing :ParsingAction)
ObjectPropertyRange(:hasOutputFromParsing <http://www.omg.org/spec/API4KP/Terminology/KnowledgeExpression>)

# Object Property: :hasOutputFromUnmarshalling (has output from unmarshalling)

AnnotationAssertion(rdfs:label :hasOutputFromUnmarshalling "has output from unmarshalling")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :hasOutputFromUnmarshalling "need property chain")
SubObjectPropertyOf(:hasOutputFromUnmarshalling :hasOutput)
ObjectPropertyDomain(:hasOutputFromUnmarshalling :UnmarshallingAction)
ObjectPropertyRange(:hasOutputFromUnmarshalling <http://www.omg.org/spec/API4KP/Terminology/KnowledgeManifestation>)

# Object Property: :isInputOf (is input of)

AnnotationAssertion(rdfs:label :isInputOf "is input of")

# Object Property: :isOutputOf (is output of)

AnnotationAssertion(rdfs:label :isOutputOf "is output of")



############################
#   Classes
############################

# Class: <http://www.omg.org/spec/API4KP/Terminology/Operation> (<http://www.omg.org/spec/API4KP/Terminology/Operation>)

DisjointUnion(<http://www.omg.org/spec/API4KP/Terminology/Operation> :BinaryOperation :MoreThanBinaryOperation :NullaryOperation :UnaryOperation)
DisjointUnion(<http://www.omg.org/spec/API4KP/Terminology/Operation> :NonVoidOperation :VoidOperation)
DisjointUnion(<http://www.omg.org/spec/API4KP/Terminology/Operation> :SideEffectFreeOperation :SideEffectfulOperation)

# Class: :AddingKOperation (adding operation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :AddingKOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#SemanticClassifier>)
AnnotationAssertion(rdfs:label :AddingKOperation "adding operation")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :AddingKOperation "KnowledgeOperation having only events of type AddingKEvent.")
SubClassOf(:AddingKOperation :BinaryOperation)
SubClassOf(:AddingKOperation :KnowledgeOperation)

# Class: :AdditionOperation (:AdditionOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :AdditionOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#SemanticClassifier>)
SubClassOf(:AdditionOperation <http://www.omg.org/spec/API4KP/Terminology/Operation>)

# Class: :AdditionToKnowledgeExpressionOperation (atomic operation - addition to knowledge expression)

AnnotationAssertion(rdfs:label :AdditionToKnowledgeExpressionOperation "atomic operation - addition to knowledge expression")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :AdditionToKnowledgeExpressionOperation "'addition to' atomic operation that maps knowledge expressions into knowledge expressions."^^xsd:string)
SubClassOf(:AdditionToKnowledgeExpressionOperation :AdditionOperation)
SubClassOf(:AdditionToKnowledgeExpressionOperation :AtomicOperation)
SubClassOf(:AdditionToKnowledgeExpressionOperation :ExpressionInputOperation)
SubClassOf(:AdditionToKnowledgeExpressionOperation :HorizontalOperation)
SubClassOf(:AdditionToKnowledgeExpressionOperation :KnowledgeSourceInputOperation)
SubClassOf(:AdditionToKnowledgeExpressionOperation :KnowledgeSourceOutputOperation)
SubClassOf(:AdditionToKnowledgeExpressionOperation ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsAtomicEvent-AdditionToKnowledgeExpression>))

# Class: :AtomicKOperation (action)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :AtomicKOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#SystemLevelClassifier>)
AnnotationAssertion(rdfs:label :AtomicKOperation "action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :AtomicKOperation "nullary or unary atomic knowledge operation"^^xsd:string)
SubClassOf(:AtomicKOperation :KnowledgeOperation)
SubClassOf(:AtomicKOperation ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsAtomicEvent>))

# Class: :AtomicOperation (:AtomicOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :AtomicOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#SystemLevelClassifier>)
SubClassOf(:AtomicOperation <http://www.omg.org/spec/API4KP/Terminology/Operation>)

# Class: :BinaryOperation (:BinaryOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :BinaryOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#ArityClassifier>)
SubClassOf(:BinaryOperation <http://www.omg.org/spec/API4KP/Terminology/Operation>)

# Class: :ConceptualizingAction (conceptualizing action)

AnnotationAssertion(rdfs:label :ConceptualizingAction "conceptualizing action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :ConceptualizingAction "lifting action that transforms generalized expressions to knowledge assets."^^xsd:string)
SubClassOf(:ConceptualizingAction :LiftingAtomicKOperation)
SubClassOf(:ConceptualizingAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsConceptualizingEvent>))
SubClassOf(:ConceptualizingAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeExpression>))
SubClassOf(:ConceptualizingAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeAsset>))

# Class: :CreateEmptyKPOperation (create empty KP operation)

AnnotationAssertion(rdfs:label :CreateEmptyKPOperation "create empty KP operation"@en)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :CreateEmptyKPOperation "This needs some additional work. We should define the operation outputs in terms of event outputs.")
SubClassOf(:CreateEmptyKPOperation :CreateEmpty_-AtomicOperation)
SubClassOf(:CreateEmptyKPOperation :KPlatformOutputOperation)
SubClassOf(:CreateEmptyKPOperation ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Tries/hasOutput> <http://www.omg.org/spec/API4KP/Terminology/KnowledgePlatform>))

# Class: :CreateEmpty_-AtomicOperation (nullary nonvoid action)

AnnotationAssertion(rdfs:label :CreateEmpty_-AtomicOperation "nullary nonvoid action"@en)
SubClassOf(:CreateEmpty_-AtomicOperation :AtomicKOperation)
SubClassOf(:CreateEmpty_-AtomicOperation :NullaryOperation)
SubClassOf(:CreateEmpty_-AtomicOperation :SideEffectFreeOperation)

# Class: :ExpressingAction (expressing action)

AnnotationAssertion(rdfs:label :ExpressingAction "expressing action")
SubClassOf(:ExpressingAction :LoweringAtomicKOperation)
SubClassOf(:ExpressingAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsExpressingEvent>))
SubClassOf(:ExpressingAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeAsset>))
SubClassOf(:ExpressingAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeExpression>))

# Class: :ExpressionInputOperation (:ExpressionInputOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :ExpressionInputOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#InputTypeClassifier>)
SubClassOf(:ExpressionInputOperation :UnaryOperation)
SubClassOf(:ExpressionInputOperation ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/Expression>))

# Class: :HigherOrderAtomicKOperation (higher-order action)

AnnotationAssertion(rdfs:label :HigherOrderAtomicKOperation "higher-order action"@en)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :HigherOrderAtomicKOperation "side-effect-free action whose input or output (or both) is an action"^^xsd:string)
EquivalentClasses(:HigherOrderAtomicKOperation ObjectIntersectionOf(:AtomicKOperation :HigherOrderOperation))
SubClassOf(:HigherOrderAtomicKOperation ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsCurriedActionEvent>))
SubClassOf(:HigherOrderAtomicKOperation ObjectAllValuesFrom(:hasOutput :AtomicKOperation))

# Class: :HigherOrderOperation (:HigherOrderOperation)

SubClassOf(:HigherOrderOperation :NonVoidOperation)
SubClassOf(:HigherOrderOperation :UnaryOperation)
DisjointClasses(:HigherOrderOperation :HorizontalOperation)

# Class: :HorizontalAction-FocusedAssetIn-ResultAssetOut (horizontal action - focused asset in - answer substitution collection out)

AnnotationAssertion(rdfs:label :HorizontalAction-FocusedAssetIn-ResultAssetOut "horizontal action - focused asset in - answer substitution collection out")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :HorizontalAction-FocusedAssetIn-ResultAssetOut "horizontal action that maps knowledge bases to result assets."^^xsd:string)
SubClassOf(:HorizontalAction-FocusedAssetIn-ResultAssetOut :HorizontalAssetAction)
SubClassOf(:HorizontalAction-FocusedAssetIn-ResultAssetOut ObjectSomeValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeAsset>))
SubClassOf(:HorizontalAction-FocusedAssetIn-ResultAssetOut ObjectSomeValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/ResultAsset>))

# Class: :HorizontalAssetAction (horizontal asset action)

AnnotationAssertion(rdfs:label :HorizontalAssetAction "horizontal asset action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :HorizontalAssetAction "horizontal action whose inputs and outputs are knowledge assets."^^xsd:string)
SubClassOf(:HorizontalAssetAction :HorizontalAtomicKOperation)
SubClassOf(:HorizontalAssetAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsHorizontalAssetEvent>))
SubClassOf(:HorizontalAssetAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeAsset>))
SubClassOf(:HorizontalAssetAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeAsset>))

# Class: :HorizontalAtomicKOperation (horizontal action)

AnnotationAssertion(rdfs:label :HorizontalAtomicKOperation "horizontal action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :HorizontalAtomicKOperation "side-effect-free action where the output is at the same knowledge source level as the input"^^xsd:string)
EquivalentClasses(:HorizontalAtomicKOperation ObjectIntersectionOf(:AtomicKOperation :HorizontalOperation))
SubClassOf(:HorizontalAtomicKOperation ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsHorizontalEvent>))
SubClassOf(:HorizontalAtomicKOperation ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeResource>))
SubClassOf(:HorizontalAtomicKOperation ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeResource>))
DisjointUnion(:HorizontalAtomicKOperation :HorizontalAssetAction :HorizontalEncodingAction :HorizontalExpressionAction :HorizontalItemAction :HorizontalManifestationAction)

# Class: :HorizontalEncodingAction (horizontal encoding action)

AnnotationAssertion(rdfs:label :HorizontalEncodingAction "horizontal encoding action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :HorizontalEncodingAction "horizontal action whose inputs and outputs are knowledge expressions."^^xsd:string)
SubClassOf(:HorizontalEncodingAction :HorizontalAtomicKOperation)
SubClassOf(:HorizontalEncodingAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsHorizontalEncodingEvent>))
SubClassOf(:HorizontalEncodingAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeEncoding>))
SubClassOf(:HorizontalEncodingAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeEncoding>))

# Class: :HorizontalExpressionAction (horizontal expression action)

AnnotationAssertion(rdfs:label :HorizontalExpressionAction "horizontal expression action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :HorizontalExpressionAction "horizontal action whose inputs and outputs are knowledge expressions."^^xsd:string)
SubClassOf(:HorizontalExpressionAction :HorizontalAtomicKOperation)
SubClassOf(:HorizontalExpressionAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsHorizontalExpressionEvent>))
SubClassOf(:HorizontalExpressionAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeExpression>))
SubClassOf(:HorizontalExpressionAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeExpression>))

# Class: :HorizontalItemAction (horizontal item action)

AnnotationAssertion(rdfs:label :HorizontalItemAction "horizontal item action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :HorizontalItemAction "horizontal action whose inputs and outputs are knowledge expressions."^^xsd:string)
SubClassOf(:HorizontalItemAction :HorizontalAtomicKOperation)
SubClassOf(:HorizontalItemAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsHorizontalItemEvent>))
SubClassOf(:HorizontalItemAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeItem>))
SubClassOf(:HorizontalItemAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeItem>))

# Class: :HorizontalKnowledgeExpressionOperation (:HorizontalKnowledgeExpressionOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :HorizontalKnowledgeExpressionOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#InputOutputTypeRelationClassifier>)
SubClassOf(:HorizontalKnowledgeExpressionOperation :HorizontalOperation)
SubClassOf(:HorizontalKnowledgeExpressionOperation ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeExpression>))
SubClassOf(:HorizontalKnowledgeExpressionOperation ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeExpression>))

# Class: :HorizontalManifestationAction (horizontal manifestation action)

AnnotationAssertion(rdfs:label :HorizontalManifestationAction "horizontal manifestation action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :HorizontalManifestationAction "horizontal action whose inputs and outputs are knowledge expressions."^^xsd:string)
SubClassOf(:HorizontalManifestationAction :HorizontalAtomicKOperation)
SubClassOf(:HorizontalManifestationAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsHorizontalManifestationEvent>))
SubClassOf(:HorizontalManifestationAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeManifestation>))
SubClassOf(:HorizontalManifestationAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeManifestation>))

# Class: :HorizontalOperation (:HorizontalOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :HorizontalOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#InputOutputTypeRelationClassifier>)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :HorizontalOperation "Unary operation where the input and output are on the same abstraction level.")
SubClassOf(:HorizontalOperation :NonVoidOperation)
SubClassOf(:HorizontalOperation :UnaryOperation)

# Class: :IdempotentOperation (idempotent action)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :IdempotentOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#SemanticClassifier>)
AnnotationAssertion(rdfs:label :IdempotentOperation "idempotent action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :IdempotentOperation "side-effect free (?) unary operation that  is equal to its composition with itself (A = A o A)")
SubClassOf(:IdempotentOperation :UnaryOperation)

# Class: :ImmutableKBaseOutputOperation (:ImmutableKBaseOutputOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :ImmutableKBaseOutputOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#OutputTypeClassifier>)
SubClassOf(:ImmutableKBaseOutputOperation :KnowledgeOperation)
SubClassOf(:ImmutableKBaseOutputOperation :NonVoidOperation)

# Class: :InStreamingAction (instreaming action)

AnnotationAssertion(rdfs:label :InStreamingAction "instreaming action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :InStreamingAction "lifting action that maps knowledge items into knowledge encodings."^^xsd:string)
SubClassOf(:InStreamingAction :LiftingAtomicKOperation)
SubClassOf(:InStreamingAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsInStreamingEvent>))
SubClassOf(:InStreamingAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeItem>))
SubClassOf(:InStreamingAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeEncoding>))

# Class: :KPlatformOutputOperation (:KPlatformOutputOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :KPlatformOutputOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#OutputTypeClassifier>)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :KPlatformOutputOperation "An operation that has a Knowledge Platform as output.")
SubClassOf(:KPlatformOutputOperation :KnowledgeOperation)
SubClassOf(:KPlatformOutputOperation :NonVoidOperation)

# Class: :KnowledgeOperation (knowledge operation)

AnnotationAssertion(rdfs:label :KnowledgeOperation "knowledge operation")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :KnowledgeOperation "function (possibly with side-effects) having a knowledge source, environment or operation type in its signature"^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#editorialNote> :KnowledgeOperation "is there a super-class for Operation in some OMG standard?"^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> :KnowledgeOperation "checking for compliance with plans")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> :KnowledgeOperation "initiating an ECA Rulebase")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> :KnowledgeOperation "publishing or subscribing to a stream of RDF graphs")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> :KnowledgeOperation "revising an ontology of guidelines")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> :KnowledgeOperation "submitting a SPARQL query")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :KnowledgeOperation "Option 1. the definition as \"function\" means that its a black-box standard. We may define the post-conditions by a reference decomposition into actions, but there is no normative requirement for applications to execute according to that decomposition.
      
      Option 2. at the other extreme, the decomposition could also be consider normative.
      
      Option 3. something in between."^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :KnowledgeOperation "side-effects means effects beyond the output value returned")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> :KnowledgeOperation "Each API4KP Interface is a subclass of Operation."^^xsd:string)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#scopeNote> :KnowledgeOperation "This class contains only API4KP Operation."^^xsd:string)
SubClassOf(:KnowledgeOperation <http://www.omg.org/spec/API4KP/Terminology/Operation>)

# Class: :KnowledgeSourceInputOperation (:KnowledgeSourceInputOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :KnowledgeSourceInputOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#InputTypeClassifier>)
SubClassOf(:KnowledgeSourceInputOperation :UnaryOperation)
SubClassOf(:KnowledgeSourceInputOperation ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/DOL/DOL-terms/KnowledgeSource>))

# Class: :KnowledgeSourceOutputOperation (:KnowledgeSourceOutputOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :KnowledgeSourceOutputOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#OutputTypeClassifier>)
SubClassOf(:KnowledgeSourceOutputOperation <http://www.omg.org/spec/API4KP/Terminology/Operation>)
SubClassOf(:KnowledgeSourceOutputOperation ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeSource>))

# Class: :LiftingAtomicKOperation (lifting action)

AnnotationAssertion(rdfs:label :LiftingAtomicKOperation "lifting action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :LiftingAtomicKOperation "action that is a lifting operation"^^xsd:string)
EquivalentClasses(:LiftingAtomicKOperation ObjectIntersectionOf(:AtomicKOperation :LiftingOperation))
SubClassOf(:LiftingAtomicKOperation ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsLiftingEvent>))
SubClassOf(:LiftingAtomicKOperation ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeResource>))
SubClassOf(:LiftingAtomicKOperation ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeResource>))
DisjointUnion(:LiftingAtomicKOperation :ConceptualizingAction :InStreamingAction :ParsingAction :UnmarshallingAction)

# Class: :LiftingOperation (:LiftingOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :LiftingOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#InputOutputTypeRelationClassifier>)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :LiftingOperation "unary operation where the output is at a higher abstraction level than the input")
SubClassOf(:LiftingOperation :NonVoidOperation)
SubClassOf(:LiftingOperation :UnaryOperation)

# Class: :LoweringAtomicKOperation (lowering action)

AnnotationAssertion(rdfs:label :LoweringAtomicKOperation "lowering action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :LoweringAtomicKOperation "side-effect-free action where the output is at a lower knowledge source level than the input"^^xsd:string)
EquivalentClasses(:LoweringAtomicKOperation ObjectIntersectionOf(:AtomicKOperation :LoweringOperation))
SubClassOf(:LoweringAtomicKOperation ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsLoweringEvent>))
SubClassOf(:LoweringAtomicKOperation ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeResource>))
SubClassOf(:LoweringAtomicKOperation ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeResource>))
DisjointUnion(:LoweringAtomicKOperation :ExpressingAction :ManifestingAction :MarshallingAction :OutStreamingAction)

# Class: :LoweringOperation (:LoweringOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :LoweringOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#InputOutputTypeRelationClassifier>)
SubClassOf(:LoweringOperation :NonVoidOperation)
SubClassOf(:LoweringOperation :UnaryOperation)

# Class: :ManifestingAction (manifesting action)

AnnotationAssertion(rdfs:label :ManifestingAction "manifesting action")
SubClassOf(:ManifestingAction :LoweringAtomicKOperation)
SubClassOf(:ManifestingAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsManifestingEvent>))
SubClassOf(:ManifestingAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeExpression>))
SubClassOf(:ManifestingAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeManifestation>))

# Class: :MarshallingAction (marshalling action)

AnnotationAssertion(rdfs:label :MarshallingAction "marshalling action")
SubClassOf(:MarshallingAction :LoweringAtomicKOperation)
SubClassOf(:MarshallingAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsMarshallingEvent>))
SubClassOf(:MarshallingAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeManifestation>))
SubClassOf(:MarshallingAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeEncoding>))

# Class: :MoreThanBinaryOperation (:MoreThanBinaryOperation)

SubClassOf(:MoreThanBinaryOperation <http://www.omg.org/spec/API4KP/Terminology/Operation>)

# Class: :NonVoidOperation (:NonVoidOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :NonVoidOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#OutputTypeClassifier>)
SubClassOf(:NonVoidOperation <http://www.omg.org/spec/API4KP/Terminology/Operation>)
DisjointClasses(:NonVoidOperation :VoidOperation)

# Class: :NullaryOperation (nullary operation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :NullaryOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#ArityClassifier>)
AnnotationAssertion(rdfs:label :NullaryOperation "nullary operation"@en)
SubClassOf(:NullaryOperation <http://www.omg.org/spec/API4KP/Terminology/Operation>)
SubClassOf(:NullaryOperation ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Tries/hasEvent> <http://www.omg.org/spec/API4KP/EventsNullaryEvent>))

# Class: :NullaryVoidAction (nullary void action)

AnnotationAssertion(rdfs:label :NullaryVoidAction "nullary void action"@en)
SubClassOf(:NullaryVoidAction :NullaryOperation)
SubClassOf(:NullaryVoidAction :VoidOperation)

# Class: :OutStreamingAction (outstreaming action)

AnnotationAssertion(rdfs:label :OutStreamingAction "outstreaming action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :OutStreamingAction "lifting action that maps knowledge items into knowledge encodings."^^xsd:string)
SubClassOf(:OutStreamingAction :LoweringAtomicKOperation)
SubClassOf(:OutStreamingAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsOutStreamingEvent>))
SubClassOf(:OutStreamingAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeEncoding>))
SubClassOf(:OutStreamingAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeItem>))

# Class: :ParsingAction (parsing action)

AnnotationAssertion(rdfs:label :ParsingAction "parsing action")
SubClassOf(:ParsingAction :LiftingAtomicKOperation)
SubClassOf(:ParsingAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsParsingEvent>))
SubClassOf(:ParsingAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeManifestation>))
SubClassOf(:ParsingAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeExpression>))

# Class: :Put (put)

AnnotationAssertion(rdfs:label :Put "put")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :Put "void action whose input is a matable knowledge source and has the side-effect of setting the mutable knowledge source to a particular, fully-specified state")
SubClassOf(:Put :VoidOperation)

# Class: :QueryingOperation-KnowledgeResourceToImmutableKB (operation applying query resources to immutable KBs)

AnnotationAssertion(rdfs:label :QueryingOperation-KnowledgeResourceToImmutableKB "operation applying query resources to immutable KBs")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :QueryingOperation-KnowledgeResourceToImmutableKB "operation applying query resources to immutable KBs returning a result resource"^^xsd:string)
SubClassOf(:QueryingOperation-KnowledgeResourceToImmutableKB :BinaryOperation)
SubClassOf(:QueryingOperation-KnowledgeResourceToImmutableKB :KnowledgeOperation)
SubClassOf(:QueryingOperation-KnowledgeResourceToImmutableKB :ResultResourceOutputOperation)
SubClassOf(:QueryingOperation-KnowledgeResourceToImmutableKB ObjectAllValuesFrom(:appliesQuery <http://www.omg.org/spec/API4KP/Terminology/QueryResource>))
SubClassOf(:QueryingOperation-KnowledgeResourceToImmutableKB ObjectAllValuesFrom(:appliesQueryTo <http://www.omg.org/spec/API4KP/Terminology/ImmutableKnowledgeBase>))
SubClassOf(:QueryingOperation-KnowledgeResourceToImmutableKB ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/ResultResource>))

# Class: :QueryingResourceAction (querying action)

AnnotationAssertion(rdfs:label :QueryingResourceAction "querying action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :QueryingResourceAction "higher-order action that maps queries to horizontal operations from knowledge bases to result assests."^^xsd:string)
SubClassOf(:QueryingResourceAction :HigherOrderAtomicKOperation)
SubClassOf(:QueryingResourceAction ObjectSomeValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/QueryResource>))
SubClassOf(:QueryingResourceAction ObjectSomeValuesFrom(:hasOutput :HorizontalAction-FocusedAssetIn-ResultAssetOut))

# Class: :ResultResourceOutputOperation (:ResultResourceOutputOperation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :ResultResourceOutputOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#OutputTypeClassifier>)
SubClassOf(:ResultResourceOutputOperation :KnowledgeOperation)

# Class: :SideEffectFreeOperation (side-effect-free operation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :SideEffectFreeOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#SideEffectClassifier>)
AnnotationAssertion(rdfs:label :SideEffectFreeOperation "side-effect-free operation")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :SideEffectFreeOperation "knowledge operation with no effects beyond the output value returned")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#editorialNote> :SideEffectFreeOperation "TODO: Use the same pattern as we did with SideEffectfulOperation/SideEffectfulKnowledgeOperation")
SubClassOf(:SideEffectFreeOperation <http://www.omg.org/spec/API4KP/Terminology/Operation>)
SubClassOf(:SideEffectFreeOperation ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsSideEffectFreeEvent>))

# Class: :SideEffectfulKOperation (:SideEffectfulKOperation)

AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#note> :SideEffectfulKOperation "It is an API4KP design decision that all sideeffectful KnowledgeOperations are VoidOperations.")
EquivalentClasses(:SideEffectfulKOperation ObjectIntersectionOf(:KnowledgeOperation :SideEffectfulOperation))
SubClassOf(:SideEffectfulKOperation :VoidOperation)

# Class: :SideEffectfulOperation (side-effectful operation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :SideEffectfulOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#SideEffectClassifier>)
AnnotationAssertion(rdfs:label :SideEffectfulOperation "side-effectful operation")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :SideEffectfulOperation "knowledge operation with effects beyond the output value returned")
SubClassOf(:SideEffectfulOperation ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsSideEffectfulEvent>))

# Class: :UnaryOperation (unary operation)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :UnaryOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#ArityClassifier>)
AnnotationAssertion(rdfs:label :UnaryOperation "unary operation")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :UnaryOperation "knowledge operation with one input"^^xsd:string)
SubClassOf(:UnaryOperation <http://www.omg.org/spec/API4KP/Terminology/Operation>)
SubClassOf(:UnaryOperation ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsUnaryEvent>))

# Class: :UnmarshallingAction (unmarshalling action)

AnnotationAssertion(rdfs:label :UnmarshallingAction "unmarshalling action")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :UnmarshallingAction "lifting action that maps knowledge encodings into knowledge manifestations."^^xsd:string)
SubClassOf(:UnmarshallingAction :LiftingAtomicKOperation)
SubClassOf(:UnmarshallingAction ObjectAllValuesFrom(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventsUnmarshallingEvent>))
SubClassOf(:UnmarshallingAction ObjectAllValuesFrom(:hasInput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeEncoding>))
SubClassOf(:UnmarshallingAction ObjectAllValuesFrom(:hasOutput <http://www.omg.org/spec/API4KP/Terminology/KnowledgeManifestation>))

# Class: :Update (update)

AnnotationAssertion(rdfs:label :Update "update")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :Update "void action whose input is a mutable knowledge source and has the side-effect of setting the mutable knowledge to a new state that is the result of applying a side-effect-free action to the current state")
SubClassOf(:Update :VoidOperation)

# Class: :VoidOperation (void action)

AnnotationAssertion(<http://www.omg.org/spec/API4KP/Classifiers#metatype> :VoidOperation <http://www.omg.org/spec/API4KP/OperationClassifiers#OutputTypeClassifier>)
AnnotationAssertion(rdfs:label :VoidOperation "void action"@en)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#definition> :VoidOperation "side-effectful action with no output"^^xsd:string)
SubClassOf(:VoidOperation <http://www.omg.org/spec/API4KP/Terminology/Operation>)
SubClassOf(:VoidOperation ObjectAllValuesFrom(:hasOutput :Void))


SubClassOf(ObjectIntersectionOf(:AtomicKOperation :NonVoidOperation) :SideEffectFreeOperation)
SubClassOf(ObjectIntersectionOf(:AtomicKOperation :VoidOperation) :SideEffectfulOperation)
DisjointClasses(:HigherOrderOperation :HorizontalOperation :ImmutableKBaseOutputOperation :KPlatformOutputOperation :LiftingOperation :LoweringOperation)
DisjointClasses(:HorizontalOperation :LiftingOperation :LoweringOperation)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventshasInput>) :hasInput)
SubObjectPropertyOf(ObjectPropertyChain(<http://www.omg.org/spec/API4KP/Terminology/hasEvent> <http://www.omg.org/spec/API4KP/EventshasOutput>) :hasOutput)
)